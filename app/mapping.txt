# compiler: R8
# compiler_version: 1.5.68
# min_api: 26
# pg_map_id: eeb8f59
androidx.activity.Cancellable -> a:
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> f
    androidx.lifecycle.ViewModelStore mViewModelStore -> e
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> c
    int mContentLayoutId -> g
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> d
    1:1:androidx.savedstate.SavedStateRegistryController androidx.savedstate.SavedStateRegistryController.create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    void access$001(androidx.activity.ComponentActivity) -> a
    androidx.lifecycle.Lifecycle getLifecycle() -> a
    androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> b
    1:1:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> c
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0 -> c
    androidx.lifecycle.ViewModelStore getViewModelStore() -> d
    java.lang.Object onRetainCustomNonConfigurationInstance() -> f
    1:1:void androidx.lifecycle.LifecycleRegistry.setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    2:2:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    3:3:void androidx.savedstate.SavedStateRegistryController.performSave(android.os.Bundle):0:0 -> onSaveInstanceState
    3:3:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$a:
    androidx.activity.ComponentActivity this$0 -> b
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    androidx.activity.ComponentActivity this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    androidx.activity.ComponentActivity this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$b:
    androidx.lifecycle.ViewModelStore viewModelStore -> a
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    java.lang.reflect.Field sServedViewField -> d
    java.lang.reflect.Field sNextServedViewField -> e
    java.lang.reflect.Field sHField -> c
    int sReflectedFieldsInitialized -> b
    android.app.Activity mActivity -> a
    1:1:void initializeReflectiveFields():0:0 -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> a
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
androidx.activity.OnBackPressedCallback -> b:
    boolean mEnabled -> a
    java.util.concurrent.CopyOnWriteArrayList mCancellables -> b
    void addCancellable(androidx.activity.Cancellable) -> a
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    java.lang.Runnable mFallbackOnBackPressed -> a
    java.util.ArrayDeque mOnBackPressedCallbacks -> b
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> a
    1:1:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0 -> a
    2:2:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0:0 -> a
    3:3:void androidx.activity.OnBackPressedCallback.addCancellable(androidx.activity.Cancellable):0:0 -> a
    3:3:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback):0 -> a
    4:4:boolean androidx.activity.OnBackPressedCallback.isEnabled():0:0 -> a
    4:4:void onBackPressed():0 -> a
    5:5:void onBackPressed():0:0 -> a
    6:6:void androidx.fragment.app.FragmentManagerImpl$1.handleOnBackPressed():0:0 -> a
    6:6:void onBackPressed():0 -> a
    7:7:void androidx.fragment.app.FragmentManagerImpl.handleOnBackPressed():0:0 -> a
    7:7:void androidx.fragment.app.FragmentManagerImpl$1.handleOnBackPressed():0 -> a
    7:7:void onBackPressed():0 -> a
    8:8:boolean androidx.activity.OnBackPressedCallback.isEnabled():0:0 -> a
    8:8:void androidx.fragment.app.FragmentManagerImpl.handleOnBackPressed():0 -> a
    8:8:void androidx.fragment.app.FragmentManagerImpl$1.handleOnBackPressed():0 -> a
    8:8:void onBackPressed():0 -> a
    9:9:void androidx.fragment.app.FragmentManagerImpl.handleOnBackPressed():0:0 -> a
    9:9:void androidx.fragment.app.FragmentManagerImpl$1.handleOnBackPressed():0 -> a
    9:9:void onBackPressed():0 -> a
    10:10:void onBackPressed():0:0 -> a
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    androidx.lifecycle.Lifecycle mLifecycle -> a
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> b
    androidx.activity.OnBackPressedDispatcher this$0 -> d
    androidx.activity.Cancellable mCurrentCancellable -> c
    1:1:androidx.activity.Cancellable androidx.activity.OnBackPressedDispatcher.addCancellableCallback(androidx.activity.OnBackPressedCallback):0:0 -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> a
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
    1:1:void androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> cancel
    1:1:void cancel():0 -> cancel
    2:2:void cancel():0:0 -> cancel
    3:3:void androidx.activity.OnBackPressedCallback.removeCancellable(androidx.activity.Cancellable):0:0 -> cancel
    3:3:void cancel():0 -> cancel
    4:4:void cancel():0:0 -> cancel
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$a:
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> a
    androidx.activity.OnBackPressedDispatcher this$0 -> b
    1:1:void androidx.activity.OnBackPressedCallback.removeCancellable(androidx.activity.Cancellable):0:0 -> cancel
    1:1:void cancel():0 -> cancel
androidx.activity.OnBackPressedDispatcherOwner -> c:
    androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> b
androidx.appcompat.R$attr -> d:
androidx.appcompat.R$bool -> e:
androidx.appcompat.R$color -> f:
androidx.appcompat.R$dimen -> g:
androidx.appcompat.R$drawable -> h:
androidx.appcompat.R$id -> i:
androidx.appcompat.R$layout -> j:
androidx.appcompat.R$string -> k:
androidx.appcompat.R$style -> l:
androidx.appcompat.R$styleable -> m:
androidx.appcompat.app.ActionBar -> n:
    boolean collapseActionView() -> a
    void dispatchMenuVisibilityChanged(boolean) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    boolean onKeyShortcut(int,android.view.KeyEvent) -> a
    void setWindowTitle(java.lang.CharSequence) -> a
    androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    int getDisplayOptions() -> b
    void setDefaultDisplayHomeAsUpEnabled(boolean) -> b
    android.content.Context getThemedContext() -> c
    void setShowHideAnimationEnabled(boolean) -> c
androidx.appcompat.app.ActionBar$LayoutParams -> n$a:
    int gravity -> a
androidx.appcompat.app.ActionBar$OnMenuVisibilityListener -> n$b:
    void onMenuVisibilityChanged(boolean) -> a
androidx.appcompat.app.ActionBar$Tab -> n$c:
    java.lang.CharSequence getContentDescription() -> a
    android.view.View getCustomView() -> b
    android.graphics.drawable.Drawable getIcon() -> c
    java.lang.CharSequence getText() -> d
    void select() -> e
androidx.appcompat.app.ActionBarDrawerToggle$DelegateProvider -> o:
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    android.content.Context mContext -> a
    int mListItemLayout -> O
    int mViewSpacingRight -> l
    android.widget.Button mButtonNeutral -> w
    int mMultiChoiceItemLayout -> M
    boolean mShowTitle -> P
    int mViewSpacingLeft -> j
    int mButtonPanelSideLayout -> K
    android.os.Handler mHandler -> R
    int mCheckedItem -> I
    int mButtonIconDimen -> d
    java.lang.CharSequence mMessage -> f
    android.widget.Button mButtonPositive -> o
    android.widget.ImageView mIconView -> D
    android.widget.ListAdapter mAdapter -> H
    android.widget.Button mButtonNegative -> s
    android.graphics.drawable.Drawable mButtonNegativeIcon -> v
    android.widget.TextView mTitleView -> E
    android.graphics.drawable.Drawable mButtonNeutralIcon -> z
    android.view.View$OnClickListener mButtonHandler -> S
    android.graphics.drawable.Drawable mButtonPositiveIcon -> r
    android.graphics.drawable.Drawable mIcon -> C
    int mSingleChoiceItemLayout -> N
    boolean mViewSpacingSpecified -> n
    int mListLayout -> L
    int mViewSpacingBottom -> m
    android.os.Message mButtonPositiveMessage -> q
    androidx.core.widget.NestedScrollView mScrollView -> A
    int mAlertDialogLayout -> J
    int mViewSpacingTop -> k
    int mViewLayoutResId -> i
    java.lang.CharSequence mTitle -> e
    android.os.Message mButtonNeutralMessage -> y
    int mIconId -> B
    android.os.Message mButtonNegativeMessage -> u
    android.view.Window mWindow -> c
    android.view.View mView -> h
    android.widget.ListView mListView -> g
    java.lang.CharSequence mButtonPositiveText -> p
    java.lang.CharSequence mButtonNegativeText -> t
    androidx.appcompat.app.AppCompatDialog mDialog -> b
    android.widget.TextView mMessageView -> F
    java.lang.CharSequence mButtonNeutralText -> x
    android.view.View mCustomTitleView -> G
    int mButtonPanelLayoutHint -> Q
    1:1:boolean androidx.appcompat.app.AppCompatDialog.supportRequestWindowFeature(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window):0 -> <init>
    boolean canTextInput(android.view.View) -> a
    void centerButton(android.widget.Button) -> a
    int getIconAttributeResId(int) -> a
    void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> a
    android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> a
    void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> a
    void setTitle(java.lang.CharSequence) -> a
    void setIcon(int) -> b
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$a:
    androidx.appcompat.app.AlertController this$0 -> b
androidx.appcompat.app.AlertController$2 -> p:
    android.view.View val$top -> a
    android.view.View val$bottom -> b
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$b:
    android.content.Context mContext -> a
    android.view.View mView -> z
    android.view.LayoutInflater mInflater -> b
    java.lang.String mIsCheckedColumn -> M
    int mCheckedItem -> I
    android.content.DialogInterface$OnClickListener mOnClickListener -> x
    java.lang.CharSequence mTitle -> f
    android.database.Cursor mCursor -> K
    java.lang.CharSequence mMessage -> h
    int mViewSpacingRight -> C
    int mViewSpacingLeft -> A
    android.content.DialogInterface$OnClickListener mNeutralButtonListener -> q
    android.content.DialogInterface$OnKeyListener mOnKeyListener -> u
    java.lang.CharSequence mNeutralButtonText -> o
    android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener -> J
    int mViewLayoutResId -> y
    boolean mViewSpacingSpecified -> E
    boolean mIsMultiChoice -> G
    android.content.DialogInterface$OnClickListener mPositiveButtonListener -> k
    android.widget.ListAdapter mAdapter -> w
    android.graphics.drawable.Drawable mNeutralButtonIcon -> p
    android.view.View mCustomTitleView -> g
    android.graphics.drawable.Drawable mIcon -> d
    android.content.DialogInterface$OnDismissListener mOnDismissListener -> t
    android.content.DialogInterface$OnCancelListener mOnCancelListener -> s
    java.lang.CharSequence[] mItems -> v
    android.graphics.drawable.Drawable mPositiveButtonIcon -> j
    java.lang.String mLabelColumn -> L
    int mViewSpacingBottom -> D
    int mIconAttrId -> e
    int mViewSpacingTop -> B
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> N
    int mIconId -> c
    java.lang.CharSequence mPositiveButtonText -> i
    boolean mCancelable -> r
    java.lang.CharSequence mNegativeButtonText -> l
    boolean[] mCheckedItems -> F
    android.graphics.drawable.Drawable mNegativeButtonIcon -> m
    boolean mIsSingleChoice -> H
    android.content.DialogInterface$OnClickListener mNegativeButtonListener -> n
androidx.appcompat.app.AlertController$AlertParams$1 -> q:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> c
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> b
androidx.appcompat.app.AlertController$AlertParams$2 -> r:
    androidx.appcompat.app.AlertController$AlertParams this$0 -> f
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> d
    int mLabelIndex -> b
    int mIsCheckedIndex -> c
    androidx.appcompat.app.AlertController val$dialog -> e
androidx.appcompat.app.AlertController$AlertParams$3 -> s:
    androidx.appcompat.app.AlertController val$dialog -> b
    androidx.appcompat.app.AlertController$AlertParams this$0 -> c
androidx.appcompat.app.AlertController$AlertParams$4 -> t:
    androidx.appcompat.app.AlertController val$dialog -> c
    androidx.appcompat.app.AlertController$AlertParams this$0 -> d
    androidx.appcompat.app.AlertController$RecycleListView val$listView -> b
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$c:
    java.lang.ref.WeakReference mDialog -> a
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$d:
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    int mPaddingTopNoTitle -> b
    int mPaddingBottomNoButtons -> c
    void setHasDecor(boolean,boolean) -> a
androidx.appcompat.app.AlertDialog -> u:
    androidx.appcompat.app.AlertController mAlert -> d
    int resolveDialogTheme(android.content.Context,int) -> a
    1:1:int androidx.appcompat.app.AlertController.selectContentView():0:0 -> onCreate
    1:1:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void androidx.appcompat.app.AlertController.installContent():0:0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0 -> onCreate
    3:3:void androidx.appcompat.app.AlertController.setupView():0:0 -> onCreate
    3:3:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:void androidx.appcompat.app.AlertController.setupCustomContent(android.view.ViewGroup):0:0 -> onCreate
    4:4:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    4:4:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0 -> onCreate
    5:5:void androidx.appcompat.app.AlertController.setupView():0:0 -> onCreate
    5:5:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:void androidx.appcompat.app.AlertController.setupContent(android.view.ViewGroup):0:0 -> onCreate
    6:6:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    6:6:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0 -> onCreate
    7:7:void androidx.appcompat.app.AlertController.setupButtons(android.view.ViewGroup):0:0 -> onCreate
    7:7:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    7:7:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0 -> onCreate
    8:8:boolean androidx.appcompat.app.AlertController.shouldCenterSingleButton(android.content.Context):0:0 -> onCreate
    8:8:void androidx.appcompat.app.AlertController.setupButtons(android.view.ViewGroup):0 -> onCreate
    8:8:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    8:8:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0 -> onCreate
    9:9:void androidx.appcompat.app.AlertController.setupButtons(android.view.ViewGroup):0:0 -> onCreate
    9:9:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    9:9:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    10:10:void androidx.appcompat.app.AlertController.setupTitle(android.view.ViewGroup):0:0 -> onCreate
    10:10:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    10:10:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    10:10:void onCreate(android.os.Bundle):0 -> onCreate
    11:11:void androidx.appcompat.app.AlertController.setupView():0:0 -> onCreate
    11:11:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    11:11:void onCreate(android.os.Bundle):0 -> onCreate
    12:12:void androidx.appcompat.app.AlertController.setScrollIndicators(android.view.ViewGroup,android.view.View,int,int):0:0 -> onCreate
    12:12:void androidx.appcompat.app.AlertController.setupView():0 -> onCreate
    12:12:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    12:12:void onCreate(android.os.Bundle):0 -> onCreate
    13:13:void androidx.appcompat.app.AlertController.setupView():0:0 -> onCreate
    13:13:void androidx.appcompat.app.AlertController.installContent():0 -> onCreate
    13:13:void onCreate(android.os.Bundle):0 -> onCreate
    1:1:boolean androidx.appcompat.app.AlertController.onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
    1:1:boolean onKeyDown(int,android.view.KeyEvent):0 -> onKeyDown
    2:2:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
    1:1:boolean androidx.appcompat.app.AlertController.onKeyUp(int,android.view.KeyEvent):0:0 -> onKeyUp
    1:1:boolean onKeyUp(int,android.view.KeyEvent):0 -> onKeyUp
    2:2:boolean onKeyUp(int,android.view.KeyEvent):0:0 -> onKeyUp
    1:1:void androidx.appcompat.app.AlertController.setTitle(java.lang.CharSequence):0:0 -> setTitle
    1:1:void setTitle(java.lang.CharSequence):0 -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> u$a:
    androidx.appcompat.app.AlertController$AlertParams P -> a
    int mTheme -> b
    1:1:void <init>(android.content.Context,int):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    1:1:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    1:1:androidx.appcompat.app.AlertDialog create():0 -> a
    2:2:void androidx.appcompat.app.AlertController.setCustomTitle(android.view.View):0:0 -> a
    2:2:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    2:2:androidx.appcompat.app.AlertDialog create():0 -> a
    3:3:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    3:3:androidx.appcompat.app.AlertDialog create():0 -> a
    4:4:void androidx.appcompat.app.AlertController.setIcon(android.graphics.drawable.Drawable):0:0 -> a
    4:4:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    4:4:androidx.appcompat.app.AlertDialog create():0 -> a
    5:5:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    5:5:androidx.appcompat.app.AlertDialog create():0 -> a
    6:6:void androidx.appcompat.app.AlertController.setMessage(java.lang.CharSequence):0:0 -> a
    6:6:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    6:6:androidx.appcompat.app.AlertDialog create():0 -> a
    7:7:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    7:7:androidx.appcompat.app.AlertDialog create():0 -> a
    8:8:void androidx.appcompat.app.AlertController$AlertParams.createListView(androidx.appcompat.app.AlertController):0:0 -> a
    8:8:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    8:8:androidx.appcompat.app.AlertDialog create():0 -> a
    9:9:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    9:9:androidx.appcompat.app.AlertDialog create():0 -> a
    10:10:void androidx.appcompat.app.AlertController.setView(android.view.View,int,int,int,int):0:0 -> a
    10:10:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    10:10:androidx.appcompat.app.AlertDialog create():0 -> a
    11:11:void androidx.appcompat.app.AlertController.setView(android.view.View):0:0 -> a
    11:11:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    11:11:androidx.appcompat.app.AlertDialog create():0 -> a
    12:12:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0:0 -> a
    12:12:androidx.appcompat.app.AlertDialog create():0 -> a
    13:13:void androidx.appcompat.app.AlertController.setView(int):0:0 -> a
    13:13:void androidx.appcompat.app.AlertController$AlertParams.apply(androidx.appcompat.app.AlertController):0 -> a
    13:13:androidx.appcompat.app.AlertDialog create():0 -> a
    14:14:androidx.appcompat.app.AlertDialog create():0:0 -> a
    androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> a
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    androidx.appcompat.app.AppCompatDelegate mDelegate -> q
    android.content.res.Resources mResources -> r
    void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> a
    void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> a
    androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    1:1:void androidx.core.app.NavUtils.navigateUpTo(android.app.Activity,android.content.Intent):0:0 -> a
    1:1:void supportNavigateUpTo(android.content.Intent):0 -> a
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl.attachBaseContext(android.content.Context):0:0 -> attachBaseContext
    1:1:void attachBaseContext(android.content.Context):0 -> attachBaseContext
    void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> b
    boolean performMenuItemShortcut(int,android.view.KeyEvent) -> b
    1:1:boolean androidx.core.app.NavUtils.shouldUpRecreateTask(android.app.Activity,android.content.Intent):0:0 -> b
    1:1:boolean supportShouldUpRecreateTask(android.content.Intent):0 -> b
    android.content.Intent getSupportParentActivityIntent() -> e
    1:1:android.view.View androidx.appcompat.app.AppCompatDelegateImpl.findViewById(int):0:0 -> findViewById
    1:1:android.view.View findViewById(int):0 -> findViewById
    1:1:android.view.MenuInflater androidx.appcompat.app.AppCompatDelegateImpl.getMenuInflater():0:0 -> getMenuInflater
    1:1:android.view.MenuInflater getMenuInflater():0 -> getMenuInflater
    void supportInvalidateOptionsMenu() -> j
    androidx.appcompat.app.AppCompatDelegate getDelegate() -> k
    1:1:androidx.appcompat.app.ActionBar androidx.appcompat.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> l
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0 -> l
    void onNightModeChanged(int) -> m
    void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> n
    void onSupportContentChanged() -> o
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:androidx.appcompat.app.ActionBar androidx.appcompat.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> onConfigurationChanged
    2:2:void androidx.appcompat.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    3:3:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl.onPostCreate(android.os.Bundle):0:0 -> onPostCreate
    1:1:void onPostCreate(android.os.Bundle):0 -> onPostCreate
    1:1:androidx.appcompat.app.ActionBar androidx.appcompat.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> onPostResume
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl.onPostResume():0 -> onPostResume
    1:1:void onPostResume():0 -> onPostResume
    2:2:void androidx.appcompat.app.AppCompatDelegateImpl.onPostResume():0:0 -> onPostResume
    2:2:void onPostResume():0 -> onPostResume
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl.onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl.onStart():0:0 -> onStart
    1:1:void onStart():0 -> onStart
    1:1:androidx.core.app.TaskStackBuilder androidx.core.app.TaskStackBuilder.create(android.content.Context):0:0 -> p
    1:1:boolean onSupportNavigateUp():0 -> p
    2:2:boolean onSupportNavigateUp():0:0 -> p
    3:3:void androidx.core.app.TaskStackBuilder.startActivities(android.os.Bundle):0:0 -> p
    3:3:void androidx.core.app.TaskStackBuilder.startActivities():0 -> p
    3:3:boolean onSupportNavigateUp():0 -> p
    4:4:boolean onSupportNavigateUp():0:0 -> p
    5:5:void androidx.core.app.TaskStackBuilder.startActivities(android.os.Bundle):0:0 -> p
    5:5:void androidx.core.app.TaskStackBuilder.startActivities():0 -> p
    5:5:boolean onSupportNavigateUp():0 -> p
    6:6:boolean onSupportNavigateUp():0:0 -> p
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl.setTheme(int):0:0 -> setTheme
    1:1:void setTheme(int):0 -> setTheme
androidx.appcompat.app.AppCompatCallback -> v:
    void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> a
    androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> b
androidx.appcompat.app.AppCompatDelegate -> w:
    androidx.collection.ArraySet sActiveDelegates -> b
    java.lang.Object sActiveDelegatesLock -> c
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl.<init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback):0:0 -> a
    1:1:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback):0 -> a
    2:2:void androidx.appcompat.app.AppCompatDelegateImpl.<init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback):0:0 -> a
    2:2:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback):0 -> a
    void installViewFactory() -> a
    void markStarted(androidx.appcompat.app.AppCompatDelegate) -> a
    void onCreate(android.os.Bundle) -> a
    boolean requestWindowFeature(int) -> a
    void setContentView(android.view.View) -> a
    void setTitle(java.lang.CharSequence) -> a
    void invalidateOptionsMenu() -> b
    void markStopped(androidx.appcompat.app.AppCompatDelegate) -> b
    void setContentView(int) -> b
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    void onDestroy() -> c
    void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> c
    void onStop() -> d
androidx.appcompat.app.AppCompatDelegateImpl -> x:
    java.util.Map sLocalNightModes -> a0
    boolean sInstalledExceptionHandler -> d0
    android.view.View mStatusGuard -> x
    int mThemeResId -> O
    boolean mActivityHandlesUiMode -> P
    boolean IS_PRE_LOLLIPOP -> b0
    boolean mStarted -> L
    boolean mSubDecorInstalled -> u
    android.content.Context mContext -> e
    boolean mInvalidatePanelMenuPosted -> T
    android.view.Window mWindow -> f
    boolean mFeatureProgress -> y
    androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback -> n
    boolean mOverlayActionMode -> C
    androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater -> Z
    boolean mIsDestroyed -> M
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels -> G
    boolean mLongPressBackDown -> I
    androidx.appcompat.app.ActionBar mActionBar -> i
    java.lang.Runnable mInvalidatePanelMenuRunnable -> V
    android.view.MenuInflater mMenuInflater -> j
    android.widget.TextView mTitleView -> w
    androidx.appcompat.app.AppCompatCallback mAppCompatCallback -> h
    boolean mActivityHandlesUiModeChecked -> Q
    androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback -> m
    java.lang.CharSequence mTitle -> k
    boolean mFeatureIndeterminateProgress -> z
    android.widget.PopupWindow mActionModePopup -> q
    android.graphics.Rect mTempRect1 -> X
    androidx.appcompat.widget.DecorContentParent mDecorContentParent -> l
    int mInvalidatePanelMenuFeatures -> U
    boolean mIsFloating -> D
    boolean sAlwaysOverrideConfiguration -> e0
    java.lang.Runnable mShowActionModePopup -> r
    boolean mBaseContextAttached -> J
    java.lang.Object mHost -> d
    android.graphics.Rect mTempRect2 -> Y
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager -> S
    boolean mWindowNoTitle -> E
    boolean mHasActionBar -> A
    androidx.appcompat.widget.ActionBarContextView mActionModeView -> p
    int mLocalNightMode -> N
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager -> R
    android.view.ViewGroup mSubDecor -> v
    boolean mCreated -> K
    boolean mEnableDefaultActionBarUp -> W
    boolean mHandleNativeActionModes -> t
    int[] sWindowBackgroundStyleable -> c0
    boolean mClosingActionMenu -> F
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel -> H
    boolean mOverlayActionBar -> B
    androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback -> g
    androidx.appcompat.view.ActionMode mActionMode -> o
    androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim -> s
    1:1:androidx.appcompat.app.AppCompatActivity tryUnwrapContext():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object):0 -> <init>
    2:2:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object):0:0 -> <init>
    3:3:int getLocalNightMode():0:0 -> <init>
    3:3:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object):0 -> <init>
    4:4:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object):0:0 -> <init>
    1:1:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> a
    1:1:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0 -> a
    2:2:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> a
    3:3:int calculateNightMode():0:0 -> a
    3:3:boolean applyDayNight(boolean):0 -> a
    4:4:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager():0:0 -> a
    4:4:int mapNightMode(int):0 -> a
    4:4:boolean applyDayNight(boolean):0 -> a
    5:5:int mapNightMode(int):0:0 -> a
    5:5:boolean applyDayNight(boolean):0 -> a
    6:6:boolean updateForNightMode(int,boolean):0:0 -> a
    6:6:boolean applyDayNight(boolean):0 -> a
    7:7:boolean isActivityManifestHandlingUiMode():0:0 -> a
    7:7:boolean updateForNightMode(int,boolean):0 -> a
    7:7:boolean applyDayNight(boolean):0 -> a
    8:8:boolean updateForNightMode(int,boolean):0:0 -> a
    8:8:boolean applyDayNight(boolean):0 -> a
    9:9:void updateResourcesConfigurationForNightMode(int,boolean):0:0 -> a
    9:9:boolean updateForNightMode(int,boolean):0 -> a
    9:9:boolean applyDayNight(boolean):0 -> a
    10:10:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> a
    10:10:void updateResourcesConfigurationForNightMode(int,boolean):0 -> a
    10:10:boolean updateForNightMode(int,boolean):0 -> a
    10:10:boolean applyDayNight(boolean):0 -> a
    11:11:void updateResourcesConfigurationForNightMode(int,boolean):0:0 -> a
    11:11:boolean updateForNightMode(int,boolean):0 -> a
    11:11:boolean applyDayNight(boolean):0 -> a
    12:12:boolean updateForNightMode(int,boolean):0:0 -> a
    12:12:boolean applyDayNight(boolean):0 -> a
    13:13:boolean applyDayNight(boolean):0:0 -> a
    14:14:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager():0:0 -> a
    14:14:boolean applyDayNight(boolean):0 -> a
    15:15:boolean applyDayNight(boolean):0:0 -> a
    16:16:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    16:16:void attachToWindow(android.view.Window):0 -> a
    17:17:void attachToWindow(android.view.Window):0:0 -> a
    18:18:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> a
    18:18:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu):0 -> a
    19:19:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu):0:0 -> a
    void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> a
    20:20:boolean androidx.core.view.KeyEventDispatcher.dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> a
    20:20:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> a
    21:21:boolean dispatchKeyEvent(android.view.KeyEvent):0:0 -> a
    22:22:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> a
    22:22:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> a
    23:23:boolean dispatchKeyEvent(android.view.KeyEvent):0:0 -> a
    24:24:boolean onKeyDownPanel(int,android.view.KeyEvent):0:0 -> a
    24:24:boolean onKeyDown(int,android.view.KeyEvent):0 -> a
    24:24:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> a
    25:25:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> a
    25:25:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> a
    26:26:boolean onKeyUpPanel(int,android.view.KeyEvent):0:0 -> a
    26:26:boolean onKeyUp(int,android.view.KeyEvent):0 -> a
    26:26:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> a
    27:27:boolean onKeyUp(int,android.view.KeyEvent):0:0 -> a
    27:27:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> a
    28:28:boolean onBackPressed():0:0 -> a
    28:28:boolean onKeyUp(int,android.view.KeyEvent):0 -> a
    28:28:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> a
    29:29:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> a
    29:29:boolean onBackPressed():0 -> a
    29:29:boolean onKeyUp(int,android.view.KeyEvent):0 -> a
    29:29:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> a
    30:30:boolean onBackPressed():0:0 -> a
    30:30:boolean onKeyUp(int,android.view.KeyEvent):0 -> a
    30:30:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> a
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> a
    31:31:void androidx.core.view.LayoutInflaterCompat.setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2):0:0 -> a
    31:31:void installViewFactory():0 -> a
    32:32:void installViewFactory():0:0 -> a
    33:33:java.lang.String androidx.core.app.NavUtils.getParentActivityName(android.app.Activity):0:0 -> a
    33:33:void onCreate(android.os.Bundle):0 -> a
    34:34:androidx.appcompat.app.ActionBar peekSupportActionBar():0:0 -> a
    34:34:void onCreate(android.os.Bundle):0 -> a
    35:35:void onCreate(android.os.Bundle):0:0 -> a
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    36:36:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    36:36:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder):0 -> a
    37:37:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> a
    37:37:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    38:38:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> a
    39:39:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> a
    39:39:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    40:40:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> a
    40:40:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> a
    40:40:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    41:41:void androidx.appcompat.view.menu.ListMenuPresenter.setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> a
    41:41:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> a
    41:41:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> a
    41:41:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    42:42:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> a
    42:42:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> a
    42:42:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    43:43:void androidx.appcompat.view.menu.MenuBuilder.addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> a
    43:43:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> a
    43:43:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> a
    43:43:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    44:44:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> a
    44:44:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> a
    44:44:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    45:45:androidx.appcompat.view.menu.MenuView androidx.appcompat.view.menu.ListMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> a
    45:45:androidx.appcompat.view.menu.MenuView androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> a
    45:45:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0 -> a
    45:45:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    46:46:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> a
    46:46:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    47:47:boolean androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState.hasPanelItems():0:0 -> a
    47:47:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> a
    48:48:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> a
    boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> a
    49:49:int sanitizeWindowFeatureId(int):0:0 -> a
    49:49:boolean requestWindowFeature(int):0 -> a
    50:50:boolean requestWindowFeature(int):0:0 -> a
    51:51:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> a
    51:51:void setContentView(android.view.View):0 -> a
    52:52:void setContentView(android.view.View):0:0 -> a
    53:53:androidx.appcompat.app.ActionBar peekSupportActionBar():0:0 -> a
    53:53:void setTitle(java.lang.CharSequence):0 -> a
    54:54:void setTitle(java.lang.CharSequence):0:0 -> a
    55:55:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> a
    55:55:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    56:56:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> a
    57:57:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> a
    57:57:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    58:58:void androidx.core.widget.PopupWindowCompat.setWindowLayoutType(android.widget.PopupWindow,int):0:0 -> a
    58:58:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> a
    58:58:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    59:59:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> a
    59:59:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    60:60:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> a
    60:60:android.content.Context getActionBarThemedContext():0 -> a
    60:60:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> a
    60:60:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    61:61:android.content.Context getActionBarThemedContext():0:0 -> a
    61:61:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> a
    61:61:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    62:62:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> a
    62:62:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    63:63:android.view.Menu androidx.appcompat.view.StandaloneActionMode.getMenu():0:0 -> a
    63:63:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> a
    63:63:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    64:64:boolean androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9.onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu):0:0 -> a
    64:64:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0 -> a
    64:64:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    65:65:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback):0:0 -> a
    65:65:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    66:66:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> a
    void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> b
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> b
    1:1:void invalidateOptionsMenu():0 -> b
    2:2:void invalidateOptionsMenu():0:0 -> b
    3:3:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState):0:0 -> b
    3:3:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0 -> b
    4:4:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent):0:0 -> b
    5:5:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> b
    5:5:void setContentView(int):0 -> b
    6:6:void setContentView(int):0:0 -> b
    7:7:android.view.Window$Callback androidx.appcompat.view.WindowCallbackWrapper.getWrapped():0:0 -> b
    7:7:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams):0 -> b
    8:8:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> b
    void doInvalidatePanelMenu(int) -> c
    1:1:void cleanupAutoManagers():0:0 -> c
    1:1:void onDestroy():0 -> c
    androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> d
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> d
    1:1:void onStop():0 -> d
    2:2:void onStop():0:0 -> d
    3:3:void cleanupAutoManagers():0:0 -> d
    3:3:void onStop():0 -> d
    boolean applyDayNight() -> e
    void invalidatePanelMenu(int) -> e
    void endOnGoingFadeAnimation() -> f
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> f
    1:1:void onMenuOpened(int):0 -> f
    2:2:void onMenuOpened(int):0:0 -> f
    1:1:android.view.ViewGroup createSubDecor():0:0 -> g
    1:1:void ensureSubDecor():0 -> g
    2:2:void ensureSubDecor():0:0 -> g
    3:3:java.lang.CharSequence getTitle():0:0 -> g
    3:3:void ensureSubDecor():0 -> g
    4:4:void ensureSubDecor():0:0 -> g
    5:5:androidx.appcompat.app.ActionBar peekSupportActionBar():0:0 -> g
    5:5:void ensureSubDecor():0 -> g
    6:6:void ensureSubDecor():0:0 -> g
    7:7:void applyFixedSizeWindow():0:0 -> g
    7:7:void ensureSubDecor():0 -> g
    8:8:void ensureSubDecor():0:0 -> g
    9:9:android.view.ViewGroup createSubDecor():0:0 -> g
    9:9:void ensureSubDecor():0 -> g
    10:10:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> g
    10:10:void onPanelClosed(int):0 -> g
    11:11:void onPanelClosed(int):0:0 -> g
    void ensureWindow() -> h
    int updateStatusGuard(int) -> h
    1:1:androidx.appcompat.app.ActionBar getSupportActionBar():0:0 -> i
    1:1:android.content.Context getActionBarThemedContext():0 -> i
    2:2:android.content.Context getActionBarThemedContext():0:0 -> i
    1:1:androidx.appcompat.app.TwilightManager androidx.appcompat.app.TwilightManager.getInstance(android.content.Context):0:0 -> j
    1:1:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager():0 -> j
    2:2:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager():0:0 -> j
    android.view.Window$Callback getWindowCallback() -> k
    void initWindowDecorActionBar() -> l
    boolean shouldAnimateActionModeView() -> m
    void throwFeatureRequestIfSubDecorInstalled() -> n
    1:1:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:boolean shouldInheritContext(android.view.ViewParent):0:0 -> onCreateView
    2:2:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    3:3:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    3:3:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
androidx.appcompat.app.AppCompatDelegateImpl$1 -> x$a:
    java.lang.Thread$UncaughtExceptionHandler val$defHandler -> a
    1:1:boolean shouldWrapException(java.lang.Throwable):0:0 -> uncaughtException
    1:1:void uncaughtException(java.lang.Thread,java.lang.Throwable):0 -> uncaughtException
    2:2:void uncaughtException(java.lang.Thread,java.lang.Throwable):0:0 -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> x$b:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
androidx.appcompat.app.AppCompatDelegateImpl$3 -> y:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    1:1:int androidx.core.view.WindowInsetsCompat.getSystemWindowInsetLeft():0:0 -> a
    1:1:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    2:2:int androidx.core.view.WindowInsetsCompat.getSystemWindowInsetRight():0:0 -> a
    2:2:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    3:3:int androidx.core.view.WindowInsetsCompat.getSystemWindowInsetBottom():0:0 -> a
    3:3:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    4:4:androidx.core.view.WindowInsetsCompat androidx.core.view.WindowInsetsCompat.replaceSystemWindowInsets(int,int,int,int):0:0 -> a
    4:4:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    5:5:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$4 -> z:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
androidx.appcompat.app.AppCompatDelegateImpl$5 -> a0:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    void onAttachedFromWindow() -> a
androidx.appcompat.app.AppCompatDelegateImpl$6 -> b0:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> b0$a:
    androidx.appcompat.app.AppCompatDelegateImpl$6 this$1 -> a
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
androidx.appcompat.app.AppCompatDelegateImpl$7 -> c0:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> a
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> x$c:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> x$d:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    androidx.appcompat.view.ActionMode$Callback mWrapped -> a
    boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> a
    boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> b
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> x$d$a:
    androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1 -> a
    void onAnimationEnd(android.view.View) -> a
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> x$e:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> c
    android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> a
    1:1:boolean androidx.appcompat.view.WindowCallbackWrapper.dispatchKeyEvent(android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    1:1:boolean androidx.appcompat.view.WindowCallbackWrapper.dispatchKeyShortcutEvent(android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    1:1:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    2:2:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    3:3:androidx.appcompat.app.ActionBar androidx.appcompat.app.AppCompatDelegateImpl.getSupportActionBar():0:0 -> dispatchKeyShortcutEvent
    3:3:boolean androidx.appcompat.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    3:3:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    4:4:boolean androidx.appcompat.app.AppCompatDelegateImpl.onKeyShortcut(int,android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    4:4:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    1:1:boolean androidx.appcompat.view.WindowCallbackWrapper.onCreatePanelMenu(int,android.view.Menu):0:0 -> onCreatePanelMenu
    1:1:boolean onCreatePanelMenu(int,android.view.Menu):0 -> onCreatePanelMenu
    1:1:boolean androidx.appcompat.view.WindowCallbackWrapper.onMenuOpened(int,android.view.Menu):0:0 -> onMenuOpened
    1:1:boolean onMenuOpened(int,android.view.Menu):0 -> onMenuOpened
    2:2:boolean onMenuOpened(int,android.view.Menu):0:0 -> onMenuOpened
    1:1:void androidx.appcompat.view.WindowCallbackWrapper.onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    1:1:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    2:2:void onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    1:1:void androidx.appcompat.view.menu.MenuBuilder.setOverrideVisibleItems(boolean):0:0 -> onPreparePanel
    1:1:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    2:2:boolean androidx.appcompat.view.WindowCallbackWrapper.onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    2:2:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    3:3:void androidx.appcompat.view.menu.MenuBuilder.setOverrideVisibleItems(boolean):0:0 -> onPreparePanel
    3:3:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    1:1:void androidx.appcompat.view.WindowCallbackWrapper.onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int):0:0 -> onProvideKeyboardShortcuts
    1:1:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int):0 -> onProvideKeyboardShortcuts
    1:1:boolean androidx.appcompat.app.AppCompatDelegateImpl.isHandleNativeActionModesEnabled():0:0 -> onWindowStartingActionMode
    1:1:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0 -> onWindowStartingActionMode
    2:2:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0:0 -> onWindowStartingActionMode
    3:3:android.view.ActionMode androidx.appcompat.view.WindowCallbackWrapper.onWindowStartingActionMode(android.view.ActionMode$Callback,int):0:0 -> onWindowStartingActionMode
    3:3:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int):0 -> onWindowStartingActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> x$f:
    android.os.PowerManager mPowerManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    int getApplyableNightMode() -> c
    void onChange() -> d
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> x$g:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    android.content.BroadcastReceiver mReceiver -> a
    void cleanup() -> a
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    int getApplyableNightMode() -> c
    void onChange() -> d
    void setup() -> e
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> x$g$a:
    androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1 -> a
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> x$h:
    androidx.appcompat.app.TwilightManager mTwilightManager -> c
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> d
    android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> b
    1:1:boolean androidx.appcompat.app.TwilightManager.isNight():0:0 -> c
    1:1:int getApplyableNightMode():0 -> c
    2:2:boolean androidx.appcompat.app.TwilightManager.isStateValid():0:0 -> c
    2:2:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    2:2:int getApplyableNightMode():0 -> c
    3:3:boolean androidx.appcompat.app.TwilightManager.isNight():0:0 -> c
    3:3:int getApplyableNightMode():0 -> c
    4:4:android.location.Location androidx.appcompat.app.TwilightManager.getLastKnownLocation():0:0 -> c
    4:4:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    4:4:int getApplyableNightMode():0 -> c
    5:5:void androidx.appcompat.app.TwilightManager.updateState(android.location.Location):0:0 -> c
    5:5:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    5:5:int getApplyableNightMode():0 -> c
    6:6:androidx.appcompat.app.TwilightCalculator androidx.appcompat.app.TwilightCalculator.getInstance():0:0 -> c
    6:6:void androidx.appcompat.app.TwilightManager.updateState(android.location.Location):0 -> c
    6:6:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    6:6:int getApplyableNightMode():0 -> c
    7:7:void androidx.appcompat.app.TwilightManager.updateState(android.location.Location):0:0 -> c
    7:7:boolean androidx.appcompat.app.TwilightManager.isNight():0 -> c
    7:7:int getApplyableNightMode():0 -> c
    8:8:boolean androidx.appcompat.app.TwilightManager.isNight():0:0 -> c
    8:8:int getApplyableNightMode():0 -> c
    void onChange() -> d
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> x$i:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> j
    1:1:boolean isOutOfBounds(int,int):0:0 -> onInterceptTouchEvent
    1:1:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    2:2:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl.closePanel(int):0:0 -> onInterceptTouchEvent
    3:3:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    4:4:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> x$j:
    boolean isPrepared -> m
    boolean isHandled -> n
    androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter -> k
    boolean isOpen -> o
    boolean qwertyMode -> p
    int windowAnimations -> f
    int x -> d
    int y -> e
    int background -> b
    boolean refreshDecorView -> q
    int gravity -> c
    boolean refreshMenuContent -> r
    int featureId -> a
    android.view.View createdPanelView -> i
    android.view.View shownPanelView -> h
    android.os.Bundle frozenActionViewState -> s
    android.content.Context listPresenterContext -> l
    android.view.ViewGroup decorView -> g
    androidx.appcompat.view.menu.MenuBuilder menu -> j
    1:1:void androidx.appcompat.view.menu.MenuBuilder.addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> a
    1:1:void setMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> a
    void setStyle(android.content.Context) -> a
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> x$k:
    androidx.appcompat.app.AppCompatDelegateImpl this$0 -> b
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.app.AppCompatDialog -> d0:
    androidx.appcompat.app.AppCompatDelegate mDelegate -> b
    androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher -> c
    1:1:int getThemeResId(android.content.Context,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,int):0 -> <init>
    2:2:void <init>(android.content.Context,int):0:0 -> <init>
    3:3:int getThemeResId(android.content.Context,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,int):0 -> <init>
    4:4:void <init>(android.content.Context,int):0:0 -> <init>
    5:5:void androidx.appcompat.app.AppCompatDelegateImpl.setTheme(int):0:0 -> <init>
    5:5:void <init>(android.content.Context,int):0 -> <init>
    6:6:void <init>(android.content.Context,int):0:0 -> <init>
    androidx.appcompat.app.AppCompatDelegate getDelegate() -> a
    void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> a
    androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> a
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
    void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> b
    1:1:android.view.View androidx.appcompat.app.AppCompatDelegateImpl.findViewById(int):0:0 -> findViewById
    1:1:android.view.View findViewById(int):0 -> findViewById
androidx.appcompat.app.AppCompatDialog$1 -> d0$a:
    androidx.appcompat.app.AppCompatDialog this$0 -> b
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    int[] sOnClickAttrs -> c
    java.lang.Object[] mConstructorArgs -> a
    java.lang.Class[] sConstructorSignature -> b
    java.lang.String[] sClassPrefixList -> d
    java.util.Map sConstructorMap -> e
    1:1:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean):0:0 -> a
    1:1:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    2:2:int androidx.appcompat.view.ContextThemeWrapper.getThemeResId():0:0 -> a
    2:2:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean):0 -> a
    2:2:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    3:3:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean):0:0 -> a
    3:3:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    4:4:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0:0 -> a
    5:5:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet):0:0 -> a
    5:5:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    6:6:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet):0:0 -> a
    6:6:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    7:7:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet):0:0 -> a
    7:7:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    8:8:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet):0:0 -> a
    8:8:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    9:9:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet):0:0 -> a
    9:9:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    10:10:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet):0:0 -> a
    10:10:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    11:11:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet):0:0 -> a
    11:11:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    12:12:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet):0:0 -> a
    12:12:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    13:13:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet):0:0 -> a
    13:13:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    14:14:void androidx.appcompat.widget.AppCompatImageButton.<init>(android.content.Context,android.util.AttributeSet):0:0 -> a
    14:14:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet):0 -> a
    14:14:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    15:15:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet):0:0 -> a
    15:15:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    16:16:void androidx.appcompat.widget.AppCompatSpinner.<init>(android.content.Context,android.util.AttributeSet):0:0 -> a
    16:16:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet):0 -> a
    16:16:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    17:17:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet):0:0 -> a
    17:17:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    18:18:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet):0:0 -> a
    18:18:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    19:19:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet):0:0 -> a
    19:19:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    20:20:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet):0:0 -> a
    20:20:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    21:21:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0:0 -> a
    22:22:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet):0:0 -> a
    22:22:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    23:23:void checkOnClickListener(android.view.View,android.util.AttributeSet):0:0 -> a
    23:23:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean):0 -> a
    android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> a
    void verifyNotNull(android.view.View,java.lang.String) -> a
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$a:
    java.lang.reflect.Method mResolvedMethod -> d
    android.view.View mHostView -> b
    java.lang.String mMethodName -> c
    android.content.Context mResolvedContext -> e
    1:1:void resolveMethod(android.content.Context,java.lang.String):0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
    2:2:void onClick(android.view.View):0:0 -> onClick
androidx.appcompat.app.ResourcesFlusher -> e0:
    void androidx.core.util.DebugUtils.buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
    int androidx.core.util.Preconditions.checkArgumentNonnegative(int) -> a
    java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object,java.lang.Object) -> a
    1:1:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> a
    1:1:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    2:2:java.lang.String androidx.core.app.AppOpsManagerCompat.permissionToOp(java.lang.String):0:0 -> a
    2:2:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> a
    2:2:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    3:3:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0:0 -> a
    3:3:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    4:4:int androidx.core.app.AppOpsManagerCompat.noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    4:4:int androidx.core.content.PermissionChecker.checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String):0 -> a
    4:4:int androidx.core.content.PermissionChecker.checkSelfPermission(android.content.Context,java.lang.String):0 -> a
    5:5:void androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):0:0 -> a
    5:5:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,android.content.res.Resources,int):0 -> a
    6:6:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,android.content.res.Resources,int):0:0 -> a
    7:7:void androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):0:0 -> a
    7:7:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,java.io.InputStream):0 -> a
    8:8:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,java.io.InputStream):0:0 -> a
    9:9:void androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):0:0 -> a
    9:9:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,java.io.InputStream):0 -> a
    10:10:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,java.io.InputStream):0:0 -> a
    11:11:void androidx.core.graphics.TypefaceCompatUtil.closeQuietly(java.io.Closeable):0:0 -> a
    11:11:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,java.io.InputStream):0 -> a
    12:12:boolean androidx.core.graphics.TypefaceCompatUtil.copyToFile(java.io.File,java.io.InputStream):0:0 -> a
    int androidx.core.view.GravityCompat.getAbsoluteGravity(int,int) -> a
    13:13:java.lang.String androidx.core.app.NavUtils.getParentActivityName(android.app.Activity):0:0 -> a
    13:13:android.content.Intent androidx.core.app.NavUtils.getParentActivityIntent(android.app.Activity):0 -> a
    14:14:android.content.Intent androidx.core.app.NavUtils.getParentActivityIntent(android.app.Activity):0:0 -> a
    15:15:java.lang.String androidx.core.app.NavUtils.getParentActivityName(android.app.Activity):0:0 -> a
    15:15:android.content.Intent androidx.core.app.NavUtils.getParentActivityIntent(android.app.Activity):0 -> a
    android.content.Intent androidx.core.app.NavUtils.getParentActivityIntent(android.content.Context,android.content.ComponentName) -> a
    java.io.File androidx.core.graphics.TypefaceCompatUtil.getTempFile(android.content.Context) -> a
    16:16:void androidx.core.text.PrecomputedTextCompat$Params$Builder.<init>(android.text.TextPaint):0:0 -> a
    16:16:androidx.core.text.PrecomputedTextCompat$Params androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView):0 -> a
    17:17:androidx.core.text.PrecomputedTextCompat$Params androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView):0:0 -> a
    18:18:android.text.TextDirectionHeuristic androidx.core.widget.TextViewCompat.getTextDirectionHeuristic(android.widget.TextView):0:0 -> a
    18:18:androidx.core.text.PrecomputedTextCompat$Params androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView):0 -> a
    19:19:androidx.core.text.PrecomputedTextCompat$Params androidx.core.text.PrecomputedTextCompat$Params$Builder.build():0:0 -> a
    19:19:androidx.core.text.PrecomputedTextCompat$Params androidx.core.widget.TextViewCompat.getTextMetricsParams(android.widget.TextView):0 -> a
    int androidx.core.util.ObjectsCompat.hash(java.lang.Object[]) -> a
    boolean androidx.core.graphics.drawable.DrawableCompat.isAutoMirrored(android.graphics.drawable.Drawable) -> a
    java.nio.ByteBuffer androidx.core.graphics.TypefaceCompatUtil.mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> a
    android.view.inputmethod.InputConnection androidx.appcompat.widget.AppCompatHintHelper.onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> a
    boolean androidx.core.view.ViewParentCompat.onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> a
    boolean androidx.core.view.ViewParentCompat.onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> a
    void androidx.core.view.ViewParentCompat.onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> a
    void androidx.core.view.ViewParentCompat.onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> a
    20:20:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    20:20:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    21:21:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    21:21:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    21:21:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    22:22:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    22:22:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    22:22:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    22:22:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    23:23:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    23:23:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    23:23:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    24:24:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    24:24:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0 -> a
    25:25:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry androidx.core.content.res.FontResourcesParserCompat.parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources):0:0 -> a
    26:26:int androidx.core.content.res.FontResourcesParserCompat.getType(android.content.res.TypedArray,int):0:0 -> a
    26:26:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0 -> a
    27:27:java.util.List androidx.core.content.res.FontResourcesParserCompat.readCerts(android.content.res.Resources,int):0:0 -> a
    void androidx.core.view.LayoutInflaterCompat.setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> a
    void androidx.core.widget.TextViewCompat.setFirstBaselineToTopHeight(android.widget.TextView,int) -> a
    void androidx.core.widget.PopupWindowCompat.setOverlapAnchor(android.widget.PopupWindow,boolean) -> a
    28:28:androidx.core.text.PrecomputedTextCompat$Params androidx.core.text.PrecomputedTextCompat.getParams():0:0 -> a
    28:28:void androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat):0 -> a
    29:29:void androidx.core.widget.TextViewCompat.setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat):0:0 -> a
    void androidx.core.content.res.FontResourcesParserCompat.skip(org.xmlpull.v1.XmlPullParser) -> a
    java.util.List androidx.core.content.res.FontResourcesParserCompat.toByteArrayList(java.lang.String[]) -> a
    android.view.ActionMode$Callback androidx.core.widget.TextViewCompat.wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> a
    java.lang.String androidx.core.app.NavUtils.getParentActivityName(android.content.Context,android.content.ComponentName) -> b
    void androidx.core.widget.TextViewCompat.setLastBaselineToBottomHeight(android.widget.TextView,int) -> b
    void androidx.core.widget.TextViewCompat.setLineHeight(android.widget.TextView,int) -> c
androidx.appcompat.app.TwilightCalculator -> f0:
    long sunrise -> b
    long sunset -> a
    androidx.appcompat.app.TwilightCalculator sInstance -> d
    int state -> c
    void calculateTwilight(long,double,double) -> a
androidx.appcompat.app.TwilightManager -> g0:
    android.content.Context mContext -> a
    androidx.appcompat.app.TwilightManager sInstance -> d
    androidx.appcompat.app.TwilightManager$TwilightState mTwilightState -> c
    android.location.LocationManager mLocationManager -> b
    android.location.Location getLastKnownLocationForProvider(java.lang.String) -> a
androidx.appcompat.app.TwilightManager$TwilightState -> g0$a:
    long nextUpdate -> f
    long tomorrowSunrise -> e
    long yesterdaySunset -> b
    long todaySunset -> d
    long todaySunrise -> c
    boolean isNight -> a
androidx.appcompat.app.WindowDecorActionBar -> h0:
    android.content.Context mContext -> a
    boolean mLastMenuVisibility -> m
    androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView -> h
    boolean mHasEmbeddedTabs -> o
    boolean mDisplayHomeAsUpSet -> i
    android.view.animation.Interpolator sShowInterpolator -> C
    boolean mNowShowing -> u
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim -> v
    boolean mShowHideAnimationEnabled -> w
    boolean mContentAnimations -> q
    androidx.core.view.ViewPropertyAnimatorListener mShowListener -> z
    boolean mHiddenBySystem -> s
    androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener -> A
    androidx.appcompat.widget.ActionBarContextView mContextView -> f
    android.view.View mContentView -> g
    android.content.Context mThemedContext -> b
    androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout -> c
    androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode -> j
    android.view.animation.Interpolator sHideInterpolator -> B
    androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback -> l
    boolean mHideOnContentScroll -> x
    androidx.core.view.ViewPropertyAnimatorListener mHideListener -> y
    boolean mHiddenByApp -> r
    boolean mShowingForMode -> t
    java.util.ArrayList mMenuVisibilityListeners -> n
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> e
    androidx.appcompat.view.ActionMode mDeferredDestroyActionMode -> k
    androidx.appcompat.widget.ActionBarContainer mContainerView -> d
    int mCurWindowVisibility -> p
    1:1:boolean androidx.appcompat.widget.ToolbarWidgetWrapper.hasExpandedActionView():0:0 -> a
    1:1:boolean collapseActionView():0 -> a
    2:2:boolean collapseActionView():0:0 -> a
    3:3:void androidx.appcompat.widget.ToolbarWidgetWrapper.collapseActionView():0:0 -> a
    3:3:boolean collapseActionView():0 -> a
    void dispatchMenuVisibilityChanged(boolean) -> a
    4:4:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> a
    4:4:void init(android.view.View):0 -> a
    5:5:void init(android.view.View):0:0 -> a
    6:6:int androidx.appcompat.widget.ToolbarWidgetWrapper.getDisplayOptions():0:0 -> a
    6:6:void init(android.view.View):0 -> a
    7:7:void init(android.view.View):0:0 -> a
    8:8:boolean androidx.appcompat.view.ActionBarPolicy.enableHomeButtonByDefault():0:0 -> a
    8:8:void init(android.view.View):0 -> a
    9:9:void setHomeButtonEnabled(boolean):0:0 -> a
    9:9:void init(android.view.View):0 -> a
    10:10:boolean androidx.appcompat.view.ActionBarPolicy.hasEmbeddedTabs():0:0 -> a
    10:10:void init(android.view.View):0 -> a
    11:11:void init(android.view.View):0:0 -> a
    12:12:void setHideOnContentScrollEnabled(boolean):0:0 -> a
    12:12:void init(android.view.View):0 -> a
    13:13:void init(android.view.View):0:0 -> a
    14:14:void setElevation(float):0:0 -> a
    14:14:void init(android.view.View):0 -> a
    15:15:void init(android.view.View):0:0 -> a
    16:16:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> a
    16:16:void init(android.view.View):0 -> a
    17:17:boolean androidx.appcompat.view.ActionBarPolicy.hasEmbeddedTabs():0:0 -> a
    17:17:void onConfigurationChanged(android.content.res.Configuration):0 -> a
    18:18:void onConfigurationChanged(android.content.res.Configuration):0:0 -> a
    19:19:android.view.Menu androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl.getMenu():0:0 -> a
    19:19:boolean onKeyShortcut(int,android.view.KeyEvent):0 -> a
    20:20:boolean onKeyShortcut(int,android.view.KeyEvent):0:0 -> a
    void setWindowTitle(java.lang.CharSequence) -> a
    21:21:boolean androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl.dispatchOnCreate():0:0 -> a
    21:21:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    22:22:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback):0:0 -> a
    23:23:boolean androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl.dispatchOnCreate():0:0 -> a
    23:23:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback):0 -> a
    1:1:int androidx.appcompat.widget.ToolbarWidgetWrapper.getDisplayOptions():0:0 -> b
    1:1:int getDisplayOptions():0 -> b
    2:2:void setDisplayOptions(int,int):0:0 -> b
    2:2:void setDisplayHomeAsUpEnabled(boolean):0 -> b
    2:2:void setDefaultDisplayHomeAsUpEnabled(boolean):0 -> b
    3:3:int androidx.appcompat.widget.ToolbarWidgetWrapper.getDisplayOptions():0:0 -> b
    3:3:void setDisplayOptions(int,int):0 -> b
    3:3:void setDisplayHomeAsUpEnabled(boolean):0 -> b
    3:3:void setDefaultDisplayHomeAsUpEnabled(boolean):0 -> b
    4:4:void setDisplayOptions(int,int):0:0 -> b
    4:4:void setDisplayHomeAsUpEnabled(boolean):0 -> b
    4:4:void setDefaultDisplayHomeAsUpEnabled(boolean):0 -> b
    android.content.Context getThemedContext() -> c
    void setShowHideAnimationEnabled(boolean) -> c
    1:1:void showForActionMode():0:0 -> d
    1:1:void animateToMode(boolean):0 -> d
    2:2:void hideForActionMode():0:0 -> d
    2:2:void animateToMode(boolean):0 -> d
    3:3:boolean shouldAnimateContextView():0:0 -> d
    3:3:void animateToMode(boolean):0 -> d
    4:4:void animateToMode(boolean):0:0 -> d
    5:5:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> d
    5:5:void animateToMode(boolean):0 -> d
    6:6:long androidx.core.view.ViewPropertyAnimatorCompat.getDuration():0:0 -> d
    6:6:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat):0 -> d
    6:6:void animateToMode(boolean):0 -> d
    7:7:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setStartDelay(long):0:0 -> d
    7:7:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat):0 -> d
    7:7:void animateToMode(boolean):0 -> d
    8:8:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> d
    8:8:void animateToMode(boolean):0 -> d
    9:9:void animateToMode(boolean):0:0 -> d
    10:10:void androidx.appcompat.widget.ToolbarWidgetWrapper.setVisibility(int):0:0 -> d
    10:10:void animateToMode(boolean):0 -> d
    11:11:void animateToMode(boolean):0:0 -> d
    12:12:void androidx.appcompat.widget.ToolbarWidgetWrapper.setVisibility(int):0:0 -> d
    12:12:void animateToMode(boolean):0 -> d
    13:13:void animateToMode(boolean):0:0 -> d
    void onContentScrollStopped() -> d
    1:1:int getNavigationMode():0:0 -> e
    1:1:void setHasEmbeddedTabs(boolean):0 -> e
    2:2:int androidx.appcompat.widget.ToolbarWidgetWrapper.getNavigationMode():0:0 -> e
    2:2:int getNavigationMode():0 -> e
    2:2:void setHasEmbeddedTabs(boolean):0 -> e
    3:3:void setHasEmbeddedTabs(boolean):0:0 -> e
    4:4:void androidx.appcompat.widget.ToolbarWidgetWrapper.setCollapsible(boolean):0:0 -> e
    4:4:void setHasEmbeddedTabs(boolean):0 -> e
    5:5:void setHasEmbeddedTabs(boolean):0:0 -> e
    1:1:void doShow(boolean):0:0 -> f
    1:1:void updateVisibility(boolean):0 -> f
    2:2:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.play(androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> f
    2:2:void doShow(boolean):0 -> f
    2:2:void updateVisibility(boolean):0 -> f
    3:3:void doShow(boolean):0:0 -> f
    3:3:void updateVisibility(boolean):0 -> f
    4:4:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.play(androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> f
    4:4:void doShow(boolean):0 -> f
    4:4:void updateVisibility(boolean):0 -> f
    5:5:void doShow(boolean):0:0 -> f
    5:5:void updateVisibility(boolean):0 -> f
    6:6:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setInterpolator(android.view.animation.Interpolator):0:0 -> f
    6:6:void doShow(boolean):0 -> f
    6:6:void updateVisibility(boolean):0 -> f
    7:7:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setDuration(long):0:0 -> f
    7:7:void doShow(boolean):0 -> f
    7:7:void updateVisibility(boolean):0 -> f
    8:8:void doShow(boolean):0:0 -> f
    8:8:void updateVisibility(boolean):0 -> f
    9:9:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> f
    9:9:void doShow(boolean):0 -> f
    9:9:void updateVisibility(boolean):0 -> f
    10:10:void doShow(boolean):0:0 -> f
    10:10:void updateVisibility(boolean):0 -> f
    11:11:void updateVisibility(boolean):0:0 -> f
    12:12:void doHide(boolean):0:0 -> f
    12:12:void updateVisibility(boolean):0 -> f
    13:13:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.play(androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> f
    13:13:void doHide(boolean):0 -> f
    13:13:void updateVisibility(boolean):0 -> f
    14:14:void doHide(boolean):0:0 -> f
    14:14:void updateVisibility(boolean):0 -> f
    15:15:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.play(androidx.core.view.ViewPropertyAnimatorCompat):0:0 -> f
    15:15:void doHide(boolean):0 -> f
    15:15:void updateVisibility(boolean):0 -> f
    16:16:void doHide(boolean):0:0 -> f
    16:16:void updateVisibility(boolean):0 -> f
    17:17:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setInterpolator(android.view.animation.Interpolator):0:0 -> f
    17:17:void doHide(boolean):0 -> f
    17:17:void updateVisibility(boolean):0 -> f
    18:18:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setDuration(long):0:0 -> f
    18:18:void doHide(boolean):0 -> f
    18:18:void updateVisibility(boolean):0 -> f
    19:19:void doHide(boolean):0:0 -> f
    19:19:void updateVisibility(boolean):0 -> f
    20:20:androidx.appcompat.view.ViewPropertyAnimatorCompatSet androidx.appcompat.view.ViewPropertyAnimatorCompatSet.setListener(androidx.core.view.ViewPropertyAnimatorListener):0:0 -> f
    20:20:void doHide(boolean):0 -> f
    20:20:void updateVisibility(boolean):0 -> f
    21:21:void doHide(boolean):0:0 -> f
    21:21:void updateVisibility(boolean):0 -> f
androidx.appcompat.app.WindowDecorActionBar$1 -> h0$a:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    1:1:void androidx.appcompat.app.WindowDecorActionBar.completeDeferredDestroyActionMode():0:0 -> a
    1:1:void onAnimationEnd(android.view.View):0 -> a
    2:2:void onAnimationEnd(android.view.View):0:0 -> a
androidx.appcompat.app.WindowDecorActionBar$2 -> h0$b:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
    void onAnimationEnd(android.view.View) -> a
androidx.appcompat.app.WindowDecorActionBar$3 -> h0$c:
    androidx.appcompat.app.WindowDecorActionBar this$0 -> a
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> h0$d:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> e
    androidx.appcompat.view.ActionMode$Callback mCallback -> f
    java.lang.ref.WeakReference mCustomView -> g
    androidx.appcompat.app.WindowDecorActionBar this$0 -> h
    android.content.Context mActionModeContext -> d
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setDefaultShowAsAction(int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback):0 -> <init>
    2:2:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback):0:0 -> <init>
    1:1:android.view.ViewGroup androidx.appcompat.widget.ToolbarWidgetWrapper.getViewGroup():0:0 -> a
    1:1:void finish():0 -> a
    2:2:void finish():0:0 -> a
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
    void setCustomView(android.view.View) -> a
    void setSubtitle(int) -> a
    void setSubtitle(java.lang.CharSequence) -> a
    3:3:void androidx.appcompat.view.ActionMode.setTitleOptionalHint(boolean):0:0 -> a
    3:3:void setTitleOptionalHint(boolean):0 -> a
    4:4:void setTitleOptionalHint(boolean):0:0 -> a
    android.view.View getCustomView() -> b
    void setTitle(int) -> b
    void setTitle(java.lang.CharSequence) -> b
    android.view.Menu getMenu() -> c
    android.view.MenuInflater getMenuInflater() -> d
    java.lang.CharSequence getSubtitle() -> e
    java.lang.CharSequence getTitle() -> f
    void invalidate() -> g
    boolean isTitleOptional() -> h
androidx.appcompat.content.res.AppCompatResources -> i0:
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    java.lang.Object sColorStateCacheLock -> c
    java.util.WeakHashMap sColorStateCaches -> b
    android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> b
androidx.appcompat.graphics.drawable.DrawableWrapper -> j0:
    android.graphics.drawable.Drawable mDrawable -> b
    1:1:void setWrappedDrawable(android.graphics.drawable.Drawable):0:0 -> <init>
    1:1:void <init>(android.graphics.drawable.Drawable):0 -> <init>
    1:1:void androidx.core.graphics.drawable.DrawableCompat.jumpToCurrentState(android.graphics.drawable.Drawable):0:0 -> jumpToCurrentState
    1:1:void jumpToCurrentState():0 -> jumpToCurrentState
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setAutoMirrored(android.graphics.drawable.Drawable,boolean):0:0 -> setAutoMirrored
    1:1:void setAutoMirrored(boolean):0 -> setAutoMirrored
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    1:1:void setHotspot(float,float):0 -> setHotspot
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    1:1:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTint(android.graphics.drawable.Drawable,int):0:0 -> setTint
    1:1:void setTint(int):0 -> setTint
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> setTintList
    1:1:void setTintList(android.content.res.ColorStateList):0 -> setTintList
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> setTintMode
    1:1:void setTintMode(android.graphics.PorterDuff$Mode):0 -> setTintMode
androidx.appcompat.resources.R$drawable -> k0:
androidx.appcompat.view.ActionMode -> l0:
    java.lang.Object mTag -> b
    boolean mTitleOptionalHint -> c
    void finish() -> a
    void setCustomView(android.view.View) -> a
    void setSubtitle(int) -> a
    void setSubtitle(java.lang.CharSequence) -> a
    void setTitleOptionalHint(boolean) -> a
    android.view.View getCustomView() -> b
    void setTitle(int) -> b
    void setTitle(java.lang.CharSequence) -> b
    android.view.Menu getMenu() -> c
    android.view.MenuInflater getMenuInflater() -> d
    java.lang.CharSequence getSubtitle() -> e
    java.lang.CharSequence getTitle() -> f
    void invalidate() -> g
    boolean isTitleOptional() -> h
androidx.appcompat.view.ActionMode$Callback -> l0$a:
    boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> a
    boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> b
androidx.appcompat.view.CollapsibleActionView -> m0:
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
androidx.appcompat.view.ContextThemeWrapper -> n0:
    android.content.res.Resources$Theme mTheme -> b
    android.content.res.Configuration mOverrideConfiguration -> d
    android.content.res.Resources mResources -> e
    android.view.LayoutInflater mInflater -> c
    int mThemeResource -> a
    1:1:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean):0:0 -> a
    1:1:void initializeTheme():0 -> a
    1:1:android.content.res.Resources getResourcesInternal():0:0 -> getResources
    1:1:android.content.res.Resources getResources():0 -> getResources
androidx.appcompat.view.StandaloneActionMode -> o0:
    androidx.appcompat.view.ActionMode$Callback mCallback -> f
    androidx.appcompat.widget.ActionBarContextView mContextView -> e
    java.lang.ref.WeakReference mCustomView -> g
    boolean mFinished -> h
    androidx.appcompat.view.menu.MenuBuilder mMenu -> i
    android.content.Context mContext -> d
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setDefaultShowAsAction(int):0:0 -> <init>
    1:1:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean):0 -> <init>
    2:2:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean):0:0 -> <init>
    void finish() -> a
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
    void setCustomView(android.view.View) -> a
    void setSubtitle(int) -> a
    void setSubtitle(java.lang.CharSequence) -> a
    1:1:void androidx.appcompat.view.ActionMode.setTitleOptionalHint(boolean):0:0 -> a
    1:1:void setTitleOptionalHint(boolean):0 -> a
    2:2:void setTitleOptionalHint(boolean):0:0 -> a
    android.view.View getCustomView() -> b
    void setTitle(int) -> b
    void setTitle(java.lang.CharSequence) -> b
    android.view.Menu getMenu() -> c
    android.view.MenuInflater getMenuInflater() -> d
    java.lang.CharSequence getSubtitle() -> e
    java.lang.CharSequence getTitle() -> f
    void invalidate() -> g
    boolean isTitleOptional() -> h
androidx.appcompat.view.SupportActionModeWrapper -> p0:
    android.content.Context mContext -> a
    androidx.appcompat.view.ActionMode mWrappedObject -> b
    1:1:java.lang.Object androidx.appcompat.view.ActionMode.getTag():0:0 -> getTag
    1:1:java.lang.Object getTag():0 -> getTag
    1:1:boolean androidx.appcompat.view.ActionMode.getTitleOptionalHint():0:0 -> getTitleOptionalHint
    1:1:boolean getTitleOptionalHint():0 -> getTitleOptionalHint
    1:1:void androidx.appcompat.view.ActionMode.setTag(java.lang.Object):0:0 -> setTag
    1:1:void setTag(java.lang.Object):0 -> setTag
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> p0$a:
    android.content.Context mContext -> b
    androidx.collection.SimpleArrayMap mMenus -> d
    android.view.ActionMode$Callback mWrappedCallback -> a
    java.util.ArrayList mActionModes -> c
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> a
    1:1:android.view.Menu getMenuWrapper(android.view.Menu):0 -> a
    2:2:android.view.Menu getMenuWrapper(android.view.Menu):0:0 -> a
    boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> a
    void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> a
    boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> a
    android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> b
    boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> b
androidx.appcompat.view.SupportMenuInflater -> q0:
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> e
    java.lang.Object[] mActionProviderConstructorArguments -> b
    android.content.Context mContext -> c
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> f
    java.lang.Object[] mActionViewConstructorArguments -> a
    java.lang.Object mRealOwner -> d
    java.lang.Object findRealOwner(java.lang.Object) -> a
    1:1:void androidx.appcompat.view.SupportMenuInflater$MenuState.resetGroup():0:0 -> a
    1:1:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    2:2:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> a
    3:3:boolean androidx.appcompat.view.SupportMenuInflater$MenuState.hasAddedItem():0:0 -> a
    3:3:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    4:4:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> a
    5:5:boolean androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper.hasSubMenu():0:0 -> a
    5:5:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    6:6:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> a
    7:7:void androidx.appcompat.view.SupportMenuInflater$MenuState.addItem():0:0 -> a
    7:7:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    8:8:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> a
    9:9:void androidx.appcompat.view.SupportMenuInflater$MenuState.readGroup(android.util.AttributeSet):0:0 -> a
    9:9:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    10:10:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> a
    11:11:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> a
    11:11:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    12:12:char androidx.appcompat.view.SupportMenuInflater$MenuState.getShortcut(java.lang.String):0:0 -> a
    12:12:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> a
    12:12:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    13:13:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> a
    13:13:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    14:14:char androidx.appcompat.view.SupportMenuInflater$MenuState.getShortcut(java.lang.String):0:0 -> a
    14:14:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> a
    14:14:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    15:15:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> a
    15:15:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    16:16:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    16:16:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0 -> a
    16:16:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    17:17:void androidx.appcompat.view.SupportMenuInflater$MenuState.readItem(android.util.AttributeSet):0:0 -> a
    17:17:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0 -> a
    18:18:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu):0:0 -> a
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> q0$a:
    java.lang.Class[] PARAM_TYPES -> c
    java.lang.Object mRealOwner -> a
    java.lang.reflect.Method mMethod -> b
androidx.appcompat.view.SupportMenuInflater$MenuState -> q0$b:
    int itemCategoryOrder -> j
    char itemAlphabeticShortcut -> n
    java.lang.CharSequence itemTooltipText -> C
    char itemNumericShortcut -> p
    boolean itemEnabled -> u
    int groupOrder -> d
    int groupId -> b
    boolean itemChecked -> s
    java.lang.String itemActionViewClassName -> x
    android.content.res.ColorStateList itemIconTintList -> D
    java.lang.String itemListenerMethodName -> z
    android.view.Menu menu -> a
    boolean groupVisible -> f
    int itemActionViewLayout -> w
    androidx.appcompat.view.SupportMenuInflater this$0 -> F
    boolean itemAdded -> h
    androidx.core.view.ActionProvider itemActionProvider -> A
    int itemNumericModifiers -> q
    int itemAlphabeticModifiers -> o
    int itemIconResId -> m
    java.lang.CharSequence itemContentDescription -> B
    int itemId -> i
    int groupCheckable -> e
    int groupCategory -> c
    java.lang.CharSequence itemTitle -> k
    boolean itemVisible -> t
    java.lang.CharSequence itemTitleCondensed -> l
    java.lang.String itemActionProviderClassName -> y
    android.graphics.PorterDuff$Mode itemIconTintMode -> E
    int itemShowAsAction -> v
    boolean groupEnabled -> g
    int itemCheckable -> r
    1:1:void resetGroup():0:0 -> <init>
    1:1:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu):0 -> <init>
    android.view.SubMenu addSubMenuItem() -> a
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    1:1:java.lang.Object androidx.appcompat.view.SupportMenuInflater.getRealOwner():0:0 -> a
    1:1:void setItem(android.view.MenuItem):0 -> a
    2:2:void setItem(android.view.MenuItem):0:0 -> a
    3:3:void androidx.appcompat.view.menu.MenuItemImpl.setExclusiveCheckable(boolean):0:0 -> a
    3:3:void setItem(android.view.MenuItem):0 -> a
    4:4:void setItem(android.view.MenuItem):0:0 -> a
    5:5:void androidx.appcompat.view.menu.MenuItemWrapperICS.setExclusiveCheckable(boolean):0:0 -> a
    5:5:void setItem(android.view.MenuItem):0 -> a
    6:6:void setItem(android.view.MenuItem):0:0 -> a
    7:7:android.view.MenuItem androidx.core.view.MenuItemCompat.setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider):0:0 -> a
    7:7:void setItem(android.view.MenuItem):0 -> a
    8:8:void setItem(android.view.MenuItem):0:0 -> a
    9:9:void androidx.core.view.MenuItemCompat.setContentDescription(android.view.MenuItem,java.lang.CharSequence):0:0 -> a
    9:9:void setItem(android.view.MenuItem):0 -> a
    10:10:void setItem(android.view.MenuItem):0:0 -> a
    11:11:void androidx.core.view.MenuItemCompat.setTooltipText(android.view.MenuItem,java.lang.CharSequence):0:0 -> a
    11:11:void setItem(android.view.MenuItem):0 -> a
    12:12:void setItem(android.view.MenuItem):0:0 -> a
    13:13:void androidx.core.view.MenuItemCompat.setAlphabeticShortcut(android.view.MenuItem,char,int):0:0 -> a
    13:13:void setItem(android.view.MenuItem):0 -> a
    14:14:void setItem(android.view.MenuItem):0:0 -> a
    15:15:void androidx.core.view.MenuItemCompat.setNumericShortcut(android.view.MenuItem,char,int):0:0 -> a
    15:15:void setItem(android.view.MenuItem):0 -> a
    16:16:void setItem(android.view.MenuItem):0:0 -> a
    17:17:void androidx.core.view.MenuItemCompat.setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode):0:0 -> a
    17:17:void setItem(android.view.MenuItem):0 -> a
    18:18:void setItem(android.view.MenuItem):0:0 -> a
    19:19:void androidx.core.view.MenuItemCompat.setIconTintList(android.view.MenuItem,android.content.res.ColorStateList):0:0 -> a
    19:19:void setItem(android.view.MenuItem):0 -> a
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> r0:
    android.view.animation.Interpolator mInterpolator -> c
    androidx.core.view.ViewPropertyAnimatorListener mListener -> d
    long mDuration -> b
    boolean mIsStarted -> e
    androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener -> f
    java.util.ArrayList mAnimators -> a
    void cancel() -> a
    1:1:androidx.core.view.ViewPropertyAnimatorCompat androidx.core.view.ViewPropertyAnimatorCompat.setInterpolator(android.view.animation.Interpolator):0:0 -> b
    1:1:void start():0 -> b
    2:2:void start():0:0 -> b
    3:3:void androidx.core.view.ViewPropertyAnimatorCompat.start():0:0 -> b
    3:3:void start():0 -> b
    4:4:void start():0:0 -> b
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> r0$a:
    androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0 -> c
    boolean mProxyStarted -> a
    int mProxyEndCount -> b
    1:1:void onEnd():0:0 -> a
    1:1:void onAnimationEnd(android.view.View):0 -> a
    2:2:void androidx.appcompat.view.ViewPropertyAnimatorCompatSet.onAnimationsEnded():0:0 -> a
    2:2:void onEnd():0 -> a
    2:2:void onAnimationEnd(android.view.View):0 -> a
    void onAnimationStart(android.view.View) -> b
androidx.appcompat.view.WindowCallbackWrapper -> s0:
    android.view.Window$Callback mWrapped -> b
androidx.appcompat.view.menu.ActionMenuItem -> t0:
    char mShortcutNumericChar -> g
    android.content.res.ColorStateList mIconTintList -> o
    char mShortcutAlphabeticChar -> i
    int mShortcutAlphabeticModifiers -> j
    int mShortcutNumericModifiers -> h
    java.lang.CharSequence mTitle -> d
    java.lang.CharSequence mTitleCondensed -> e
    int mGroup -> b
    boolean mHasIconTint -> q
    int mOrdering -> c
    boolean mHasIconTintMode -> r
    int mId -> a
    android.content.Intent mIntent -> f
    java.lang.CharSequence mContentDescription -> m
    java.lang.CharSequence mTooltipText -> n
    android.content.Context mContext -> l
    android.graphics.drawable.Drawable mIconDrawable -> k
    int mFlags -> s
    android.graphics.PorterDuff$Mode mIconTintMode -> p
    androidx.core.view.ActionProvider getSupportActionProvider() -> a
    androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> a
    1:1:android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.wrap(android.graphics.drawable.Drawable):0:0 -> b
    1:1:void applyIconTint():0 -> b
    2:2:void applyIconTint():0:0 -> b
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> b
    3:3:void applyIconTint():0 -> b
    4:4:void applyIconTint():0:0 -> b
    5:5:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> b
    5:5:void applyIconTint():0 -> b
    1:1:androidx.core.internal.view.SupportMenuItem setActionView(int):0:0 -> setActionView
    1:1:android.view.MenuItem setActionView(int):0 -> setActionView
    2:2:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View):0:0 -> setActionView
    2:2:android.view.MenuItem setActionView(android.view.View):0 -> setActionView
    1:1:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    1:1:android.view.MenuItem setContentDescription(java.lang.CharSequence):0 -> setContentDescription
    1:1:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    1:1:android.view.MenuItem setTooltipText(java.lang.CharSequence):0 -> setTooltipText
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    boolean mExpandedFormat -> m
    int mMinWidth -> n
    int mSavedPaddingLeft -> o
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> j
    android.graphics.drawable.Drawable mIcon -> h
    boolean mAllowTextWithIcon -> l
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> f
    androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback -> k
    java.lang.CharSequence mTitle -> g
    int mMaxIconSize -> p
    androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> i
    1:1:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView):0:0 -> a
    1:1:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> a
    2:2:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> a
    2:2:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView):0 -> a
    2:2:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> a
    3:3:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> a
    4:4:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> a
    4:4:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> a
    5:5:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> a
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
    boolean prefersCondensedTitle() -> c
    boolean hasText() -> d
    boolean shouldAllowTextWithIcon() -> e
    1:1:boolean androidx.appcompat.view.menu.MenuItemImpl.showsTextAsAction():0:0 -> f
    1:1:void updateTextButtonVisibility():0 -> f
    2:2:void updateTextButtonVisibility():0:0 -> f
    3:3:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getContentDescription():0:0 -> f
    3:3:void updateTextButtonVisibility():0 -> f
    4:4:void updateTextButtonVisibility():0:0 -> f
    5:5:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> f
    5:5:void updateTextButtonVisibility():0 -> f
    6:6:void updateTextButtonVisibility():0:0 -> f
    7:7:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTooltipText():0:0 -> f
    7:7:void updateTextButtonVisibility():0 -> f
    8:8:void updateTextButtonVisibility():0:0 -> f
    9:9:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> f
    9:9:void updateTextButtonVisibility():0 -> f
    10:10:void androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> f
    10:10:void updateTextButtonVisibility():0 -> f
    1:1:void androidx.appcompat.view.menu.MenuItemImpl.actionFormatChanged():0:0 -> setExpandedFormat
    1:1:void setExpandedFormat(boolean):0 -> setExpandedFormat
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$a:
    androidx.appcompat.view.menu.ActionMenuItemView this$0 -> k
    1:1:androidx.appcompat.view.menu.ShowableListMenu androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback.getPopup():0:0 -> b
    1:1:androidx.appcompat.view.menu.ShowableListMenu getPopup():0 -> b
    boolean onForwardingStarted() -> c
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$b:
androidx.appcompat.view.menu.BaseMenuPresenter -> u0:
    androidx.appcompat.view.menu.MenuView mMenuView -> i
    android.content.Context mContext -> c
    android.content.Context mSystemContext -> b
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    android.view.LayoutInflater mSystemInflater -> e
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> f
    int mItemLayoutRes -> h
    int mMenuLayoutRes -> g
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    1:1:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup):0:0 -> a
    1:1:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> a
    2:2:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> a
    3:3:void androidx.appcompat.widget.ActionMenuPresenter.bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView):0:0 -> a
    3:3:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> a
    4:4:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> a
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    void setId(int) -> a
    5:5:boolean androidx.appcompat.widget.ActionMenuPresenter.shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> a
    5:5:void updateMenuView(boolean):0 -> a
    6:6:void updateMenuView(boolean):0:0 -> a
    7:7:void addItemView(android.view.View,int):0:0 -> a
    7:7:void updateMenuView(boolean):0 -> a
    8:8:void updateMenuView(boolean):0:0 -> a
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
androidx.appcompat.view.menu.BaseMenuWrapper -> v0:
    android.content.Context mContext -> a
    java.util.Map mMenuItems -> b
    java.util.Map mSubMenus -> c
    android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> a
    android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> a
androidx.appcompat.view.menu.CascadingMenuPopup -> w0:
    int mRawDropDownGravity -> n
    android.content.Context mContext -> c
    int mPopupStyleRes -> f
    android.view.View mAnchorView -> p
    int mMenuMaxWidth -> d
    boolean mForceShowIcon -> w
    int ITEM_LAYOUT -> C
    boolean mHasXOffset -> s
    androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener -> m
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
    java.util.List mShowingMenus -> j
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
    int mXOffset -> u
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> y
    int mDropDownGravity -> o
    android.view.View mShownAnchorView -> q
    int mPopupStyleAttr -> e
    boolean mShowTitle -> x
    boolean mHasYOffset -> t
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> A
    android.view.ViewTreeObserver mTreeObserver -> z
    int mYOffset -> v
    java.util.List mPendingMenus -> i
    boolean mOverflowOnly -> g
    int mLastPosition -> r
    boolean mShouldCloseImmediately -> B
    android.os.Handler mSubMenuHoverHandler -> h
    1:1:int getInitialMenuPosition():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.view.View,int,int,boolean):0 -> <init>
    2:2:void <init>(android.content.Context,android.view.View,int,int,boolean):0:0 -> <init>
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    boolean isShowing() -> a
    1:1:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    2:2:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    3:3:void androidx.appcompat.widget.ListPopupWindow.setAnimationStyle(int):0:0 -> a
    3:3:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    4:4:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    5:5:int getInitialMenuPosition():0:0 -> a
    5:5:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    6:6:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    7:7:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> a
    7:7:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    8:8:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> a
    8:8:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> a
    8:8:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    9:9:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    void setAnchorView(android.view.View) -> a
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    void setGravity(int) -> a
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    10:10:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> a
    10:10:void updateMenuView(boolean):0 -> a
    11:11:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> a
    11:11:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> a
    11:11:void updateMenuView(boolean):0 -> a
    12:12:void updateMenuView(boolean):0:0 -> a
    13:13:androidx.appcompat.view.menu.MenuAdapter androidx.appcompat.view.menu.MenuPopup.toMenuAdapter(android.widget.ListAdapter):0:0 -> a
    13:13:void updateMenuView(boolean):0 -> a
    14:14:void updateMenuView(boolean):0:0 -> a
    boolean flagActionItems() -> b
    void setForceShowIcon(boolean) -> b
    void setHorizontalOffset(int) -> b
    boolean closeMenuOnSubMenuOpened() -> c
    void setShowTitle(boolean) -> c
    void setVerticalOffset(int) -> c
    1:1:void androidx.appcompat.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> c
    1:1:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    2:2:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    3:3:void androidx.appcompat.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> c
    3:3:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    4:4:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    5:5:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0:0 -> c
    5:5:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    6:6:void androidx.appcompat.widget.MenuPopupWindow.setHoverListener(androidx.appcompat.widget.MenuItemHoverListener):0:0 -> c
    6:6:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> c
    6:6:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    7:7:void androidx.appcompat.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> c
    7:7:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> c
    7:7:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    8:8:void androidx.appcompat.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> c
    8:8:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> c
    8:8:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    9:9:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0:0 -> c
    9:9:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    10:10:void androidx.appcompat.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> c
    10:10:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> c
    10:10:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    11:11:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0:0 -> c
    11:11:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    12:12:void androidx.appcompat.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> c
    12:12:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> c
    12:12:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    13:13:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0:0 -> c
    13:13:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    14:14:void androidx.appcompat.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> c
    14:14:androidx.appcompat.widget.MenuPopupWindow createPopupWindow():0 -> c
    14:14:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    15:15:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    16:16:void androidx.appcompat.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> c
    16:16:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    17:17:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    18:18:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    18:18:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    19:19:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    19:19:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> c
    19:19:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    20:20:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> c
    20:20:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> c
    20:20:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    21:21:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> c
    21:21:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> c
    21:21:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0 -> c
    21:21:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    22:22:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    22:22:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    23:23:void androidx.appcompat.widget.MenuPopupWindow.setTouchModal(boolean):0:0 -> c
    23:23:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    24:24:void androidx.appcompat.widget.MenuPopupWindow.setEnterTransition(java.lang.Object):0:0 -> c
    24:24:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    25:25:int getNextMenuPosition(int):0:0 -> c
    25:25:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    26:26:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> c
    26:26:int getNextMenuPosition(int):0 -> c
    26:26:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    27:27:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> c
    27:27:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> c
    27:27:int getNextMenuPosition(int):0 -> c
    27:27:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    28:28:int getNextMenuPosition(int):0:0 -> c
    28:28:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    29:29:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    30:30:void androidx.appcompat.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> c
    30:30:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    31:31:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    32:32:void androidx.appcompat.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> c
    32:32:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    33:33:void androidx.appcompat.widget.ListPopupWindow.setOverlapAnchor(boolean):0:0 -> c
    33:33:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    34:34:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    35:35:void androidx.appcompat.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> c
    35:35:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    36:36:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    37:37:android.graphics.Rect androidx.appcompat.view.menu.MenuPopup.getEpicenterBounds():0:0 -> c
    37:37:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    38:38:void androidx.appcompat.widget.ListPopupWindow.setEpicenterBounds(android.graphics.Rect):0:0 -> c
    38:38:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    39:39:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    40:40:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> c
    40:40:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    41:41:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    42:42:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> c
    42:42:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    43:43:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    44:44:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> c
    44:44:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> c
    45:45:void showMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> c
    1:1:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0:0 -> d
    1:1:android.widget.ListView getListView():0 -> d
    2:2:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> d
    2:2:android.widget.ListView androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo.getListView():0 -> d
    2:2:android.widget.ListView getListView():0 -> d
    void show() -> e
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> w0$a:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
    1:1:boolean androidx.appcompat.widget.ListPopupWindow.isModal():0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    2:2:void onGlobalLayout():0:0 -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> w0$b:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> w0$c:
    androidx.appcompat.view.menu.CascadingMenuPopup this$0 -> b
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> w0$c$a:
    androidx.appcompat.view.menu.MenuBuilder val$menu -> d
    androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1 -> e
    android.view.MenuItem val$item -> c
    androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo -> b
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> w0$d:
    androidx.appcompat.view.menu.MenuBuilder menu -> b
    int position -> c
    androidx.appcompat.widget.MenuPopupWindow window -> a
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    int[] TINT_ATTRS -> d
    int mAnimations -> c
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    8:8:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    void initialize(androidx.appcompat.view.menu.MenuBuilder) -> a
    1:1:boolean androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> a
    1:1:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl):0 -> a
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    boolean mPreserveIconSpacing -> n
    int mTextAppearance -> l
    boolean mHasListDivider -> p
    android.widget.LinearLayout mContent -> j
    androidx.appcompat.view.menu.MenuItemImpl mItemData -> b
    boolean mForceShowIcon -> r
    android.widget.ImageView mIconView -> c
    android.widget.ImageView mSubMenuArrowView -> h
    android.widget.ImageView mGroupDivider -> i
    android.widget.CheckBox mCheckBox -> f
    android.widget.RadioButton mRadioButton -> d
    android.content.Context mTextAppearanceContext -> m
    android.widget.TextView mTitleView -> e
    android.view.LayoutInflater mInflater -> q
    android.widget.TextView mShortcutView -> g
    android.graphics.drawable.Drawable mBackground -> k
    android.graphics.drawable.Drawable mSubMenuArrow -> o
    1:1:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void addContentView(android.view.View,int):0:0 -> a
    1:1:void addContentView(android.view.View):0 -> a
    void addContentView(android.view.View,int) -> a
    2:2:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView):0:0 -> a
    2:2:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> a
    3:3:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> a
    3:3:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView):0 -> a
    3:3:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> a
    4:4:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> a
    5:5:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getContentDescription():0:0 -> a
    5:5:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0 -> a
    6:6:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int):0:0 -> a
    void insertCheckBox() -> a
    7:7:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> a
    7:7:void setShortcut(boolean,char):0 -> a
    8:8:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> a
    8:8:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0 -> a
    8:8:void setShortcut(boolean,char):0 -> a
    9:9:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> a
    9:9:void setShortcut(boolean,char):0 -> a
    10:10:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> a
    10:10:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0 -> a
    10:10:void setShortcut(boolean,char):0 -> a
    11:11:java.lang.String androidx.appcompat.view.menu.MenuItemImpl.getShortcutLabel():0:0 -> a
    11:11:void setShortcut(boolean,char):0 -> a
    12:12:void setShortcut(boolean,char):0:0 -> a
    void insertRadioButton() -> b
    boolean prefersCondensedTitle() -> c
    1:1:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowIcon():0:0 -> setIcon
    1:1:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    2:2:boolean androidx.appcompat.view.menu.MenuBuilder.getOptionalIconsVisible():0:0 -> setIcon
    2:2:boolean androidx.appcompat.view.menu.MenuItemImpl.shouldShowIcon():0 -> setIcon
    2:2:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    3:3:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    4:4:void insertIconView():0:0 -> setIcon
    4:4:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    5:5:void setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
androidx.appcompat.view.menu.ListMenuPresenter -> x0:
    androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter -> j
    android.content.Context mContext -> b
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    android.view.LayoutInflater mInflater -> c
    int mItemLayoutRes -> h
    int mItemIndexOffset -> f
    int mThemeRes -> g
    androidx.appcompat.view.menu.MenuPresenter$Callback mCallback -> i
    androidx.appcompat.view.menu.ExpandedMenuView mMenuView -> e
    1:1:void <init>(int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,int):0 -> <init>
    2:2:void <init>(android.content.Context,int):0:0 -> <init>
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    android.widget.ListAdapter getAdapter() -> a
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    1:1:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> a
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    2:2:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> a
    2:2:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    2:2:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    3:3:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> a
    3:3:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    4:4:android.content.Context androidx.appcompat.app.AlertDialog$Builder.getContext():0:0 -> a
    4:4:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    4:4:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    5:5:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> a
    5:5:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    6:6:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> a
    6:6:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    6:6:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    7:7:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> a
    7:7:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    8:8:void androidx.appcompat.view.menu.MenuBuilder.addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter):0:0 -> a
    8:8:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    8:8:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    9:9:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> a
    9:9:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    10:10:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener):0:0 -> a
    10:10:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    10:10:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    11:11:android.view.View androidx.appcompat.view.menu.MenuBuilder.getHeaderView():0:0 -> a
    11:11:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    11:11:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    12:12:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setCustomTitle(android.view.View):0:0 -> a
    12:12:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    12:12:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    13:13:android.graphics.drawable.Drawable androidx.appcompat.view.menu.MenuBuilder.getHeaderIcon():0:0 -> a
    13:13:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    13:13:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    14:14:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setIcon(android.graphics.drawable.Drawable):0:0 -> a
    14:14:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    14:14:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    15:15:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> a
    15:15:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    15:15:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    16:16:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> a
    16:16:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    17:17:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setOnKeyListener(android.content.DialogInterface$OnKeyListener):0:0 -> a
    17:17:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0 -> a
    17:17:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    18:18:void androidx.appcompat.view.menu.MenuDialogHelper.show(android.os.IBinder):0:0 -> a
    18:18:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    19:19:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    void updateMenuView(boolean) -> a
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    boolean flagActionItems() -> b
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> x0$a:
    androidx.appcompat.view.menu.ListMenuPresenter this$0 -> c
    int mExpandedIndex -> b
    1:1:androidx.appcompat.view.menu.MenuItemImpl androidx.appcompat.view.menu.MenuBuilder.getExpandedItem():0:0 -> a
    1:1:void findExpandedIndex():0 -> a
    2:2:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> a
    2:2:void findExpandedIndex():0 -> a
    3:3:void findExpandedIndex():0:0 -> a
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> getCount
    1:1:int getCount():0 -> getCount
    2:2:int getCount():0:0 -> getCount
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> getItem
    1:1:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0 -> getItem
    2:2:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0:0 -> getItem
androidx.appcompat.view.menu.MenuAdapter -> y0:
    android.view.LayoutInflater mInflater -> f
    androidx.appcompat.view.menu.MenuBuilder mAdapterMenu -> b
    boolean mOverflowOnly -> e
    int mItemLayoutRes -> g
    int mExpandedIndex -> c
    boolean mForceShowIcon -> d
    1:1:androidx.appcompat.view.menu.MenuItemImpl androidx.appcompat.view.menu.MenuBuilder.getExpandedItem():0:0 -> a
    1:1:void findExpandedIndex():0 -> a
    2:2:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> a
    2:2:void findExpandedIndex():0 -> a
    3:3:void findExpandedIndex():0:0 -> a
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> getCount
    1:1:int getCount():0 -> getCount
    2:2:int getCount():0:0 -> getCount
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> getItem
    1:1:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0 -> getItem
    2:2:androidx.appcompat.view.menu.MenuItemImpl getItem(int):0:0 -> getItem
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> getView
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    2:2:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    3:3:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> getView
    3:3:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    4:4:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
androidx.appcompat.view.menu.MenuBuilder -> z0:
    android.content.Context mContext -> a
    int mDefaultShowAsAction -> l
    boolean mIsActionItemsStale -> k
    java.util.ArrayList mVisibleItems -> g
    boolean mIsClosing -> u
    android.view.View mHeaderView -> p
    int[] sCategoryToOrder -> A
    boolean mPreventDispatchingItemsChanged -> q
    boolean mStructureChangedWhileDispatchPrevented -> s
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> w
    boolean mGroupDividerEnabled -> y
    java.util.ArrayList mActionItems -> i
    boolean mIsVisibleItemsStale -> h
    androidx.appcompat.view.menu.MenuItemImpl mExpandedItem -> x
    android.content.res.Resources mResources -> b
    boolean mShortcutsVisible -> d
    androidx.appcompat.view.menu.MenuBuilder$Callback mCallback -> e
    java.util.ArrayList mItems -> f
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> m
    boolean mItemsChangedWhileDispatchPrevented -> r
    boolean mOptionalIconsVisible -> t
    java.lang.CharSequence mHeaderTitle -> n
    java.util.ArrayList mNonActionItems -> j
    boolean mOverrideVisibleItems -> z
    java.util.ArrayList mTempShortcutItemList -> v
    android.graphics.drawable.Drawable mHeaderIcon -> o
    boolean mQwertyMode -> c
    1:1:void setShortcutsVisibleInner(boolean):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    1:1:int getOrdering(int):0:0 -> a
    1:1:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    2:2:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    3:3:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int):0:0 -> a
    3:3:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    4:4:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    5:5:void androidx.appcompat.view.menu.MenuItemImpl.setMenuInfo(android.view.ContextMenu$ContextMenuInfo):0:0 -> a
    5:5:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    6:6:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    7:7:int findInsertIndex(java.util.ArrayList,int):0:0 -> a
    7:7:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    8:8:int androidx.appcompat.view.menu.MenuItemImpl.getOrdering():0:0 -> a
    8:8:int findInsertIndex(java.util.ArrayList,int):0 -> a
    8:8:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    9:9:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0:0 -> a
    10:10:int getOrdering(int):0:0 -> a
    10:10:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence):0 -> a
    void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> a
    void close(boolean) -> a
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> a
    boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    11:11:char androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticShortcut():0:0 -> a
    11:11:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0 -> a
    12:12:char androidx.appcompat.view.menu.MenuItemImpl.getNumericShortcut():0:0 -> a
    12:12:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0 -> a
    13:13:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent):0:0 -> a
    14:14:android.view.SubMenu androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():0:0 -> a
    14:14:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> a
    15:15:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0:0 -> a
    16:16:char androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticShortcut():0:0 -> a
    16:16:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> a
    17:17:char androidx.appcompat.view.menu.MenuItemImpl.getNumericShortcut():0:0 -> a
    17:17:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> a
    18:18:int androidx.appcompat.view.menu.MenuItemImpl.getAlphabeticModifiers():0:0 -> a
    18:18:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> a
    19:19:int androidx.appcompat.view.menu.MenuItemImpl.getNumericModifiers():0:0 -> a
    19:19:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0 -> a
    20:20:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent):0:0 -> a
    void flagActionItems() -> a
    boolean performItemAction(android.view.MenuItem,int) -> a
    21:21:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0:0 -> a
    21:21:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    22:22:android.content.Context getContext():0:0 -> a
    22:22:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0 -> a
    22:22:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    23:23:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0:0 -> a
    23:23:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    24:24:boolean androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper.onPerformDefaultAction():0:0 -> a
    24:24:boolean androidx.appcompat.view.menu.MenuItemImpl.invoke():0 -> a
    24:24:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    25:25:androidx.core.view.ActionProvider androidx.appcompat.view.menu.MenuItemImpl.getSupportActionProvider():0:0 -> a
    25:25:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    26:26:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> a
    27:27:boolean androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper.hasSubMenu():0:0 -> a
    27:27:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    28:28:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> a
    29:29:android.content.Context getContext():0:0 -> a
    29:29:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    30:30:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> a
    31:31:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    31:31:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    32:32:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> a
    32:32:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    32:32:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    33:33:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    33:33:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    34:34:android.view.SubMenu androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():0:0 -> a
    34:34:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    35:35:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> a
    36:36:void androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper.onPrepareSubMenu(android.view.SubMenu):0:0 -> a
    36:36:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    37:37:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter):0:0 -> a
    37:37:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0 -> a
    38:38:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int):0:0 -> a
    void removeItemAtInt(int,boolean) -> a
    void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> a
    void restoreActionViewStates(android.os.Bundle) -> a
    void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    39:39:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> a
    39:39:void setExclusiveItemChecked(android.view.MenuItem):0 -> a
    40:40:void setExclusiveItemChecked(android.view.MenuItem):0:0 -> a
    41:41:android.content.res.Resources getResources():0:0 -> a
    41:41:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0 -> a
    42:42:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0:0 -> a
    43:43:android.content.Context getContext():0:0 -> a
    43:43:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0 -> a
    44:44:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View):0:0 -> a
    1:1:android.view.MenuItem add(int,int,int,java.lang.CharSequence):0:0 -> addIntentOptions
    1:1:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0 -> addIntentOptions
    2:2:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]):0:0 -> addIntentOptions
    1:1:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> addSubMenu
    1:1:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    2:2:java.lang.CharSequence androidx.appcompat.view.menu.MenuItemImpl.getTitle():0:0 -> addSubMenu
    2:2:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0 -> addSubMenu
    2:2:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    3:3:void androidx.appcompat.view.menu.MenuItemImpl.setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> addSubMenu
    3:3:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence):0 -> addSubMenu
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> b
    java.lang.String getActionViewStatesKey() -> b
    1:1:void dispatchPresenterUpdate(boolean):0:0 -> b
    1:1:void onItemsChanged(boolean):0 -> b
    2:2:void onItemsChanged(boolean):0:0 -> b
    void saveActionViewStates(android.os.Bundle) -> b
    androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> c
    java.util.ArrayList getVisibleItems() -> d
    boolean isGroupDividerEnabled() -> e
    boolean isQwertyMode() -> f
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> findItem
    1:1:android.view.MenuItem findItem(int):0 -> findItem
    2:2:android.view.MenuItem findItem(int):0:0 -> findItem
    3:3:android.view.SubMenu androidx.appcompat.view.menu.MenuItemImpl.getSubMenu():0:0 -> findItem
    3:3:android.view.MenuItem findItem(int):0 -> findItem
    4:4:android.view.MenuItem findItem(int):0:0 -> findItem
    boolean isShortcutsVisible() -> g
    void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> h
    void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> i
    void startDispatchingItemsChanged() -> j
    void stopDispatchingItemsChanged() -> k
    1:1:boolean performItemAction(android.view.MenuItem,int):0:0 -> performShortcut
    1:1:boolean performShortcut(int,android.view.KeyEvent,int):0 -> performShortcut
    2:2:boolean performShortcut(int,android.view.KeyEvent,int):0:0 -> performShortcut
    1:1:int findGroupIndex(int,int):0:0 -> removeGroup
    1:1:int findGroupIndex(int):0 -> removeGroup
    1:1:void removeGroup(int):0 -> removeGroup
    2:2:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> removeGroup
    2:2:int findGroupIndex(int,int):0 -> removeGroup
    2:2:int findGroupIndex(int):0 -> removeGroup
    2:2:void removeGroup(int):0 -> removeGroup
    3:3:void removeGroup(int):0:0 -> removeGroup
    4:4:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> removeGroup
    4:4:void removeGroup(int):0 -> removeGroup
    5:5:void removeGroup(int):0:0 -> removeGroup
    1:1:int findItemIndex(int):0:0 -> removeItem
    1:1:void removeItem(int):0 -> removeItem
    2:2:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> removeItem
    2:2:int findItemIndex(int):0 -> removeItem
    2:2:void removeItem(int):0 -> removeItem
    3:3:void removeItem(int):0:0 -> removeItem
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupCheckable
    1:1:void setGroupCheckable(int,boolean,boolean):0 -> setGroupCheckable
    2:2:void androidx.appcompat.view.menu.MenuItemImpl.setExclusiveCheckable(boolean):0:0 -> setGroupCheckable
    2:2:void setGroupCheckable(int,boolean,boolean):0 -> setGroupCheckable
    3:3:void setGroupCheckable(int,boolean,boolean):0:0 -> setGroupCheckable
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupEnabled
    1:1:void setGroupEnabled(int,boolean):0 -> setGroupEnabled
    2:2:void setGroupEnabled(int,boolean):0:0 -> setGroupEnabled
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> setGroupVisible
    1:1:void setGroupVisible(int,boolean):0 -> setGroupVisible
    2:2:void setGroupVisible(int,boolean):0:0 -> setGroupVisible
androidx.appcompat.view.menu.MenuBuilder$Callback -> z0$a:
    boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.view.menu.MenuBuilder$ItemInvoker -> z0$b:
    boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> a
androidx.appcompat.view.menu.MenuDialogHelper -> a1:
    androidx.appcompat.app.AlertDialog mDialog -> c
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> e
    androidx.appcompat.view.menu.ListMenuPresenter mPresenter -> d
    1:1:void dismiss():0:0 -> a
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    2:2:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.view.menu.MenuHelper -> b1:
androidx.appcompat.view.menu.MenuItemImpl -> c1:
    char mShortcutNumericChar -> h
    char mShortcutAlphabeticChar -> j
    android.content.res.ColorStateList mIconTintList -> t
    android.graphics.PorterDuff$Mode mIconTintMode -> u
    int mOrdering -> d
    java.lang.CharSequence mTitleCondensed -> f
    boolean mHasIconTintMode -> w
    int mGroup -> b
    androidx.appcompat.view.menu.SubMenuBuilder mSubMenu -> o
    android.view.MenuItem$OnMenuItemClickListener mClickListener -> q
    android.content.Intent mIntent -> g
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> E
    java.lang.CharSequence mTooltipText -> s
    int mFlags -> y
    android.graphics.drawable.Drawable mIconDrawable -> l
    int mIconResId -> m
    int mShortcutAlphabeticModifiers -> k
    int mShortcutNumericModifiers -> i
    java.lang.CharSequence mTitle -> e
    boolean mHasIconTint -> v
    boolean mNeedToApplyIconTint -> x
    int mCategoryOrder -> c
    android.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> C
    int mId -> a
    int mShowAsAction -> z
    java.lang.CharSequence mContentDescription -> r
    android.view.View mActionView -> A
    androidx.appcompat.view.menu.MenuBuilder mMenu -> n
    androidx.core.view.ActionProvider mActionProvider -> B
    java.lang.Runnable mItemCallback -> p
    boolean mIsActionViewExpanded -> D
    void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> a
    1:1:android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.wrap(android.graphics.drawable.Drawable):0:0 -> a
    1:1:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0 -> a
    2:2:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0:0 -> a
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
    3:3:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0 -> a
    4:4:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0:0 -> a
    5:5:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
    5:5:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0 -> a
    6:6:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable):0:0 -> a
    androidx.core.view.ActionProvider getSupportActionProvider() -> a
    void setCheckedInt(boolean) -> a
    7:7:void androidx.core.view.ActionProvider.reset():0:0 -> a
    7:7:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider):0 -> a
    8:8:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider):0:0 -> a
    char getShortcut() -> b
    void setIsActionButton(boolean) -> b
    boolean hasCollapsibleActionView() -> c
    boolean setVisibleInt(boolean) -> c
    boolean isActionButton() -> d
    boolean isExclusiveCheckable() -> e
    boolean shouldShowShortcut() -> f
    1:1:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> getIcon
    1:1:android.graphics.drawable.Drawable getIcon():0 -> getIcon
    2:2:android.graphics.drawable.Drawable getIcon():0:0 -> getIcon
    1:1:androidx.core.internal.view.SupportMenuItem setActionView(int):0:0 -> setActionView
    1:1:android.view.MenuItem setActionView(int):0 -> setActionView
    2:2:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> setActionView
    2:2:androidx.core.internal.view.SupportMenuItem setActionView(int):0 -> setActionView
    2:2:android.view.MenuItem setActionView(int):0 -> setActionView
    3:3:androidx.core.internal.view.SupportMenuItem setActionView(int):0:0 -> setActionView
    3:3:android.view.MenuItem setActionView(int):0 -> setActionView
    1:1:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence):0:0 -> setContentDescription
    1:1:android.view.MenuItem setContentDescription(java.lang.CharSequence):0 -> setContentDescription
    1:1:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int):0:0 -> setShowAsActionFlags
    1:1:android.view.MenuItem setShowAsActionFlags(int):0 -> setShowAsActionFlags
    1:1:android.content.Context androidx.appcompat.view.menu.MenuBuilder.getContext():0:0 -> setTitle
    1:1:android.view.MenuItem setTitle(int):0 -> setTitle
    2:2:android.view.MenuItem setTitle(int):0:0 -> setTitle
    1:1:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence):0:0 -> setTooltipText
    1:1:android.view.MenuItem setTooltipText(java.lang.CharSequence):0 -> setTooltipText
    1:1:void androidx.appcompat.view.menu.MenuBuilder.onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl):0:0 -> setVisible
    1:1:android.view.MenuItem setVisible(boolean):0 -> setVisible
androidx.appcompat.view.menu.MenuItemImpl$1 -> c1$a:
    androidx.appcompat.view.menu.MenuItemImpl this$0 -> a
androidx.appcompat.view.menu.MenuItemWrapperICS -> d1:
    java.lang.reflect.Method mSetExclusiveCheckableMethod -> e
    androidx.core.internal.view.SupportMenuItem mWrappedObject -> d
    1:1:android.view.View androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper.getWrappedView():0:0 -> getActionView
    1:1:android.view.View getActionView():0 -> getActionView
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> d1$a:
    android.view.ActionProvider mInner -> b
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> c
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> d1$b:
    androidx.core.view.ActionProvider$VisibilityListener mListener -> d
    boolean isVisible() -> a
    android.view.View onCreateActionView(android.view.MenuItem) -> a
    void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> a
    boolean overridesItemVisibility() -> b
    1:1:void androidx.appcompat.view.menu.MenuItemImpl$1.onActionProviderVisibilityChanged(boolean):0:0 -> onActionProviderVisibilityChanged
    1:1:void onActionProviderVisibilityChanged(boolean):0 -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> d1$c:
    android.view.CollapsibleActionView mWrappedView -> b
    void onActionViewExpanded() -> a
    void onActionViewCollapsed() -> b
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> d1$d:
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
    android.view.MenuItem$OnActionExpandListener mObject -> a
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> d1$e:
    android.view.MenuItem$OnMenuItemClickListener mObject -> a
    androidx.appcompat.view.menu.MenuItemWrapperICS this$0 -> b
androidx.appcompat.view.menu.MenuPopup -> e1:
    android.graphics.Rect mEpicenterBounds -> b
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> a
    void setAnchorView(android.view.View) -> a
    void setGravity(int) -> a
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    void setForceShowIcon(boolean) -> b
    void setHorizontalOffset(int) -> b
    boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> b
    boolean closeMenuOnSubMenuOpened() -> c
    void setShowTitle(boolean) -> c
    void setVerticalOffset(int) -> c
    android.graphics.Rect getEpicenterBounds() -> f
    1:1:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter):0:0 -> onItemClick
    1:1:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0 -> onItemClick
    2:2:void onItemClick(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemClick
androidx.appcompat.view.menu.MenuPopupHelper -> f1:
    android.content.Context mContext -> a
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    int mDropDownGravity -> g
    int mPopupStyleAttr -> d
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> k
    int mPopupStyleRes -> e
    boolean mForceShowIcon -> h
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> i
    android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener -> l
    boolean mOverflowOnly -> c
    android.view.View mAnchorView -> f
    androidx.appcompat.view.menu.MenuPopup mPopup -> j
    1:1:androidx.appcompat.view.menu.MenuPopup createPopup():0:0 -> a
    1:1:androidx.appcompat.view.menu.MenuPopup getPopup():0 -> a
    2:2:androidx.appcompat.view.menu.MenuPopup getPopup():0:0 -> a
    void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    3:3:void androidx.appcompat.view.menu.MenuPopup.setEpicenterBounds(android.graphics.Rect):0:0 -> a
    3:3:void showPopup(int,int,boolean,boolean):0 -> a
    4:4:void showPopup(int,int,boolean,boolean):0:0 -> a
    boolean isShowing() -> b
    void onDismiss() -> c
    boolean tryShow() -> d
androidx.appcompat.view.menu.MenuPopupHelper$1 -> f1$a:
    androidx.appcompat.view.menu.MenuPopupHelper this$0 -> b
androidx.appcompat.view.menu.MenuPresenter -> g1:
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> a
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    void updateMenuView(boolean) -> a
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> b
    boolean flagActionItems() -> b
androidx.appcompat.view.menu.MenuPresenter$Callback -> g1$a:
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.view.menu.MenuView -> h1:
    void initialize(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.view.menu.MenuView$ItemView -> h1$a:
    void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> a
    boolean prefersCondensedTitle() -> c
androidx.appcompat.view.menu.MenuWrapperICS -> i1:
    androidx.core.internal.view.SupportMenu mWrappedObject -> d
    1:1:void androidx.appcompat.view.menu.BaseMenuWrapper.internalClear():0:0 -> clear
    1:1:void clear():0 -> clear
    2:2:void clear():0:0 -> clear
    1:1:void androidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveGroup(int):0:0 -> removeGroup
    1:1:void removeGroup(int):0 -> removeGroup
    2:2:void removeGroup(int):0:0 -> removeGroup
    1:1:void androidx.appcompat.view.menu.BaseMenuWrapper.internalRemoveItem(int):0:0 -> removeItem
    1:1:void removeItem(int):0 -> removeItem
    2:2:void removeItem(int):0:0 -> removeItem
androidx.appcompat.view.menu.ShowableListMenu -> j1:
    boolean isShowing() -> a
    android.widget.ListView getListView() -> d
    void show() -> e
androidx.appcompat.view.menu.StandardMenuPopup -> k1:
    androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback -> p
    android.content.Context mContext -> c
    androidx.appcompat.view.menu.MenuBuilder mMenu -> d
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> m
    int mPopupStyleAttr -> h
    int mPopupStyleRes -> i
    android.view.ViewTreeObserver mTreeObserver -> q
    int mPopupMaxWidth -> g
    boolean mShowTitle -> v
    boolean mWasDismissed -> r
    boolean mHasContentWidth -> s
    androidx.appcompat.widget.MenuPopupWindow mPopup -> j
    android.view.View$OnAttachStateChangeListener mAttachStateChangeListener -> l
    android.view.View mShownAnchorView -> o
    android.view.View mAnchorView -> n
    android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener -> k
    int ITEM_LAYOUT -> w
    boolean mOverflowOnly -> f
    int mContentWidth -> t
    int mDropDownGravity -> u
    androidx.appcompat.view.menu.MenuAdapter mAdapter -> e
    void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
    boolean isShowing() -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.setForceShowIcon(boolean):0:0 -> a
    1:1:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    2:2:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    3:3:void androidx.appcompat.view.menu.MenuPopupHelper.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> a
    3:3:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    4:4:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    5:5:int androidx.appcompat.widget.ListPopupWindow.getHorizontalOffset():0:0 -> a
    5:5:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    6:6:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    7:7:boolean androidx.appcompat.view.menu.MenuPopupHelper.tryShow(int,int):0:0 -> a
    7:7:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    8:8:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    void setAnchorView(android.view.View) -> a
    void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    void setGravity(int) -> a
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> a
    void updateMenuView(boolean) -> a
    boolean flagActionItems() -> b
    1:1:void androidx.appcompat.view.menu.MenuAdapter.setForceShowIcon(boolean):0:0 -> b
    1:1:void setForceShowIcon(boolean):0 -> b
    2:2:void androidx.appcompat.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> b
    2:2:void setHorizontalOffset(int):0 -> b
    void setShowTitle(boolean) -> c
    1:1:void androidx.appcompat.widget.ListPopupWindow.setVerticalOffset(int):0:0 -> c
    1:1:void setVerticalOffset(int):0 -> c
    1:1:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> d
    1:1:android.widget.ListView getListView():0 -> d
    1:1:boolean tryShow():0:0 -> e
    1:1:void show():0 -> e
    2:2:void androidx.appcompat.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> e
    2:2:boolean tryShow():0 -> e
    2:2:void show():0 -> e
    3:3:boolean tryShow():0:0 -> e
    3:3:void show():0 -> e
    4:4:void androidx.appcompat.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> e
    4:4:boolean tryShow():0 -> e
    4:4:void show():0 -> e
    5:5:boolean tryShow():0:0 -> e
    5:5:void show():0 -> e
    6:6:void androidx.appcompat.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> e
    6:6:boolean tryShow():0 -> e
    6:6:void show():0 -> e
    7:7:boolean tryShow():0:0 -> e
    7:7:void show():0 -> e
    8:8:void androidx.appcompat.widget.ListPopupWindow.setDropDownGravity(int):0:0 -> e
    8:8:boolean tryShow():0 -> e
    8:8:void show():0 -> e
    9:9:boolean tryShow():0:0 -> e
    9:9:void show():0 -> e
    10:10:void androidx.appcompat.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> e
    10:10:boolean tryShow():0 -> e
    10:10:void show():0 -> e
    11:11:boolean tryShow():0:0 -> e
    11:11:void show():0 -> e
    12:12:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> e
    12:12:boolean tryShow():0 -> e
    12:12:void show():0 -> e
    13:13:boolean tryShow():0:0 -> e
    13:13:void show():0 -> e
    14:14:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> e
    14:14:boolean tryShow():0 -> e
    14:14:void show():0 -> e
    15:15:boolean tryShow():0:0 -> e
    15:15:void show():0 -> e
    16:16:java.lang.CharSequence androidx.appcompat.view.menu.MenuBuilder.getHeaderTitle():0:0 -> e
    16:16:boolean tryShow():0 -> e
    16:16:void show():0 -> e
    17:17:boolean tryShow():0:0 -> e
    17:17:void show():0 -> e
    18:18:void show():0:0 -> e
    1:1:void androidx.appcompat.view.menu.MenuBuilder.close():0:0 -> onDismiss
    1:1:void onDismiss():0 -> onDismiss
    2:2:void onDismiss():0:0 -> onDismiss
androidx.appcompat.view.menu.StandardMenuPopup$1 -> k1$a:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> b
    1:1:boolean androidx.appcompat.widget.ListPopupWindow.isModal():0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    2:2:void onGlobalLayout():0:0 -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> k1$b:
    androidx.appcompat.view.menu.StandardMenuPopup this$0 -> b
androidx.appcompat.view.menu.SubMenuBuilder -> l1:
    androidx.appcompat.view.menu.MenuBuilder mParentMenu -> B
    androidx.appcompat.view.menu.MenuItemImpl mItem -> C
    boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> a
    boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> b
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> b
    1:1:java.lang.String getActionViewStatesKey():0 -> b
    2:2:java.lang.String getActionViewStatesKey():0:0 -> b
    androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> c
    boolean isGroupDividerEnabled() -> e
    boolean isQwertyMode() -> f
    boolean isShortcutsVisible() -> g
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderIconInt(int):0:0 -> setHeaderIcon
    1:1:android.view.SubMenu setHeaderIcon(int):0 -> setHeaderIcon
    2:2:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderIconInt(android.graphics.drawable.Drawable):0:0 -> setHeaderIcon
    2:2:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable):0 -> setHeaderIcon
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderTitleInt(int):0:0 -> setHeaderTitle
    1:1:android.view.SubMenu setHeaderTitle(int):0 -> setHeaderTitle
    2:2:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderTitleInt(java.lang.CharSequence):0:0 -> setHeaderTitle
    2:2:android.view.SubMenu setHeaderTitle(java.lang.CharSequence):0 -> setHeaderTitle
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuBuilder.setHeaderViewInt(android.view.View):0:0 -> setHeaderView
    1:1:android.view.SubMenu setHeaderView(android.view.View):0 -> setHeaderView
androidx.appcompat.view.menu.SubMenuWrapperICS -> m1:
    androidx.core.internal.view.SupportSubMenu mSubMenu -> e
androidx.appcompat.widget.AbsActionBarView -> n1:
    androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> b
    android.content.Context mPopupContext -> c
    androidx.appcompat.widget.ActionMenuView mMenuView -> d
    boolean mEatingHover -> i
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> e
    int mContentHeight -> f
    androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim -> g
    boolean mEatingTouch -> h
    void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> a
    int measureChildView(android.view.View,int,int,int) -> a
    int positionChild(android.view.View,int,int,int,boolean) -> a
    1:1:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener.withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int):0:0 -> a
    1:1:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> a
    2:2:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0:0 -> a
    3:3:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener.withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int):0:0 -> a
    3:3:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0 -> a
    4:4:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long):0:0 -> a
    void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> b
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:int androidx.appcompat.view.ActionBarPolicy.getMaxActionButtons():0:0 -> onConfigurationChanged
    2:2:void androidx.appcompat.widget.ActionMenuPresenter.onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    3:3:void androidx.appcompat.widget.ActionMenuPresenter.onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    3:3:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> n1$a:
    boolean mCanceled -> a
    int mFinalVisibility -> b
    androidx.appcompat.widget.AbsActionBarView this$0 -> c
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.appcompat.widget.ActionBarBackgroundDrawable -> o1:
    androidx.appcompat.widget.ActionBarContainer mContainer -> a
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    android.graphics.drawable.Drawable mBackground -> f
    android.graphics.drawable.Drawable mStackedBackground -> g
    boolean mIsSplit -> i
    android.graphics.drawable.Drawable mSplitBackground -> h
    boolean mIsStacked -> j
    int mHeight -> k
    android.view.View mTabContainer -> c
    android.view.View mContextView -> e
    boolean mIsTransitioning -> b
    android.view.View mActionBarView -> d
    int getMeasuredHeightWithMargins(android.view.View) -> a
    boolean isCollapsed(android.view.View) -> b
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    android.widget.TextView mTitleView -> o
    android.widget.TextView mSubtitleView -> p
    android.view.View mCustomView -> m
    android.widget.LinearLayout mTitleLayout -> n
    android.view.View mClose -> l
    int mCloseItemLayout -> t
    int mSubtitleStyleRes -> r
    java.lang.CharSequence mTitle -> j
    boolean mTitleOptional -> s
    java.lang.CharSequence mSubtitle -> k
    int mTitleStyleRes -> q
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    9:9:int androidx.appcompat.widget.TintTypedArray.getLayoutDimension(int,int):0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    11:11:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    13:13:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    void closeMode() -> a
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.setReserveOverflow(boolean):0:0 -> a
    1:1:void initForMode(androidx.appcompat.view.ActionMode):0 -> a
    2:2:void initForMode(androidx.appcompat.view.ActionMode):0:0 -> a
    3:3:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> a
    3:3:void initForMode(androidx.appcompat.view.ActionMode):0 -> a
    4:4:androidx.appcompat.view.menu.MenuView androidx.appcompat.view.menu.BaseMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> a
    4:4:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.getMenuView(android.view.ViewGroup):0 -> a
    4:4:void initForMode(androidx.appcompat.view.ActionMode):0 -> a
    5:5:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.getMenuView(android.view.ViewGroup):0:0 -> a
    5:5:void initForMode(androidx.appcompat.view.ActionMode):0 -> a
    6:6:void initForMode(androidx.appcompat.view.ActionMode):0:0 -> a
    void initTitle() -> b
    boolean isTitleOptional() -> c
    void killMode() -> d
    boolean showOverflowMenu() -> e
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$a:
    androidx.appcompat.view.ActionMode val$mode -> b
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    int mLastSystemUiVisibility -> n
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> B
    android.graphics.drawable.Drawable mWindowContentOverlay -> g
    boolean mOverlayMode -> i
    boolean mHideOnContentScroll -> k
    androidx.appcompat.widget.ContentFrameLayout mContent -> d
    java.lang.Runnable mRemoveActionBarHideOffset -> z
    int mActionBarHeight -> b
    android.graphics.Rect mLastBaseContentInsets -> p
    int[] ATTRS -> C
    android.animation.AnimatorListenerAdapter mTopAnimatorListener -> y
    androidx.appcompat.widget.DecorToolbar mDecorToolbar -> f
    boolean mIgnoreWindowContentOverlay -> h
    android.graphics.Rect mInnerInsets -> t
    androidx.appcompat.widget.ActionBarContainer mActionBarTop -> e
    android.graphics.Rect mBaseInnerInsets -> r
    int mHideOnContentScrollReference -> m
    android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator -> x
    boolean mHasNonEmbeddedTabs -> j
    boolean mAnimatingForFling -> l
    java.lang.Runnable mAddActionBarHideOffset -> A
    int mWindowVisibility -> c
    android.graphics.Rect mBaseContentInsets -> o
    androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback -> v
    android.graphics.Rect mLastInnerInsets -> u
    android.widget.OverScroller mFlingEstimator -> w
    android.graphics.Rect mLastBaseInnerInsets -> s
    android.graphics.Rect mContentInsets -> q
    boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> a
    void init(android.content.Context) -> a
    void initFeature(int) -> a
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> a
    void onNestedScroll(android.view.View,int,int,int,int,int) -> a
    void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> a
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    void onStopNestedScroll(android.view.View,int) -> a
    1:1:void androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> a
    1:1:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> a
    2:2:void androidx.appcompat.view.menu.BaseMenuPresenter.setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> a
    2:2:void androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> a
    2:2:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> a
    3:3:void androidx.appcompat.widget.ToolbarWidgetWrapper.setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> a
    3:3:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback):0 -> a
    boolean shouldHideActionBarOnFling(float,float) -> a
    4:4:boolean androidx.appcompat.widget.ToolbarWidgetWrapper.showOverflowMenu():0:0 -> a
    4:4:boolean showOverflowMenu():0 -> a
    1:1:void androidx.appcompat.widget.ToolbarWidgetWrapper.dismissPopupMenus():0:0 -> b
    1:1:void dismissPopups():0 -> b
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> b
    1:1:boolean androidx.appcompat.widget.ToolbarWidgetWrapper.isOverflowMenuShowPending():0:0 -> c
    1:1:boolean isOverflowMenuShowPending():0 -> c
    1:1:void androidx.appcompat.widget.ToolbarWidgetWrapper.setMenuPrepared():0:0 -> d
    1:1:void setMenuPrepared():0 -> d
    1:1:boolean androidx.appcompat.widget.ToolbarWidgetWrapper.isOverflowMenuShowing():0:0 -> e
    1:1:boolean isOverflowMenuShowing():0 -> e
    1:1:boolean androidx.appcompat.widget.ToolbarWidgetWrapper.canShowOverflowMenu():0:0 -> f
    1:1:boolean canShowOverflowMenu():0 -> f
    1:1:boolean androidx.appcompat.widget.ToolbarWidgetWrapper.hideOverflowMenu():0:0 -> g
    1:1:boolean hideOverflowMenu():0 -> g
    1:1:int androidx.core.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    1:1:int getNestedScrollAxes():0 -> getNestedScrollAxes
    1:1:java.lang.CharSequence androidx.appcompat.widget.ToolbarWidgetWrapper.getTitle():0:0 -> getTitle
    1:1:java.lang.CharSequence getTitle():0 -> getTitle
    void haltActionBarHideOffsetAnimations() -> h
    boolean isInOverlayMode() -> i
    1:1:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> j
    1:1:void pullChildren():0 -> j
    2:2:void pullChildren():0:0 -> j
    3:3:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View):0:0 -> j
    3:3:void pullChildren():0 -> j
    1:1:void addActionBarHideOffset():0:0 -> onNestedFling
    1:1:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    2:2:void removeActionBarHideOffset():0:0 -> onNestedFling
    2:2:boolean onNestedFling(android.view.View,float,float,boolean):0 -> onNestedFling
    3:3:boolean onNestedFling(android.view.View,float,float,boolean):0:0 -> onNestedFling
    1:1:void androidx.core.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int):0:0 -> onNestedScrollAccepted
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    2:2:void onNestedScrollAccepted(android.view.View,android.view.View,int):0:0 -> onNestedScrollAccepted
    3:3:void androidx.appcompat.app.WindowDecorActionBar.onContentScrollStarted():0:0 -> onNestedScrollAccepted
    3:3:void onNestedScrollAccepted(android.view.View,android.view.View,int):0 -> onNestedScrollAccepted
    1:1:void postRemoveActionBarHideOffset():0:0 -> onStopNestedScroll
    1:1:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    2:2:void postAddActionBarHideOffset():0:0 -> onStopNestedScroll
    2:2:void onStopNestedScroll(android.view.View):0 -> onStopNestedScroll
    3:3:void onStopNestedScroll(android.view.View):0:0 -> onStopNestedScroll
    1:1:void androidx.appcompat.app.WindowDecorActionBar.enableContentAnimations(boolean):0:0 -> onWindowSystemUiVisibilityChanged
    1:1:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    2:2:void onWindowSystemUiVisibilityChanged(int):0:0 -> onWindowSystemUiVisibilityChanged
    3:3:void androidx.appcompat.app.WindowDecorActionBar.hideForSystem():0:0 -> onWindowSystemUiVisibilityChanged
    3:3:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    4:4:void onWindowSystemUiVisibilityChanged(int):0:0 -> onWindowSystemUiVisibilityChanged
    5:5:void androidx.appcompat.app.WindowDecorActionBar.showForSystem():0:0 -> onWindowSystemUiVisibilityChanged
    5:5:void onWindowSystemUiVisibilityChanged(int):0 -> onWindowSystemUiVisibilityChanged
    6:6:void onWindowSystemUiVisibilityChanged(int):0:0 -> onWindowSystemUiVisibilityChanged
    1:1:void androidx.appcompat.app.WindowDecorActionBar.onWindowVisibilityChanged(int):0:0 -> onWindowVisibilityChanged
    1:1:void onWindowVisibilityChanged(int):0 -> onWindowVisibilityChanged
    1:1:void androidx.appcompat.app.WindowDecorActionBar.onWindowVisibilityChanged(int):0:0 -> setActionBarVisibilityCallback
    1:1:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback):0 -> setActionBarVisibilityCallback
    2:2:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback):0:0 -> setActionBarVisibilityCallback
    1:1:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(int):0:0 -> setIcon
    1:1:void setIcon(int):0 -> setIcon
    2:2:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    2:2:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(int):0 -> setIcon
    2:2:void setIcon(int):0 -> setIcon
    3:3:void androidx.appcompat.widget.ToolbarWidgetWrapper.setIcon(android.graphics.drawable.Drawable):0:0 -> setIcon
    3:3:void setIcon(android.graphics.drawable.Drawable):0 -> setIcon
    1:1:void androidx.appcompat.widget.ToolbarWidgetWrapper.setLogo(int):0:0 -> setLogo
    1:1:void setLogo(int):0 -> setLogo
    1:1:void androidx.appcompat.widget.ToolbarWidgetWrapper.setWindowCallback(android.view.Window$Callback):0:0 -> setWindowCallback
    1:1:void setWindowCallback(android.view.Window$Callback):0 -> setWindowCallback
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$a:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> a
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$b:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> b
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$c:
    androidx.appcompat.widget.ActionBarOverlayLayout this$0 -> b
androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback -> androidx.appcompat.widget.ActionBarOverlayLayout$d:
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$e:
androidx.appcompat.widget.ActionMenuPresenter -> p1:
    boolean mReserveOverflow -> m
    boolean mReserveOverflowSet -> n
    int mWidthLimit -> o
    boolean mPendingOverflowIconSet -> l
    boolean mExpandedActionViewsExclusive -> u
    androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> B
    androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> y
    android.util.SparseBooleanArray mActionButtonGroups -> w
    boolean mMaxItemsSet -> r
    int mOpenSubMenuId -> C
    boolean mStrictWidthLimit -> s
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup -> x
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton -> j
    boolean mWidthLimitSet -> t
    androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback -> A
    androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> z
    android.graphics.drawable.Drawable mPendingOverflowIcon -> k
    int mMinCellSize -> v
    int mActionItemWidthLimit -> p
    int mMaxItems -> q
    boolean dismissPopupMenus() -> a
    boolean filterLeftoverView(android.view.ViewGroup,int) -> a
    1:1:boolean androidx.appcompat.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> a
    1:1:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0 -> a
    2:2:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup):0:0 -> a
    3:3:boolean androidx.appcompat.view.ActionBarPolicy.showsOverflowMenuButton():0:0 -> a
    3:3:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0 -> a
    4:4:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
    5:5:int androidx.appcompat.view.ActionBarPolicy.getEmbeddedMenuWidthLimit():0:0 -> a
    5:5:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0 -> a
    6:6:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
    7:7:int androidx.appcompat.view.ActionBarPolicy.getMaxActionButtons():0:0 -> a
    7:7:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0 -> a
    8:8:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    9:9:android.view.Menu androidx.appcompat.view.menu.SubMenuBuilder.getParentMenu():0:0 -> a
    9:9:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    10:10:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    11:11:android.view.MenuItem androidx.appcompat.view.menu.SubMenuBuilder.getItem():0:0 -> a
    11:11:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    12:12:android.view.View findViewForItem(android.view.MenuItem):0:0 -> a
    12:12:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    13:13:android.view.MenuItem androidx.appcompat.view.menu.SubMenuBuilder.getItem():0:0 -> a
    13:13:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    14:14:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    15:15:void androidx.appcompat.view.menu.MenuPopupHelper.setForceShowIcon(boolean):0:0 -> a
    15:15:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    16:16:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    17:17:void androidx.appcompat.view.menu.MenuPopupHelper.show():0:0 -> a
    17:17:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    18:18:boolean androidx.appcompat.view.menu.BaseMenuPresenter.onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0:0 -> a
    18:18:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    19:19:void androidx.appcompat.view.menu.MenuPopupHelper.show():0:0 -> a
    19:19:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder):0 -> a
    20:20:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getActionItems():0:0 -> a
    20:20:void updateMenuView(boolean):0 -> a
    21:21:void updateMenuView(boolean):0:0 -> a
    22:22:androidx.core.view.ActionProvider androidx.appcompat.view.menu.MenuItemImpl.getSupportActionProvider():0:0 -> a
    22:22:void updateMenuView(boolean):0 -> a
    23:23:void updateMenuView(boolean):0:0 -> a
    24:24:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> a
    24:24:void updateMenuView(boolean):0 -> a
    25:25:void updateMenuView(boolean):0:0 -> a
    26:26:boolean androidx.appcompat.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> a
    26:26:void updateMenuView(boolean):0 -> a
    27:27:void updateMenuView(boolean):0:0 -> a
    1:1:boolean androidx.appcompat.view.menu.MenuItemImpl.requiresActionButton():0:0 -> b
    1:1:boolean flagActionItems():0 -> b
    2:2:boolean androidx.appcompat.view.menu.MenuItemImpl.requestsActionButton():0:0 -> b
    2:2:boolean flagActionItems():0 -> b
    3:3:boolean flagActionItems():0:0 -> b
    4:4:boolean androidx.appcompat.view.menu.MenuItemImpl.isActionViewExpanded():0:0 -> b
    4:4:boolean flagActionItems():0 -> b
    5:5:boolean flagActionItems():0:0 -> b
    6:6:boolean androidx.appcompat.view.menu.MenuItemImpl.requiresActionButton():0:0 -> b
    6:6:boolean flagActionItems():0 -> b
    7:7:boolean flagActionItems():0:0 -> b
    8:8:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> b
    8:8:boolean flagActionItems():0 -> b
    9:9:boolean flagActionItems():0:0 -> b
    10:10:boolean androidx.appcompat.view.menu.MenuItemImpl.requestsActionButton():0:0 -> b
    10:10:boolean flagActionItems():0 -> b
    11:11:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> b
    11:11:boolean flagActionItems():0 -> b
    12:12:boolean flagActionItems():0:0 -> b
    13:13:int androidx.appcompat.view.menu.MenuItemImpl.getGroupId():0:0 -> b
    13:13:boolean flagActionItems():0 -> b
    14:14:boolean flagActionItems():0:0 -> b
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.dismiss():0:0 -> c
    1:1:boolean hideOverflowMenu():0 -> c
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.dismiss():0:0 -> d
    1:1:boolean hideSubMenus():0 -> d
    boolean isOverflowMenuShowing() -> e
    1:1:java.util.ArrayList androidx.appcompat.view.menu.MenuBuilder.getNonActionItems():0:0 -> f
    1:1:boolean showOverflowMenu():0 -> f
    2:2:boolean showOverflowMenu():0:0 -> f
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> p1$a:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    2:2:android.view.MenuItem androidx.appcompat.view.menu.SubMenuBuilder.getItem():0:0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    4:4:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.access$200(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    5:5:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    6:6:void androidx.appcompat.view.menu.MenuPopupHelper.setAnchorView(android.view.View):0:0 -> <init>
    6:6:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0 -> <init>
    7:7:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View):0:0 -> <init>
    void onDismiss() -> c
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> p1$b:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> a
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> p1$c:
    androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup -> b
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> c
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuPresenter.access$300(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> run
    1:1:void run():0 -> run
    2:2:void androidx.appcompat.view.menu.MenuBuilder.changeMenuMode():0:0 -> run
    2:2:void run():0 -> run
    3:3:void run():0:0 -> run
    4:4:androidx.appcompat.view.menu.MenuView androidx.appcompat.widget.ActionMenuPresenter.access$500(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> run
    4:4:void run():0 -> run
    5:5:void run():0:0 -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> p1$d:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> d
    1:1:void androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context):0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context):0:0 -> <init>
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
    1:1:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setFrame
    1:1:boolean setFrame(int,int,int,int):0 -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> p1$d$a:
    androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1 -> k
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> b
    boolean onForwardingStarted() -> c
    boolean onForwardingStopped() -> d
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> p1$e:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> m
    1:1:void androidx.appcompat.view.menu.MenuPopupHelper.<init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    2:2:void androidx.appcompat.view.menu.MenuPopupHelper.setGravity(int):0:0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean):0:0 -> <init>
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.widget.ActionMenuPresenter.access$000(androidx.appcompat.widget.ActionMenuPresenter):0:0 -> c
    1:1:void onDismiss():0 -> c
    2:2:void androidx.appcompat.view.menu.MenuBuilder.close():0:0 -> c
    2:2:void onDismiss():0 -> c
    3:3:void onDismiss():0:0 -> c
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> p1$f:
    androidx.appcompat.widget.ActionMenuPresenter this$0 -> b
    1:1:androidx.appcompat.view.menu.MenuPresenter$Callback androidx.appcompat.view.menu.BaseMenuPresenter.getCallback():0:0 -> a
    1:1:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0 -> a
    2:2:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean):0:0 -> a
    3:3:android.view.MenuItem androidx.appcompat.view.menu.SubMenuBuilder.getItem():0:0 -> a
    3:3:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> a
    4:4:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
    5:5:androidx.appcompat.view.menu.MenuPresenter$Callback androidx.appcompat.view.menu.BaseMenuPresenter.getCallback():0:0 -> a
    5:5:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0 -> a
    6:6:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder):0:0 -> a
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> w
    android.content.Context mPopupContext -> r
    androidx.appcompat.view.menu.MenuBuilder mMenu -> q
    int mMinCellSize -> z
    androidx.appcompat.widget.ActionMenuPresenter mPresenter -> u
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> v
    int mFormatItemsWidth -> y
    boolean mFormatItems -> x
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener -> B
    int mPopupTheme -> s
    boolean mReserveOverflow -> t
    int mGeneratedItemPadding -> A
    void initialize(androidx.appcompat.view.menu.MenuBuilder) -> a
    1:1:boolean androidx.appcompat.view.menu.MenuBuilder.performItemAction(android.view.MenuItem,int):0:0 -> a
    1:1:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl):0 -> a
    void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> a
    int measureChildForCells(android.view.View,int,int,int,int) -> b
    boolean hasSupportDividerBeforeChildAt(int) -> c
    void dismissPopupMenus() -> g
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.setReserveOverflow(boolean):0:0 -> getMenu
    1:1:android.view.Menu getMenu():0 -> getMenu
    2:2:android.view.Menu getMenu():0:0 -> getMenu
    3:3:void androidx.appcompat.view.menu.BaseMenuPresenter.setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback):0:0 -> getMenu
    3:3:android.view.Menu getMenu():0 -> getMenu
    4:4:android.view.Menu getMenu():0:0 -> getMenu
    5:5:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0:0 -> getMenu
    5:5:android.view.Menu getMenu():0 -> getMenu
    6:6:android.view.Menu getMenu():0:0 -> getMenu
    1:1:android.graphics.drawable.Drawable androidx.appcompat.widget.ActionMenuPresenter.getOverflowIcon():0:0 -> getOverflowIcon
    1:1:android.graphics.drawable.Drawable getOverflowIcon():0 -> getOverflowIcon
    androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> h
    boolean hideOverflowMenu() -> i
    1:1:boolean androidx.appcompat.widget.ActionMenuPresenter.isOverflowMenuShowPending():0:0 -> j
    1:1:boolean isOverflowMenuShowPending():0 -> j
    boolean isOverflowMenuShowing() -> k
    boolean isOverflowReserved() -> l
    androidx.appcompat.view.menu.MenuBuilder peekMenu() -> m
    boolean showOverflowMenu() -> n
    1:1:void androidx.appcompat.widget.LinearLayoutCompat.onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void onMeasureExactFormat(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    3:3:void androidx.appcompat.widget.LinearLayoutCompat.onMeasure(int,int):0:0 -> onMeasure
    3:3:void onMeasure(int,int):0 -> onMeasure
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.setExpandedActionViewsExclusive(boolean):0:0 -> setExpandedActionViewsExclusive
    1:1:void setExpandedActionViewsExclusive(boolean):0 -> setExpandedActionViewsExclusive
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.setOverflowIcon(android.graphics.drawable.Drawable):0:0 -> setOverflowIcon
    1:1:void setOverflowIcon(android.graphics.drawable.Drawable):0 -> setOverflowIcon
    1:1:void androidx.appcompat.widget.ActionMenuPresenter.setMenuView(androidx.appcompat.widget.ActionMenuView):0:0 -> setPresenter
    1:1:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter):0 -> setPresenter
androidx.appcompat.widget.ActionMenuView$ActionMenuChildView -> androidx.appcompat.widget.ActionMenuView$a:
    boolean needsDividerBefore() -> a
    boolean needsDividerAfter() -> b
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$b:
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$c:
    boolean expandable -> f
    int cellsUsed -> d
    boolean preventEdgeOffset -> g
    int extraPixels -> e
    boolean expanded -> h
    boolean isOverflowButton -> c
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$d:
    androidx.appcompat.widget.ActionMenuView this$0 -> b
    1:1:boolean androidx.appcompat.widget.Toolbar$1.onMenuItemClick(android.view.MenuItem):0:0 -> a
    1:1:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem):0 -> a
    void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> a
androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener -> androidx.appcompat.widget.ActionMenuView$e:
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    int[] TINT_ATTRS -> b
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    4:4:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    int resolveMinimumHeight(android.view.View) -> a
    void forceUniformWidth(int,int) -> b
    1:1:void setChildFrame(android.view.View,int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:boolean tryOnMeasure(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void androidx.appcompat.widget.LinearLayoutCompat.onMeasure(int,int):0:0 -> onMeasure
    2:2:void onMeasure(int,int):0 -> onMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> q1:
    int[] TINT_ATTRS -> d
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    1:1:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
androidx.appcompat.widget.AppCompatBackgroundHelper -> r1:
    androidx.appcompat.widget.TintInfo mTmpInfo -> f
    androidx.appcompat.widget.TintInfo mInternalBackgroundTint -> d
    androidx.appcompat.widget.TintInfo mBackgroundTint -> e
    android.view.View mView -> a
    androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager -> b
    int mBackgroundResId -> c
    1:1:boolean shouldApplyFrameworkTintUsingColorFilter():0:0 -> a
    1:1:void applySupportBackgroundTint():0 -> a
    2:2:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    2:2:void applySupportBackgroundTint():0 -> a
    3:3:android.graphics.PorterDuff$Mode androidx.core.view.ViewCompat.getBackgroundTintMode(android.view.View):0:0 -> a
    3:3:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    3:3:void applySupportBackgroundTint():0 -> a
    4:4:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    4:4:void applySupportBackgroundTint():0 -> a
    5:5:void applySupportBackgroundTint():0:0 -> a
    6:6:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    void onSetBackgroundResource(int) -> a
    void setInternalBackgroundTint(android.content.res.ColorStateList) -> a
    void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> a
    android.content.res.ColorStateList getSupportBackgroundTintList() -> b
    void setSupportBackgroundTintList(android.content.res.ColorStateList) -> b
    android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> c
    void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> d
androidx.appcompat.widget.AppCompatButton -> s1:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.autoSizeText():0:0 -> onLayout
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.autoSizeText():0:0 -> onTextChanged
    1:1:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.setAllCaps(boolean):0:0 -> setSupportAllCaps
    1:1:void setSupportAllCaps(boolean):0 -> setSupportAllCaps
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.setTextSize(int,float):0:0 -> setTextSize
    1:1:void setTextSize(int,float):0 -> setTextSize
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.setTextSizeInternal(int,float):0:0 -> setTextSize
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.setTextSize(int,float):0 -> setTextSize
    2:2:void setTextSize(int,float):0 -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> t1:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> d
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatCompoundButtonHelper.getSupportButtonTintList():0:0 -> getSupportButtonTintList
    1:1:android.content.res.ColorStateList getSupportButtonTintList():0 -> getSupportButtonTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatCompoundButtonHelper.getSupportButtonTintMode():0:0 -> getSupportButtonTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportButtonTintMode():0 -> getSupportButtonTintMode
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.onSetButtonDrawable():0:0 -> setButtonDrawable
    1:1:void setButtonDrawable(android.graphics.drawable.Drawable):0 -> setButtonDrawable
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.setSupportButtonTintList(android.content.res.ColorStateList):0:0 -> setSupportButtonTintList
    1:1:void setSupportButtonTintList(android.content.res.ColorStateList):0 -> setSupportButtonTintList
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportButtonTintMode
    1:1:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> u1:
    int[] TINT_ATTRS -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> v1:
    android.content.res.ColorStateList mButtonTintList -> b
    boolean mHasButtonTintMode -> e
    boolean mSkipNextApply -> f
    android.widget.CompoundButton mView -> a
    android.graphics.PorterDuff$Mode mButtonTintMode -> c
    boolean mHasButtonTint -> d
    1:1:android.graphics.drawable.Drawable androidx.core.widget.CompoundButtonCompat.getButtonDrawable(android.widget.CompoundButton):0:0 -> a
    1:1:void applyButtonTint():0 -> a
    2:2:void applyButtonTint():0:0 -> a
    3:3:android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.wrap(android.graphics.drawable.Drawable):0:0 -> a
    3:3:void applyButtonTint():0 -> a
    4:4:void applyButtonTint():0:0 -> a
    5:5:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
    5:5:void applyButtonTint():0 -> a
    6:6:void applyButtonTint():0:0 -> a
    7:7:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
    7:7:void applyButtonTint():0 -> a
    8:8:void applyButtonTint():0:0 -> a
    int getCompoundPaddingLeft(int) -> a
    9:9:void androidx.core.widget.CompoundButtonCompat.setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList):0:0 -> a
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    10:10:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    11:11:void androidx.core.widget.CompoundButtonCompat.setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode):0:0 -> a
    11:11:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    12:12:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
androidx.appcompat.widget.AppCompatDrawableManager -> w1:
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> b
    androidx.appcompat.widget.ResourceManagerInternal mResourceManager -> a
    androidx.appcompat.widget.AppCompatDrawableManager INSTANCE -> c
    androidx.appcompat.widget.AppCompatDrawableManager get() -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> a
    android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> a
    void onConfigurationChanged(android.content.Context) -> a
    void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> a
    android.content.res.ColorStateList getTintList(android.content.Context,int) -> b
    void preload() -> b
androidx.appcompat.widget.AppCompatDrawableManager$1 -> w1$a:
    int[] TINT_CHECKABLE_BUTTON_LIST -> f
    int[] TINT_COLOR_CONTROL_NORMAL -> b
    int[] COLORFILTER_COLOR_CONTROL_ACTIVATED -> c
    int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY -> d
    int[] TINT_COLOR_CONTROL_STATE_LIST -> e
    int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL -> a
    boolean arrayContains(int[],int) -> a
    android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> a
    android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> a
    android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> a
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> a
    1:1:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0 -> a
    2:2:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode):0:0 -> a
    3:3:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> a
    3:3:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> a
    4:4:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> a
    5:5:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> a
    5:5:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> a
    6:6:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> a
    7:7:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> a
    7:7:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> a
    8:8:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> a
    9:9:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> a
    9:9:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> a
    10:10:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> a
    11:11:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> a
    11:11:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> a
    12:12:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> a
    13:13:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> a
    13:13:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0 -> a
    14:14:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> a
    1:1:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context):0:0 -> b
    1:1:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> b
    2:2:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0:0 -> b
    3:3:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context):0:0 -> b
    3:3:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> b
    4:4:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0:0 -> b
    5:5:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context):0:0 -> b
    5:5:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> b
    6:6:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0:0 -> b
    7:7:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context):0:0 -> b
    7:7:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0 -> b
    8:8:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int):0:0 -> b
    9:9:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatDrawableManager.access$000():0:0 -> b
    9:9:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0 -> b
    10:10:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> b
androidx.appcompat.widget.AppCompatEditText -> x1:
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> d
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void androidx.appcompat.widget.AppCompatTextClassifierHelper.setTextClassifier(android.view.textclassifier.TextClassifier):0:0 -> setTextClassifier
    1:1:void setTextClassifier(android.view.textclassifier.TextClassifier):0 -> setTextClassifier
    2:2:void setTextClassifier(android.view.textclassifier.TextClassifier):0:0 -> setTextClassifier
androidx.appcompat.widget.AppCompatImageButton -> y1:
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> c
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintList():0:0 -> getSupportImageTintList
    1:1:android.content.res.ColorStateList getSupportImageTintList():0 -> getSupportImageTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintMode():0:0 -> getSupportImageTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportImageTintMode():0 -> getSupportImageTintMode
    1:1:boolean androidx.appcompat.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    1:1:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
    2:2:boolean hasOverlappingRendering():0:0 -> hasOverlappingRendering
androidx.appcompat.widget.AppCompatImageHelper -> z1:
    androidx.appcompat.widget.TintInfo mTmpInfo -> d
    android.widget.ImageView mView -> a
    androidx.appcompat.widget.TintInfo mInternalImageTint -> b
    androidx.appcompat.widget.TintInfo mImageTint -> c
    1:1:boolean shouldApplyFrameworkTintUsingColorFilter():0:0 -> a
    1:1:void applySupportImageTint():0 -> a
    2:2:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    2:2:void applySupportImageTint():0 -> a
    3:3:android.content.res.ColorStateList androidx.core.widget.ImageViewCompat.getImageTintList(android.widget.ImageView):0:0 -> a
    3:3:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    3:3:void applySupportImageTint():0 -> a
    4:4:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    4:4:void applySupportImageTint():0 -> a
    5:5:android.graphics.PorterDuff$Mode androidx.core.widget.ImageViewCompat.getImageTintMode(android.widget.ImageView):0:0 -> a
    5:5:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0 -> a
    5:5:void applySupportImageTint():0 -> a
    6:6:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable):0:0 -> a
    6:6:void applySupportImageTint():0 -> a
    7:7:void applySupportImageTint():0:0 -> a
    8:8:void androidx.core.widget.ImageViewCompat.setImageTintList(android.widget.ImageView,android.content.res.ColorStateList):0:0 -> a
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    10:10:void androidx.core.widget.ImageViewCompat.setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode):0:0 -> a
    10:10:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    11:11:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    11:11:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    12:12:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    void setImageResource(int) -> a
    void setSupportImageTintList(android.content.res.ColorStateList) -> a
    void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> a
androidx.appcompat.widget.AppCompatImageView -> a2:
    androidx.appcompat.widget.AppCompatImageHelper mImageHelper -> c
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0:0 -> <init>
    1:1:void <init>(android.content.Context):0 -> <init>
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintList():0:0 -> getSupportImageTintList
    1:1:android.content.res.ColorStateList getSupportImageTintList():0 -> getSupportImageTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatImageHelper.getSupportImageTintMode():0:0 -> getSupportImageTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportImageTintMode():0 -> getSupportImageTintMode
    1:1:boolean androidx.appcompat.widget.AppCompatImageHelper.hasOverlappingRendering():0:0 -> hasOverlappingRendering
    1:1:boolean hasOverlappingRendering():0 -> hasOverlappingRendering
    2:2:boolean hasOverlappingRendering():0:0 -> hasOverlappingRendering
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> b2:
    int[] TINT_ATTRS -> d
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    2:2:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.appcompat.widget.AppCompatPopupWindow -> c2:
    boolean mOverlapAnchor -> a
    boolean COMPAT_OVERLAP_ANCHOR -> b
    1:1:void init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    4:4:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    6:6:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void setSupportOverlapAnchor(boolean):0:0 -> <init>
    7:7:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    9:9:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    10:10:void init(android.content.Context,android.util.AttributeSet,int,int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:11:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    11:11:void init(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
androidx.appcompat.widget.AppCompatProgressBarHelper -> d2:
    android.widget.ProgressBar mView -> a
    android.graphics.Bitmap mSampleTile -> b
    int[] TINT_ATTRS -> c
    1:1:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    3:3:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    4:4:android.graphics.drawable.Drawable androidx.core.graphics.drawable.WrappedDrawableApi14.getWrappedDrawable():0:0 -> a
    4:4:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean):0 -> a
    5:5:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean):0:0 -> a
    6:6:android.graphics.drawable.shapes.Shape getDrawableShape():0:0 -> a
    6:6:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean):0 -> a
    7:7:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean):0:0 -> a
androidx.appcompat.widget.AppCompatRadioButton -> e2:
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> c
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> d
    androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatCompoundButtonHelper.getSupportButtonTintList():0:0 -> getSupportButtonTintList
    1:1:android.content.res.ColorStateList getSupportButtonTintList():0 -> getSupportButtonTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatCompoundButtonHelper.getSupportButtonTintMode():0:0 -> getSupportButtonTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportButtonTintMode():0 -> getSupportButtonTintMode
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.onSetButtonDrawable():0:0 -> setButtonDrawable
    1:1:void setButtonDrawable(android.graphics.drawable.Drawable):0 -> setButtonDrawable
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.setSupportButtonTintList(android.content.res.ColorStateList):0:0 -> setSupportButtonTintList
    1:1:void setSupportButtonTintList(android.content.res.ColorStateList):0 -> setSupportButtonTintList
    1:1:void androidx.appcompat.widget.AppCompatCompoundButtonHelper.setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportButtonTintMode
    1:1:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> f2:
    androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:android.graphics.Bitmap androidx.appcompat.widget.AppCompatProgressBarHelper.getSampleTile():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> g2:
    androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
    1:1:void androidx.appcompat.widget.AppCompatSeekBarHelper.drawableStateChanged():0:0 -> drawableStateChanged
    1:1:void drawableStateChanged():0 -> drawableStateChanged
    1:1:void androidx.appcompat.widget.AppCompatSeekBarHelper.jumpDrawablesToCurrentState():0:0 -> jumpDrawablesToCurrentState
    1:1:void jumpDrawablesToCurrentState():0 -> jumpDrawablesToCurrentState
androidx.appcompat.widget.AppCompatSeekBarHelper -> h2:
    android.graphics.drawable.Drawable mTickMark -> e
    boolean mHasTickMarkTintMode -> i
    android.content.res.ColorStateList mTickMarkTintList -> f
    android.graphics.PorterDuff$Mode mTickMarkTintMode -> g
    boolean mHasTickMarkTint -> h
    android.widget.SeekBar mView -> d
    1:1:android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.wrap(android.graphics.drawable.Drawable):0:0 -> a
    1:1:void applyTickMarkTint():0 -> a
    2:2:void applyTickMarkTint():0:0 -> a
    3:3:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
    3:3:void applyTickMarkTint():0 -> a
    4:4:void applyTickMarkTint():0:0 -> a
    5:5:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
    5:5:void applyTickMarkTint():0 -> a
    6:6:void applyTickMarkTint():0:0 -> a
    void drawTickMarks(android.graphics.Canvas) -> a
    7:7:void setTickMark(android.graphics.drawable.Drawable):0:0 -> a
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    8:8:boolean androidx.core.graphics.drawable.DrawableCompat.setLayoutDirection(android.graphics.drawable.Drawable,int):0:0 -> a
    8:8:void setTickMark(android.graphics.drawable.Drawable):0 -> a
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    9:9:void setTickMark(android.graphics.drawable.Drawable):0:0 -> a
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    10:10:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    11:11:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    11:11:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    12:12:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
androidx.appcompat.widget.AppCompatSpinner -> j2:
    android.content.Context mPopupContext -> c
    androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup -> g
    androidx.appcompat.widget.ForwardingListener mForwardingListener -> d
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    int mDropDownWidth -> h
    android.graphics.Rect mTempRect -> i
    boolean mPopupSet -> f
    int[] ATTRS_ANDROID_SPINNERMODE -> j
    android.widget.SpinnerAdapter mTempAdapter -> e
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:int androidx.appcompat.widget.TintTypedArray.getResourceId(int,int):0:0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:java.lang.String androidx.appcompat.widget.TintTypedArray.getString(int):0:0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    7:7:void androidx.appcompat.widget.AppCompatSpinner$DropdownPopup.setPromptText(java.lang.CharSequence):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:java.lang.String androidx.appcompat.widget.TintTypedArray.getString(int):0:0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:java.lang.CharSequence[] androidx.appcompat.widget.TintTypedArray.getTextArray(int):0:0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    14:14:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme):0:0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int,int):0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> a
    void showPopup() -> a
androidx.appcompat.widget.AppCompatSpinner$1 -> i2:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> l
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup -> k
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> b
    boolean onForwardingStarted() -> c
androidx.appcompat.widget.AppCompatSpinner$2 -> j2$a:
    androidx.appcompat.widget.AppCompatSpinner this$0 -> b
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> j2$b:
    android.widget.ListAdapter mListAdapter -> c
    androidx.appcompat.app.AlertDialog mPopup -> b
    java.lang.CharSequence mPrompt -> d
    androidx.appcompat.widget.AppCompatSpinner this$0 -> e
    boolean isShowing() -> a
    void setAdapter(android.widget.ListAdapter) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setHorizontalOffset(int) -> a
    void setPromptText(java.lang.CharSequence) -> a
    1:1:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setTitle(java.lang.CharSequence):0:0 -> a
    1:1:void show(int,int):0 -> a
    2:2:void show(int,int):0:0 -> a
    3:3:androidx.appcompat.app.AlertDialog$Builder androidx.appcompat.app.AlertDialog$Builder.setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener):0:0 -> a
    3:3:void show(int,int):0 -> a
    4:4:void show(int,int):0:0 -> a
    5:5:android.widget.ListView androidx.appcompat.app.AlertDialog.getListView():0:0 -> a
    5:5:void show(int,int):0 -> a
    6:6:android.widget.ListView androidx.appcompat.app.AlertController.getListView():0:0 -> a
    6:6:android.widget.ListView androidx.appcompat.app.AlertDialog.getListView():0 -> a
    6:6:void show(int,int):0 -> a
    7:7:void show(int,int):0:0 -> a
    java.lang.CharSequence getHintText() -> b
    void setVerticalOffset(int) -> b
    int getHorizontalOffset() -> c
    void setHorizontalOriginalOffset(int) -> c
    int getVerticalOffset() -> f
    android.graphics.drawable.Drawable getBackground() -> g
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> j2$c:
    android.widget.ListAdapter mListAdapter -> c
    android.widget.SpinnerAdapter mAdapter -> b
    1:1:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> j2$d:
    int mOriginalHorizontalOffset -> L
    androidx.appcompat.widget.AppCompatSpinner this$0 -> M
    android.graphics.Rect mVisibleRect -> K
    java.lang.CharSequence mHintText -> I
    android.widget.ListAdapter mAdapter -> J
    1:1:void androidx.appcompat.widget.ListPopupWindow.<init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void androidx.appcompat.widget.ListPopupWindow.setAnchorView(android.view.View):0:0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void androidx.appcompat.widget.ListPopupWindow.setPromptPosition(int):0:0 -> <init>
    5:5:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void androidx.appcompat.widget.ListPopupWindow.setOnItemClickListener(android.widget.AdapterView$OnItemClickListener):0:0 -> <init>
    7:7:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int):0 -> <init>
    void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> a
    boolean isVisibleToUser(android.view.View) -> a
    void setAdapter(android.widget.ListAdapter) -> a
    void setPromptText(java.lang.CharSequence) -> a
    1:1:void androidx.appcompat.widget.ListPopupWindow.setInputMethodMode(int):0:0 -> a
    1:1:void show(int,int):0 -> a
    2:2:void show(int,int):0:0 -> a
    3:3:android.widget.ListView androidx.appcompat.widget.ListPopupWindow.getListView():0:0 -> a
    3:3:void show(int,int):0 -> a
    4:4:void show(int,int):0:0 -> a
    5:5:void androidx.appcompat.widget.ListPopupWindow.setSelection(int):0:0 -> a
    5:5:void show(int,int):0 -> a
    6:6:void show(int,int):0:0 -> a
    7:7:void androidx.appcompat.widget.ListPopupWindow.setOnDismissListener(android.widget.PopupWindow$OnDismissListener):0:0 -> a
    7:7:void show(int,int):0 -> a
    java.lang.CharSequence getHintText() -> b
    void setHorizontalOriginalOffset(int) -> c
    1:1:int androidx.appcompat.widget.ListPopupWindow.getWidth():0:0 -> h
    1:1:void computeContentWidth():0 -> h
    2:2:int getHorizontalOriginalOffset():0:0 -> h
    2:2:void computeContentWidth():0 -> h
    3:3:void androidx.appcompat.widget.ListPopupWindow.setHorizontalOffset(int):0:0 -> h
    3:3:void computeContentWidth():0 -> h
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> j2$d$a:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> b
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> j2$d$b:
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> b
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> j2$d$c:
    android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener -> b
    androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1 -> c
androidx.appcompat.widget.AppCompatSpinner$SavedState -> j2$e:
    boolean mShowDropdown -> b
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> j2$e$a:
    1:1:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup -> j2$f:
    boolean isShowing() -> a
    void setAdapter(android.widget.ListAdapter) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setHorizontalOffset(int) -> a
    void setPromptText(java.lang.CharSequence) -> a
    void show(int,int) -> a
    java.lang.CharSequence getHintText() -> b
    void setVerticalOffset(int) -> b
    int getHorizontalOffset() -> c
    void setHorizontalOriginalOffset(int) -> c
    int getVerticalOffset() -> f
    android.graphics.drawable.Drawable getBackground() -> g
androidx.appcompat.widget.AppCompatTextClassifierHelper -> k2:
    android.widget.TextView mTextView -> a
    android.view.textclassifier.TextClassifier mTextClassifier -> b
    1:1:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    1:1:void <init>(android.widget.TextView):0 -> <init>
    android.view.textclassifier.TextClassifier getTextClassifier() -> a
androidx.appcompat.widget.AppCompatTextHelper -> l2:
    androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper -> i
    boolean mAsyncFontPending -> m
    int mStyle -> j
    int mFontWeight -> k
    androidx.appcompat.widget.TintInfo mDrawableLeftTint -> b
    androidx.appcompat.widget.TintInfo mDrawableTopTint -> c
    androidx.appcompat.widget.TintInfo mDrawableStartTint -> f
    androidx.appcompat.widget.TintInfo mDrawableEndTint -> g
    android.widget.TextView mView -> a
    androidx.appcompat.widget.TintInfo mDrawableRightTint -> d
    androidx.appcompat.widget.TintInfo mDrawableBottomTint -> e
    android.graphics.Typeface mFontTypeface -> l
    androidx.appcompat.widget.TintInfo mDrawableTint -> h
    void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> a
    void applyCompoundDrawablesTints() -> a
    androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> a
    1:1:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    1:1:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    2:2:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    3:3:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> a
    3:3:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    4:4:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    5:5:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    5:5:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    6:6:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    7:7:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> a
    7:7:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    8:8:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    9:9:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    9:9:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    10:10:void setAllCaps(boolean):0:0 -> a
    10:10:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    11:11:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    12:12:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    12:12:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    13:13:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setupAutoSizeUniformPresetSizes(android.content.res.TypedArray):0:0 -> a
    13:13:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0 -> a
    13:13:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    14:14:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    14:14:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    15:15:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    16:16:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextType():0:0 -> a
    16:16:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    17:17:int[] androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextAvailableSizes():0:0 -> a
    17:17:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    18:18:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    19:19:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> a
    19:19:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    20:20:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    21:21:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> a
    21:21:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    22:22:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    23:23:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> a
    23:23:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    24:24:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    25:25:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> a
    25:25:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    26:26:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    27:27:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0:0 -> a
    27:27:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    28:28:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    29:29:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList):0:0 -> a
    29:29:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    30:30:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> a
    30:30:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList):0 -> a
    30:30:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    31:31:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    32:32:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode):0:0 -> a
    32:32:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    33:33:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> a
    33:33:void androidx.core.widget.TextViewCompat.setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode):0 -> a
    33:33:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    34:34:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    35:35:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    35:35:void loadFromAttributes(android.util.AttributeSet,int):0 -> a
    36:36:void loadFromAttributes(android.util.AttributeSet,int):0:0 -> a
    37:37:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,int,int[]):0:0 -> a
    37:37:void onSetTextAppearance(android.content.Context,int):0 -> a
    38:38:void onSetTextAppearance(android.content.Context,int):0:0 -> a
    39:39:void setAllCaps(boolean):0:0 -> a
    39:39:void onSetTextAppearance(android.content.Context,int):0 -> a
    40:40:void onSetTextAppearance(android.content.Context,int):0:0 -> a
    41:41:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> a
    41:41:void onSetTextAppearance(android.content.Context,int):0 -> a
    42:42:void onSetTextAppearance(android.content.Context,int):0:0 -> a
    43:43:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0:0 -> a
    43:43:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int):0 -> a
    44:44:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0:0 -> a
    44:44:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int):0 -> a
    45:45:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0:0 -> a
    45:45:void setAutoSizeTextTypeWithDefaults(int):0 -> a
    46:46:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.clearAutoSizeConfiguration():0:0 -> a
    46:46:void androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.setAutoSizeTextTypeWithDefaults(int):0 -> a
    46:46:void setAutoSizeTextTypeWithDefaults(int):0 -> a
    void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> a
    1:1:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMaxTextSize():0:0 -> b
    1:1:int getAutoSizeMaxTextSize():0 -> b
    1:1:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeMinTextSize():0:0 -> c
    1:1:int getAutoSizeMinTextSize():0 -> c
    1:1:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeStepGranularity():0:0 -> d
    1:1:int getAutoSizeStepGranularity():0 -> d
    1:1:int[] androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextAvailableSizes():0:0 -> e
    1:1:int[] getAutoSizeTextAvailableSizes():0 -> e
    1:1:int androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.getAutoSizeTextType():0:0 -> f
    1:1:int getAutoSizeTextType():0 -> f
    1:1:boolean androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper.isAutoSizeEnabled():0:0 -> g
    1:1:boolean isAutoSizeEnabled():0 -> g
    void setCompoundTints() -> h
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback -> l2$a:
    java.lang.ref.WeakReference mParent -> a
    int mFontWeight -> b
    int mStyle -> c
    void onFontRetrievalFailed(int) -> a
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.runOnUiThread(java.lang.Runnable):0:0 -> a
    1:1:void onFontRetrieved(android.graphics.Typeface):0 -> a
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback -> l2$a$a:
    android.graphics.Typeface mTypeface -> c
    java.lang.ref.WeakReference mParent -> b
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.setTypefaceByCallback(android.graphics.Typeface):0:0 -> run
    1:1:void run():0 -> run
androidx.appcompat.widget.AppCompatTextView -> m2:
    androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper -> d
    androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper -> b
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> c
    java.util.concurrent.Future mPrecomputedTextFuture -> e
    1:1:int androidx.core.widget.TextViewCompat.getFirstBaselineToTopHeight(android.widget.TextView):0:0 -> getFirstBaselineToTopHeight
    1:1:int getFirstBaselineToTopHeight():0 -> getFirstBaselineToTopHeight
    1:1:int androidx.core.widget.TextViewCompat.getLastBaselineToBottomHeight(android.widget.TextView):0:0 -> getLastBaselineToBottomHeight
    1:1:int getLastBaselineToBottomHeight():0 -> getLastBaselineToBottomHeight
    1:1:android.content.res.ColorStateList androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintList():0:0 -> getSupportCompoundDrawablesTintList
    1:1:android.content.res.ColorStateList getSupportCompoundDrawablesTintList():0 -> getSupportCompoundDrawablesTintList
    1:1:android.graphics.PorterDuff$Mode androidx.appcompat.widget.AppCompatTextHelper.getCompoundDrawableTintMode():0:0 -> getSupportCompoundDrawablesTintMode
    1:1:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode():0 -> getSupportCompoundDrawablesTintMode
    1:1:void consumeTextFutureAndSetBlocking():0:0 -> getText
    1:1:java.lang.CharSequence getText():0 -> getText
    2:2:java.lang.CharSequence getText():0:0 -> getText
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.autoSizeText():0:0 -> onLayout
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0 -> onLayout
    1:1:void consumeTextFutureAndSetBlocking():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.autoSizeText():0:0 -> onTextChanged
    1:1:void onTextChanged(java.lang.CharSequence,int,int,int):0 -> onTextChanged
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawables
    1:1:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawables
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesRelative
    1:1:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawablesRelative
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1:1:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int):0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    2:2:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawablesRelativeWithIntrinsicBounds
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesWithIntrinsicBounds
    1:1:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int):0 -> setCompoundDrawablesWithIntrinsicBounds
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.onSetCompoundDrawables():0:0 -> setCompoundDrawablesWithIntrinsicBounds
    2:2:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable):0 -> setCompoundDrawablesWithIntrinsicBounds
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintList(android.content.res.ColorStateList):0:0 -> setSupportCompoundDrawablesTintList
    1:1:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList):0 -> setSupportCompoundDrawablesTintList
    2:2:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList):0:0 -> setSupportCompoundDrawablesTintList
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportCompoundDrawablesTintMode
    1:1:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode):0 -> setSupportCompoundDrawablesTintMode
    2:2:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode):0:0 -> setSupportCompoundDrawablesTintMode
    1:1:void androidx.appcompat.widget.AppCompatTextClassifierHelper.setTextClassifier(android.view.textclassifier.TextClassifier):0:0 -> setTextClassifier
    1:1:void setTextClassifier(android.view.textclassifier.TextClassifier):0 -> setTextClassifier
    2:2:void setTextClassifier(android.view.textclassifier.TextClassifier):0:0 -> setTextClassifier
    1:1:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    1:1:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    2:2:int androidx.core.widget.TextViewCompat.getTextDirection(android.text.TextDirectionHeuristic):0:0 -> setTextMetricsParamsCompat
    2:2:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    2:2:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    3:3:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    3:3:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    4:4:android.text.TextPaint androidx.core.text.PrecomputedTextCompat$Params.getTextPaint():0:0 -> setTextMetricsParamsCompat
    4:4:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    4:4:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    5:5:void androidx.core.widget.TextViewCompat.setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params):0:0 -> setTextMetricsParamsCompat
    5:5:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params):0 -> setTextMetricsParamsCompat
    1:1:void androidx.appcompat.widget.AppCompatTextHelper.setTextSize(int,float):0:0 -> setTextSize
    1:1:void setTextSize(int,float):0 -> setTextSize
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.setTextSizeInternal(int,float):0:0 -> setTextSize
    2:2:void androidx.appcompat.widget.AppCompatTextHelper.setTextSize(int,float):0 -> setTextSize
    2:2:void setTextSize(int,float):0 -> setTextSize
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> n2:
    float mAutoSizeMaxTextSizeInPx -> e
    float mAutoSizeMinTextSizeInPx -> d
    float mAutoSizeStepGranularityInPx -> c
    android.content.Context mContext -> j
    android.graphics.RectF TEMP_RECTF -> k
    int mAutoSizeTextType -> a
    int[] mAutoSizeTextSizesInPx -> f
    boolean mHasPresetAutoSizeValues -> g
    android.widget.TextView mTextView -> i
    java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache -> m
    java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache -> l
    boolean mNeedsAutoSizeText -> b
    android.text.TextPaint mTempTextPaint -> h
    1:1:boolean isAutoSizeEnabled():0:0 -> a
    1:1:void autoSizeText():0 -> a
    2:2:void autoSizeText():0:0 -> a
    int[] cleanupAutoSizePresetSizes(int[]) -> a
    3:3:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> a
    3:3:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> a
    4:4:void initTempTextPaint(int):0:0 -> a
    4:4:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF):0 -> a
    4:4:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> a
    5:5:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> a
    5:5:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> a
    6:6:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int):0:0 -> a
    6:6:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF):0 -> a
    6:6:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> a
    7:7:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int):0:0 -> a
    7:7:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int):0 -> a
    7:7:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF):0 -> a
    7:7:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> a
    8:8:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF):0:0 -> a
    8:8:int findLargestTextSizeWhichFits(android.graphics.RectF):0 -> a
    9:9:int findLargestTextSizeWhichFits(android.graphics.RectF):0:0 -> a
    java.lang.reflect.Method getTextViewMethod(java.lang.String) -> a
    java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> a
    10:10:void setRawTextSize(float):0:0 -> a
    10:10:void setTextSizeInternal(int,float):0 -> a
    void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> a
    boolean setupAutoSizeText() -> b
    boolean setupAutoSizeUniformPresetSizesConfiguration() -> c
    boolean supportsAutoSizeText() -> d
androidx.appcompat.widget.AppCompatToggleButton -> o2:
    androidx.appcompat.widget.AppCompatTextHelper mTextHelper -> b
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet):0 -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    int mMinimumHeight -> d
    boolean mAllowStacking -> b
    int mLastWidthSize -> c
    int getNextVisibleChildIndex(int) -> a
    boolean isStacked() -> a
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    android.util.TypedValue mFixedWidthMajor -> d
    android.util.TypedValue mMinWidthMinor -> c
    android.util.TypedValue mMinWidthMajor -> b
    android.graphics.Rect mDecorPadding -> h
    androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener -> i
    android.util.TypedValue mFixedHeightMinor -> g
    android.util.TypedValue mFixedHeightMajor -> f
    android.util.TypedValue mFixedWidthMinor -> e
    void dispatchFitSystemWindows(android.graphics.Rect) -> a
    void setDecorPadding(int,int,int,int) -> a
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl$5.onDetachedFromWindow():0:0 -> onDetachedFromWindow
    1:1:void onDetachedFromWindow():0 -> onDetachedFromWindow
    2:2:void androidx.appcompat.app.AppCompatDelegateImpl.dismissPopups():0:0 -> onDetachedFromWindow
    2:2:void androidx.appcompat.app.AppCompatDelegateImpl$5.onDetachedFromWindow():0 -> onDetachedFromWindow
    2:2:void onDetachedFromWindow():0 -> onDetachedFromWindow
    3:3:void androidx.appcompat.view.menu.MenuBuilder.close():0:0 -> onDetachedFromWindow
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl.dismissPopups():0 -> onDetachedFromWindow
    3:3:void androidx.appcompat.app.AppCompatDelegateImpl$5.onDetachedFromWindow():0 -> onDetachedFromWindow
    3:3:void onDetachedFromWindow():0 -> onDetachedFromWindow
androidx.appcompat.widget.ContentFrameLayout$OnAttachListener -> androidx.appcompat.widget.ContentFrameLayout$a:
androidx.appcompat.widget.DecorContentParent -> p2:
    void initFeature(int) -> a
    void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> a
    boolean showOverflowMenu() -> a
    void dismissPopups() -> b
    boolean isOverflowMenuShowPending() -> c
    void setMenuPrepared() -> d
    boolean isOverflowMenuShowing() -> e
    boolean canShowOverflowMenu() -> f
    boolean hideOverflowMenu() -> g
androidx.appcompat.widget.DecorToolbar -> q2:
androidx.appcompat.widget.DrawableUtils -> r2:
    int[] EMPTY_STATE_SET -> b
    int[] CHECKED_STATE_SET -> a
    1:1:android.graphics.drawable.Drawable androidx.core.graphics.drawable.WrappedDrawableApi14.getWrappedDrawable():0:0 -> a
    1:1:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0 -> a
    2:2:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0:0 -> a
    3:3:android.graphics.drawable.Drawable androidx.appcompat.graphics.drawable.DrawableWrapper.getWrappedDrawable():0:0 -> a
    3:3:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0 -> a
    4:4:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable):0:0 -> a
    android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> a
    void fixDrawable(android.graphics.drawable.Drawable) -> b
androidx.appcompat.widget.DropDownListView -> s2:
    boolean mListSelectionHidden -> j
    androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation -> m
    boolean mHijackFocus -> k
    boolean mDrawsInPressedState -> l
    int mSelectionBottomPadding -> f
    int mMotionPosition -> g
    int mSelectionTopPadding -> d
    int mSelectionRightPadding -> e
    int mSelectionLeftPadding -> c
    android.graphics.Rect mSelectorRect -> b
    androidx.core.widget.ListViewAutoScrollHelper mScrollHelper -> n
    androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable -> o
    java.lang.reflect.Field mIsChildViewEnabled -> h
    androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector -> i
    int measureHeightOfChildrenCompat(int,int,int,int,int) -> a
    1:1:void setPressedItem(android.view.View,int,float,float):0:0 -> a
    1:1:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    2:2:void positionSelectorLikeFocusCompat(int,android.view.View):0:0 -> a
    2:2:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> a
    2:2:void setPressedItem(android.view.View,int,float,float):0 -> a
    2:2:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    3:3:void positionSelectorCompat(int,android.view.View):0:0 -> a
    3:3:void positionSelectorLikeFocusCompat(int,android.view.View):0 -> a
    3:3:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> a
    3:3:void setPressedItem(android.view.View,int,float,float):0 -> a
    3:3:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    4:4:void positionSelectorLikeFocusCompat(int,android.view.View):0:0 -> a
    4:4:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> a
    4:4:void setPressedItem(android.view.View,int,float,float):0 -> a
    4:4:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    5:5:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> a
    5:5:void positionSelectorLikeFocusCompat(int,android.view.View):0 -> a
    5:5:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> a
    5:5:void setPressedItem(android.view.View,int,float,float):0 -> a
    5:5:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    6:6:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0:0 -> a
    6:6:void setPressedItem(android.view.View,int,float,float):0 -> a
    6:6:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    7:7:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> a
    7:7:void positionSelectorLikeTouchCompat(int,android.view.View,float,float):0 -> a
    7:7:void setPressedItem(android.view.View,int,float,float):0 -> a
    7:7:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    8:8:void setPressedItem(android.view.View,int,float,float):0:0 -> a
    8:8:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    9:9:void clickPressedItem(android.view.View,int):0:0 -> a
    9:9:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    10:10:void clearPressedItem():0:0 -> a
    10:10:boolean onForwardedEvent(android.view.MotionEvent,int):0 -> a
    11:11:boolean onForwardedEvent(android.view.MotionEvent,int):0:0 -> a
    12:12:boolean touchModeDrawsInPressedStateCompat():0:0 -> a
    12:12:void updateSelectorStateCompat():0 -> a
    13:13:void updateSelectorStateCompat():0:0 -> a
    1:1:void drawSelectorCompat(android.graphics.Canvas):0:0 -> dispatchDraw
    1:1:void dispatchDraw(android.graphics.Canvas):0 -> dispatchDraw
    2:2:void dispatchDraw(android.graphics.Canvas):0:0 -> dispatchDraw
    1:1:void androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable.post():0:0 -> onHoverEvent
    1:1:boolean onHoverEvent(android.view.MotionEvent):0 -> onHoverEvent
    2:2:boolean onHoverEvent(android.view.MotionEvent):0:0 -> onHoverEvent
    1:1:void androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable.cancel():0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:void androidx.appcompat.widget.DropDownListView$GateKeeperDrawable.setEnabled(boolean):0:0 -> setSelectorEnabled
    1:1:void setSelectorEnabled(boolean):0 -> setSelectorEnabled
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> s2$a:
    boolean mEnabled -> c
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.draw(android.graphics.Canvas):0:0 -> draw
    1:1:void draw(android.graphics.Canvas):0 -> draw
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspot(float,float):0:0 -> setHotspot
    1:1:void setHotspot(float,float):0 -> setHotspot
    2:2:void androidx.core.graphics.drawable.DrawableCompat.setHotspot(android.graphics.drawable.Drawable,float,float):0:0 -> setHotspot
    2:2:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspot(float,float):0 -> setHotspot
    2:2:void setHotspot(float,float):0 -> setHotspot
    1:1:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspotBounds(int,int,int,int):0:0 -> setHotspotBounds
    1:1:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    2:2:void androidx.core.graphics.drawable.DrawableCompat.setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int):0:0 -> setHotspotBounds
    2:2:void androidx.appcompat.graphics.drawable.DrawableWrapper.setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    2:2:void setHotspotBounds(int,int,int,int):0 -> setHotspotBounds
    1:1:boolean androidx.appcompat.graphics.drawable.DrawableWrapper.setState(int[]):0:0 -> setState
    1:1:boolean setState(int[]):0 -> setState
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> s2$b:
    androidx.appcompat.widget.DropDownListView this$0 -> b
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> b
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl$4.onFitSystemWindows(android.graphics.Rect):0:0 -> fitSystemWindows
    1:1:boolean fitSystemWindows(android.graphics.Rect):0 -> fitSystemWindows
    2:2:boolean fitSystemWindows(android.graphics.Rect):0:0 -> fitSystemWindows
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener -> b
    1:1:void androidx.appcompat.app.AppCompatDelegateImpl$4.onFitSystemWindows(android.graphics.Rect):0:0 -> fitSystemWindows
    1:1:boolean fitSystemWindows(android.graphics.Rect):0 -> fitSystemWindows
    2:2:boolean fitSystemWindows(android.graphics.Rect):0:0 -> fitSystemWindows
androidx.appcompat.widget.FitWindowsViewGroup -> t2:
androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener -> t2$a:
androidx.appcompat.widget.ForwardingListener -> u2:
    java.lang.Runnable mTriggerLongPress -> g
    java.lang.Runnable mDisallowIntercept -> f
    int mActivePointerId -> i
    float mScaledTouchSlop -> b
    int mLongPressTimeout -> d
    boolean mForwarding -> h
    android.view.View mSrc -> e
    int[] mTmpLocation -> j
    int mTapTimeout -> c
    void clearCallbacks() -> a
    androidx.appcompat.view.menu.ShowableListMenu getPopup() -> b
    boolean onForwardingStarted() -> c
    boolean onForwardingStopped() -> d
    1:1:boolean onTouchForwarded(android.view.MotionEvent):0:0 -> onTouch
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    2:2:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    2:2:boolean onTouchForwarded(android.view.MotionEvent):0 -> onTouch
    2:2:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    3:3:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    3:3:boolean onTouchForwarded(android.view.MotionEvent):0 -> onTouch
    3:3:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    4:4:boolean onTouchForwarded(android.view.MotionEvent):0:0 -> onTouch
    4:4:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    5:5:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    6:6:boolean onTouchObserved(android.view.MotionEvent):0:0 -> onTouch
    6:6:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    7:7:boolean pointInView(android.view.View,float,float,float):0:0 -> onTouch
    7:7:boolean onTouchObserved(android.view.MotionEvent):0 -> onTouch
    7:7:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    8:8:boolean onTouchObserved(android.view.MotionEvent):0:0 -> onTouch
    8:8:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    9:9:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> u2$a:
    androidx.appcompat.widget.ForwardingListener this$0 -> b
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> u2$b:
    androidx.appcompat.widget.ForwardingListener this$0 -> b
    1:1:void androidx.appcompat.widget.ForwardingListener.onLongPress():0:0 -> run
    1:1:void run():0 -> run
androidx.appcompat.widget.LinearLayoutCompat -> v2:
    int mDividerHeight -> n
    int mShowDividers -> o
    int mDividerWidth -> m
    float mWeightSum -> h
    boolean mUseLargestChild -> i
    int mGravity -> f
    int mTotalLength -> g
    int mBaselineChildTop -> d
    int mOrientation -> e
    int mBaselineAlignedChildIndex -> c
    android.graphics.drawable.Drawable mDivider -> l
    int[] mMaxAscent -> j
    boolean mBaselineAligned -> b
    int[] mMaxDescent -> k
    int mDividerPadding -> p
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    9:9:float androidx.appcompat.widget.TintTypedArray.getFloat(int,float):0:0 -> <init>
    9:9:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    10:10:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    11:11:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    11:11:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    12:12:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    13:13:boolean androidx.appcompat.widget.TintTypedArray.getBoolean(int,boolean):0:0 -> <init>
    13:13:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    14:14:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    15:15:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    15:15:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    16:16:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    17:17:int androidx.appcompat.widget.TintTypedArray.getInt(int,int):0:0 -> <init>
    17:17:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    18:18:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    19:19:int androidx.appcompat.widget.TintTypedArray.getDimensionPixelSize(int,int):0:0 -> <init>
    19:19:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    20:20:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    21:21:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    21:21:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    void drawDividersHorizontal(android.graphics.Canvas) -> a
    void drawHorizontalDivider(android.graphics.Canvas,int) -> a
    void forceUniformHeight(int,int) -> a
    android.view.View getVirtualChildAt(int) -> a
    1:1:void setChildFrame(android.view.View,int,int,int,int):0:0 -> a
    1:1:void layoutHorizontal(int,int,int,int):0 -> a
    2:2:void layoutHorizontal(int,int,int,int):0:0 -> a
    void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> a
    void drawDividersVertical(android.graphics.Canvas) -> b
    void drawVerticalDivider(android.graphics.Canvas,int) -> b
    void forceUniformWidth(int,int) -> b
    boolean hasDividerBeforeChildAt(int) -> b
    1:1:void setChildFrame(android.view.View,int,int,int,int):0:0 -> b
    1:1:void layoutVertical(int,int,int,int):0 -> b
    2:2:void layoutVertical(int,int,int,int):0:0 -> b
    int getChildrenSkipCount(android.view.View,int) -> c
    void measureHorizontal(int,int) -> c
    int getLocationOffset(android.view.View) -> d
    void measureVertical(int,int) -> d
    int getNextLocationOffset(android.view.View) -> e
    int measureNullChild(int) -> f
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> v2$a:
    float weight -> a
    int gravity -> b
androidx.appcompat.widget.ListPopupWindow -> y2:
    android.database.DataSetObserver mObserver -> s
    boolean mForceIgnoreOutsideTouch -> o
    java.lang.reflect.Method sSetClipToWindowEnabledMethod -> G
    androidx.appcompat.widget.DropDownListView mDropDownList -> d
    int mDropDownVerticalOffset -> h
    boolean mOverlapAnchor -> k
    int mDropDownWidth -> f
    android.view.View mDropDownAnchorView -> t
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> v
    android.graphics.Rect mEpicenterBounds -> D
    android.os.Handler mHandler -> B
    boolean mModal -> E
    boolean mDropDownAlwaysVisible -> n
    android.content.Context mContext -> b
    int mDropDownGravity -> m
    androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector -> A
    androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener -> z
    java.lang.reflect.Method sSetEpicenterBoundsMethod -> H
    boolean mDropDownVerticalOffsetSet -> j
    int mDropDownWindowLayoutType -> i
    boolean mOverlapAnchorSet -> l
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> w
    androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> x
    android.view.View mPromptView -> q
    int mDropDownHorizontalOffset -> g
    int mDropDownHeight -> e
    android.graphics.Rect mTempRect -> C
    android.widget.ListAdapter mAdapter -> c
    android.graphics.drawable.Drawable mDropDownListHighlight -> u
    android.widget.PopupWindow mPopup -> F
    int mPromptPosition -> r
    int mListItemExpandMaximum -> p
    androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> y
    androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> a
    boolean isShowing() -> a
    void setAdapter(android.widget.ListAdapter) -> a
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> a
    void setEpicenterBounds(android.graphics.Rect) -> a
    void setHorizontalOffset(int) -> a
    void setModal(boolean) -> a
    void setVerticalOffset(int) -> b
    int getHorizontalOffset() -> c
    android.widget.ListView getListView() -> d
    1:1:void setWidth(int):0:0 -> d
    1:1:void setContentWidth(int):0 -> d
    1:1:void removePromptView():0:0 -> dismiss
    1:1:void dismiss():0 -> dismiss
    2:2:void dismiss():0:0 -> dismiss
    1:1:int buildDropDown():0:0 -> e
    1:1:void show():0 -> e
    2:2:android.view.View getAnchorView():0:0 -> e
    2:2:int buildDropDown():0 -> e
    2:2:void show():0 -> e
    3:3:int buildDropDown():0:0 -> e
    3:3:void show():0 -> e
    4:4:int getMaxAvailableHeight(android.view.View,int,boolean):0:0 -> e
    4:4:int buildDropDown():0 -> e
    4:4:void show():0 -> e
    5:5:int buildDropDown():0:0 -> e
    5:5:void show():0 -> e
    6:6:boolean isInputMethodNotNeeded():0:0 -> e
    6:6:void show():0 -> e
    7:7:void show():0:0 -> e
    8:8:void androidx.core.widget.PopupWindowCompat.setWindowLayoutType(android.widget.PopupWindow,int):0:0 -> e
    8:8:void show():0 -> e
    9:9:void show():0:0 -> e
    10:10:android.view.View getAnchorView():0:0 -> e
    10:10:void show():0 -> e
    11:11:void show():0:0 -> e
    12:12:android.view.View getAnchorView():0:0 -> e
    12:12:void show():0 -> e
    13:13:void show():0:0 -> e
    14:14:android.view.View getAnchorView():0:0 -> e
    14:14:void show():0 -> e
    15:15:void show():0:0 -> e
    16:16:android.view.View getAnchorView():0:0 -> e
    16:16:void show():0 -> e
    17:17:void show():0:0 -> e
    18:18:void setPopupClipToScreenEnabled(boolean):0:0 -> e
    18:18:void show():0 -> e
    19:19:void show():0:0 -> e
    20:20:void androidx.core.widget.PopupWindowCompat.setOverlapAnchor(android.widget.PopupWindow,boolean):0:0 -> e
    20:20:void show():0 -> e
    21:21:void show():0:0 -> e
    22:22:android.view.View getAnchorView():0:0 -> e
    22:22:void show():0 -> e
    23:23:void show():0:0 -> e
    24:24:void androidx.core.widget.PopupWindowCompat.showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int):0:0 -> e
    24:24:void show():0 -> e
    25:25:void show():0:0 -> e
    26:26:void clearListSelection():0:0 -> e
    26:26:void show():0 -> e
    27:27:void show():0:0 -> e
    int getVerticalOffset() -> f
    android.graphics.drawable.Drawable getBackground() -> g
androidx.appcompat.widget.ListPopupWindow$2 -> w2:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
    1:1:android.view.View androidx.appcompat.widget.ListPopupWindow.getAnchorView():0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
androidx.appcompat.widget.ListPopupWindow$3 -> x2:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> y2$a:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
    1:1:void androidx.appcompat.widget.ListPopupWindow.clearListSelection():0:0 -> run
    1:1:void run():0 -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> y2$b:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> y2$c:
    androidx.appcompat.widget.ListPopupWindow this$0 -> a
    1:1:boolean androidx.appcompat.widget.ListPopupWindow.isInputMethodNotNeeded():0:0 -> onScrollStateChanged
    1:1:void onScrollStateChanged(android.widget.AbsListView,int):0 -> onScrollStateChanged
    2:2:void onScrollStateChanged(android.widget.AbsListView,int):0:0 -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> y2$d:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> y2$e:
    androidx.appcompat.widget.ListPopupWindow this$0 -> b
androidx.appcompat.widget.MenuItemHoverListener -> z2:
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
androidx.appcompat.widget.MenuPopupWindow -> a3:
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> I
    java.lang.reflect.Method sSetTouchModalMethod -> J
    androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> a
    void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> a
    void setExitTransition(java.lang.Object) -> a
    void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> b
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> a3$a:
    androidx.appcompat.widget.MenuItemHoverListener mHoverListener -> r
    android.view.MenuItem mHoveredMenuItem -> s
    int mAdvanceKey -> p
    int mRetreatKey -> q
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuAdapter.getAdapterMenu():0:0 -> onHoverEvent
    1:1:boolean onHoverEvent(android.view.MotionEvent):0 -> onHoverEvent
    2:2:boolean onHoverEvent(android.view.MotionEvent):0:0 -> onHoverEvent
    1:1:androidx.appcompat.view.menu.MenuBuilder androidx.appcompat.view.menu.MenuAdapter.getAdapterMenu():0:0 -> onKeyDown
    1:1:boolean onKeyDown(int,android.view.KeyEvent):0 -> onKeyDown
    2:2:boolean onKeyDown(int,android.view.KeyEvent):0:0 -> onKeyDown
androidx.appcompat.widget.ResourceManagerInternal -> b3:
    androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE -> j
    androidx.appcompat.widget.ResourceManagerInternal INSTANCE -> i
    androidx.collection.SparseArrayCompat mKnownDrawableIdTags -> c
    android.graphics.PorterDuff$Mode DEFAULT_MODE -> h
    androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks -> g
    boolean mHasCheckedVectorDrawableSetup -> f
    java.util.WeakHashMap mDrawableCaches -> d
    java.util.WeakHashMap mTintLists -> a
    androidx.collection.ArrayMap mDelegates -> b
    android.util.TypedValue mTypedValue -> e
    boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> a
    1:1:long createCacheKey(android.util.TypedValue):0:0 -> a
    1:1:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0 -> a
    2:2:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int):0:0 -> a
    3:3:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal):0:0 -> a
    3:3:androidx.appcompat.widget.ResourceManagerInternal get():0 -> a
    4:4:androidx.appcompat.widget.ResourceManagerInternal get():0:0 -> a
    5:5:java.lang.Object androidx.collection.LongSparseArray.get(long):0:0 -> a
    5:5:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0 -> a
    6:6:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0:0 -> a
    7:7:void androidx.collection.LongSparseArray.remove(long):0:0 -> a
    7:7:void androidx.collection.LongSparseArray.delete(long):0 -> a
    7:7:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0 -> a
    8:8:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long):0:0 -> a
    9:9:void checkVectorDrawableSetup(android.content.Context):0:0 -> a
    9:9:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> a
    10:10:boolean isVectorDrawable(android.graphics.drawable.Drawable):0:0 -> a
    10:10:void checkVectorDrawableSetup(android.content.Context):0 -> a
    10:10:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> a
    11:11:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0:0 -> a
    12:12:void checkVectorDrawableSetup(android.content.Context):0:0 -> a
    12:12:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean):0 -> a
    android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> a
    13:13:void androidx.collection.LongSparseArray.clear():0:0 -> a
    13:13:void onConfigurationChanged(android.content.Context):0 -> a
    14:14:void onConfigurationChanged(android.content.Context):0:0 -> a
    void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> a
    15:15:android.graphics.drawable.Drawable androidx.core.graphics.drawable.DrawableCompat.wrap(android.graphics.drawable.Drawable):0:0 -> a
    15:15:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> a
    16:16:void androidx.core.graphics.drawable.DrawableCompat.setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList):0:0 -> a
    16:16:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> a
    17:17:android.graphics.PorterDuff$Mode getTintMode(int):0:0 -> a
    17:17:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> a
    18:18:void androidx.core.graphics.drawable.DrawableCompat.setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode):0:0 -> a
    18:18:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> a
    19:19:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0:0 -> a
    20:20:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable):0:0 -> a
    20:20:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable):0 -> a
    21:21:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]):0:0 -> a
    21:21:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0 -> a
    22:22:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]):0:0 -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> b
    1:1:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int):0:0 -> c
    1:1:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> c
    2:2:java.lang.Object androidx.collection.SparseArrayCompat.get(int):0:0 -> c
    2:2:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int):0 -> c
    2:2:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> c
    3:3:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int):0:0 -> c
    3:3:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> c
    4:4:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> c
    5:5:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList):0:0 -> c
    5:5:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> c
    6:6:void androidx.collection.SparseArrayCompat.<init>():0:0 -> c
    6:6:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList):0 -> c
    6:6:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> c
    7:7:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList):0:0 -> c
    7:7:android.content.res.ColorStateList getTintList(android.content.Context,int):0 -> c
    8:8:android.content.res.ColorStateList getTintList(android.content.Context,int):0:0 -> c
    1:1:java.lang.Object androidx.collection.SparseArrayCompat.get(int):0:0 -> d
    1:1:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> d
    2:2:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> d
    3:3:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> d
    3:3:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> d
    4:4:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> d
    5:5:void androidx.collection.SparseArrayCompat.<init>():0:0 -> d
    5:5:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> d
    6:6:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> d
    7:7:long createCacheKey(android.util.TypedValue):0:0 -> d
    7:7:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0 -> d
    8:8:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int):0:0 -> d
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> b3$a:
    1:1:int generateCacheKey(int,android.graphics.PorterDuff$Mode):0:0 -> a
    1:1:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode):0 -> a
    2:2:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode):0:0 -> a
    3:3:int generateCacheKey(int,android.graphics.PorterDuff$Mode):0:0 -> a
    3:3:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0 -> a
    4:4:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter):0:0 -> a
androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate -> b3$b:
    android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> a
androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks -> b3$c:
androidx.appcompat.widget.ResourcesWrapper -> c3:
androidx.appcompat.widget.RtlSpacingHelper -> d3:
    int mExplicitRight -> f
    int mEnd -> d
    boolean mIsRtl -> g
    int mExplicitLeft -> e
    boolean mIsRelative -> h
    int mRight -> b
    int mStart -> c
    int mLeft -> a
    void setRelative(int,int) -> a
androidx.appcompat.widget.ScrollingTabContainerView -> e3:
    java.lang.Runnable mTabSelector -> b
    androidx.appcompat.widget.LinearLayoutCompat mTabLayout -> d
    int mSelectedTabIndex -> j
    int mStackedTabMaxWidth -> h
    int mContentHeight -> i
    androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> c
    android.widget.Spinner mTabSpinner -> e
    boolean mAllowCollapse -> f
    int mMaxTabWidth -> g
    void animateToTab(int) -> a
    androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> a
    boolean isCollapsed() -> a
    1:1:boolean isCollapsed():0:0 -> b
    1:1:boolean performExpand():0 -> b
    2:2:boolean performExpand():0:0 -> b
    1:1:int androidx.appcompat.view.ActionBarPolicy.getTabContainerHeight():0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    2:2:boolean androidx.appcompat.view.ActionBarPolicy.hasEmbeddedTabs():0:0 -> onConfigurationChanged
    2:2:int androidx.appcompat.view.ActionBarPolicy.getTabContainerHeight():0 -> onConfigurationChanged
    2:2:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    3:3:int androidx.appcompat.view.ActionBarPolicy.getTabContainerHeight():0:0 -> onConfigurationChanged
    3:3:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    4:4:void onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    5:5:int androidx.appcompat.view.ActionBarPolicy.getStackedTabMaxWidth():0:0 -> onConfigurationChanged
    5:5:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    6:6:void onConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:androidx.appcompat.app.ActionBar$Tab androidx.appcompat.widget.ScrollingTabContainerView$TabView.getTab():0:0 -> onItemSelected
    1:1:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0 -> onItemSelected
    2:2:void onItemSelected(android.widget.AdapterView,android.view.View,int,long):0:0 -> onItemSelected
    1:1:void performCollapse():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:android.widget.Spinner createSpinner():0:0 -> onMeasure
    2:2:void performCollapse():0 -> onMeasure
    2:2:void onMeasure(int,int):0 -> onMeasure
    3:3:void performCollapse():0:0 -> onMeasure
    3:3:void onMeasure(int,int):0 -> onMeasure
    4:4:void onMeasure(int,int):0:0 -> onMeasure
androidx.appcompat.widget.ScrollingTabContainerView$1 -> e3$a:
    android.view.View val$tabView -> b
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> c
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> e3$b:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> b
    1:1:androidx.appcompat.app.ActionBar$Tab androidx.appcompat.widget.ScrollingTabContainerView$TabView.getTab():0:0 -> getItem
    1:1:java.lang.Object getItem(int):0 -> getItem
    1:1:java.lang.Object getItem(int):0:0 -> getView
    1:1:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    2:2:androidx.appcompat.app.ActionBar$Tab androidx.appcompat.widget.ScrollingTabContainerView$TabView.getTab():0:0 -> getView
    2:2:java.lang.Object getItem(int):0 -> getView
    2:2:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    3:3:android.view.View getView(int,android.view.View,android.view.ViewGroup):0:0 -> getView
    4:4:java.lang.Object getItem(int):0:0 -> getView
    4:4:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    5:5:androidx.appcompat.app.ActionBar$Tab androidx.appcompat.widget.ScrollingTabContainerView$TabView.getTab():0:0 -> getView
    5:5:java.lang.Object getItem(int):0 -> getView
    5:5:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
    6:6:void androidx.appcompat.widget.ScrollingTabContainerView$TabView.bindTab(androidx.appcompat.app.ActionBar$Tab):0:0 -> getView
    6:6:android.view.View getView(int,android.view.View,android.view.ViewGroup):0 -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> e3$c:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> b
    1:1:androidx.appcompat.app.ActionBar$Tab androidx.appcompat.widget.ScrollingTabContainerView$TabView.getTab():0:0 -> onClick
    1:1:void onClick(android.view.View):0 -> onClick
    2:2:void onClick(android.view.View):0:0 -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> e3$d:
    androidx.appcompat.widget.ScrollingTabContainerView this$0 -> g
    int[] BG_ATTRS -> b
    android.widget.TextView mTextView -> d
    androidx.appcompat.app.ActionBar$Tab mTab -> c
    android.widget.ImageView mIconView -> e
    android.view.View mCustomView -> f
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean):0 -> <init>
    2:2:boolean androidx.appcompat.widget.TintTypedArray.hasValue(int):0:0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean):0 -> <init>
    3:3:android.graphics.drawable.Drawable androidx.appcompat.widget.TintTypedArray.getDrawable(int):0:0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean):0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean):0:0 -> <init>
    5:5:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    5:5:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean):0 -> <init>
    6:6:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean):0:0 -> <init>
    1:1:void androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> a
    1:1:void update():0 -> a
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    android.widget.ImageView mVoiceButton -> x
    boolean mIconifiedByDefault -> N
    androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView -> q
    android.widget.ImageView mGoButton -> v
    android.graphics.drawable.Drawable mSearchHintIcon -> F
    boolean mExpandedInActionView -> b0
    java.util.WeakHashMap mOutsideDrawablesCache -> h0
    int mSuggestionRowLayout -> G
    boolean mVoiceButtonEnabled -> V
    android.view.View mSearchEditFrame -> r
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> L
    java.lang.CharSequence mUserQuery -> a0
    android.view.View mSubmitArea -> t
    android.graphics.Rect mSearchSrtTextViewBoundsExpanded -> B
    java.lang.CharSequence mDefaultQueryHint -> K
    boolean mClearingFocus -> T
    android.view.View$OnClickListener mOnClickListener -> i0
    android.os.Bundle mAppSearchData -> e0
    int[] mTemp -> C
    android.view.View$OnClickListener mOnSearchClickListener -> M
    java.lang.Runnable mReleaseCursorRunnable -> g0
    java.lang.CharSequence mQueryHint -> R
    java.lang.Runnable mUpdateDrawableStateRunnable -> f0
    android.content.Intent mVoiceAppSearchIntent -> J
    android.widget.ImageView mSearchButton -> u
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> l0
    android.view.View mDropDownAnchor -> y
    int mCollapsedImeOptions -> c0
    boolean mIconified -> O
    android.widget.ImageView mCloseButton -> w
    int mSuggestionCommitIconResId -> H
    android.view.View$OnKeyListener mTextKeyListener -> j0
    android.app.SearchableInfo mSearchable -> d0
    android.view.View mSearchPlate -> s
    androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate -> z
    androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter -> P
    boolean mSubmitButtonEnabled -> Q
    android.widget.ImageView mCollapsedIcon -> E
    android.graphics.Rect mSearchSrcTextViewBounds -> A
    boolean mQueryRefinement -> S
    int[] mTemp2 -> D
    android.text.TextWatcher mTextWatcher -> n0
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> k0
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> m0
    androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector HIDDEN_METHOD_INVOKER -> o0
    int mMaxWidth -> U
    java.lang.CharSequence mOldQueryText -> W
    android.content.Intent mVoiceWebSearchIntent -> I
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:void androidx.core.view.ViewCompat.setBackground(android.view.View,android.graphics.drawable.Drawable):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void androidx.appcompat.widget.TooltipCompat.setTooltipText(android.view.View,java.lang.CharSequence):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    8:8:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> a
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> a
    boolean isLandscapeMode(android.content.Context) -> a
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> a
    void onActionViewExpanded() -> a
    void onQueryRefine(java.lang.CharSequence) -> a
    1:1:void androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.ensureImeVisible(android.widget.AutoCompleteTextView,boolean):0:0 -> a
    1:1:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0 -> a
    2:2:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent):0:0 -> a
    void setQuery(java.lang.CharSequence,boolean) -> a
    void updateSubmitButton(boolean) -> a
    void onActionViewCollapsed() -> b
    void onTextChanged(java.lang.CharSequence) -> b
    void updateViewsVisibility(boolean) -> b
    1:1:boolean launchSuggestion(int,int,java.lang.String):0:0 -> c
    1:1:boolean onItemClicked(int,int,java.lang.String):0 -> c
    2:2:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> c
    2:2:boolean launchSuggestion(int,int,java.lang.String):0 -> c
    2:2:boolean onItemClicked(int,int,java.lang.String):0 -> c
    3:3:boolean launchSuggestion(int,int,java.lang.String):0:0 -> c
    3:3:boolean onItemClicked(int,int,java.lang.String):0 -> c
    4:4:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> c
    4:4:boolean launchSuggestion(int,int,java.lang.String):0 -> c
    4:4:boolean onItemClicked(int,int,java.lang.String):0 -> c
    5:5:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    5:5:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> c
    5:5:boolean launchSuggestion(int,int,java.lang.String):0 -> c
    5:5:boolean onItemClicked(int,int,java.lang.String):0 -> c
    6:6:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> c
    6:6:boolean launchSuggestion(int,int,java.lang.String):0 -> c
    6:6:boolean onItemClicked(int,int,java.lang.String):0 -> c
    7:7:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    7:7:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> c
    7:7:boolean launchSuggestion(int,int,java.lang.String):0 -> c
    7:7:boolean onItemClicked(int,int,java.lang.String):0 -> c
    8:8:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> c
    8:8:boolean launchSuggestion(int,int,java.lang.String):0 -> c
    8:8:boolean onItemClicked(int,int,java.lang.String):0 -> c
    9:9:java.lang.String androidx.appcompat.widget.SuggestionsAdapter.getColumnString(android.database.Cursor,java.lang.String):0:0 -> c
    9:9:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0 -> c
    9:9:boolean launchSuggestion(int,int,java.lang.String):0 -> c
    9:9:boolean onItemClicked(int,int,java.lang.String):0 -> c
    10:10:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String):0:0 -> c
    10:10:boolean launchSuggestion(int,int,java.lang.String):0 -> c
    10:10:boolean onItemClicked(int,int,java.lang.String):0 -> c
    11:11:void launchIntent(android.content.Intent):0:0 -> c
    11:11:boolean launchSuggestion(int,int,java.lang.String):0 -> c
    11:11:boolean onItemClicked(int,int,java.lang.String):0 -> c
    12:12:boolean onItemClicked(int,int,java.lang.String):0:0 -> c
    13:13:void dismissSuggestions():0:0 -> c
    13:13:boolean onItemClicked(int,int,java.lang.String):0 -> c
    void updateVoiceButton(boolean) -> c
    1:1:void rewriteQueryFromSuggestion(int):0:0 -> d
    1:1:boolean onItemSelected(int):0 -> d
    2:2:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> d
    2:2:void rewriteQueryFromSuggestion(int):0 -> d
    2:2:boolean onItemSelected(int):0 -> d
    3:3:void rewriteQueryFromSuggestion(int):0:0 -> d
    3:3:boolean onItemSelected(int):0 -> d
    void adjustDropDownSizeAndPosition() -> g
    1:1:void androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.doBeforeTextChanged(android.widget.AutoCompleteTextView):0:0 -> h
    1:1:void forceSuggestionQuery():0 -> h
    2:2:void forceSuggestionQuery():0:0 -> h
    3:3:void androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.doAfterTextChanged(android.widget.AutoCompleteTextView):0:0 -> h
    3:3:void forceSuggestionQuery():0 -> h
    boolean isIconified() -> i
    boolean isSubmitAreaEnabled() -> j
    void onCloseClicked() -> k
    void onSearchClicked() -> l
    1:1:void dismissSuggestions():0:0 -> m
    1:1:void onSubmitQuery():0 -> m
    1:1:void postUpdateFocusedState():0:0 -> n
    1:1:void onTextFocusChanged():0 -> n
    2:2:void onTextFocusChanged():0:0 -> n
    1:1:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo):0:0 -> o
    1:1:void onVoiceClicked():0 -> o
    2:2:void onVoiceClicked():0:0 -> o
    1:1:void androidx.appcompat.widget.LinearLayoutCompat.onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    3:3:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect):0:0 -> onLayout
    3:3:void onLayout(boolean,int,int,int,int):0 -> onLayout
    4:4:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:void androidx.appcompat.widget.LinearLayoutCompat.onMeasure(int,int):0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:android.os.Parcelable androidx.customview.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    1:1:void postUpdateFocusedState():0:0 -> onWindowFocusChanged
    1:1:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
    void updateCloseButton() -> p
    void updateFocusedState() -> q
    1:1:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence):0:0 -> r
    1:1:void updateQueryHint():0 -> r
    2:2:void updateQueryHint():0:0 -> r
    void updateSubmitArea() -> s
    1:1:void androidx.appcompat.widget.SuggestionsAdapter.setQueryRefinement(int):0:0 -> setQueryRefinementEnabled
    1:1:void setQueryRefinementEnabled(boolean):0 -> setQueryRefinementEnabled
    1:1:void updateSearchAutoComplete():0:0 -> setSearchableInfo
    1:1:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    2:2:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
    3:3:boolean hasVoiceSearch():0:0 -> setSearchableInfo
    3:3:void setSearchableInfo(android.app.SearchableInfo):0 -> setSearchableInfo
    4:4:void setSearchableInfo(android.app.SearchableInfo):0:0 -> setSearchableInfo
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$b:
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$a:
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$c:
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$d:
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$e:
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$f:
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$g:
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$h:
    androidx.appcompat.widget.SearchView this$0 -> a
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$i:
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$j:
    androidx.appcompat.widget.SearchView this$0 -> b
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$k:
    java.lang.reflect.Method ensureImeVisible -> c
    java.lang.reflect.Method doBeforeTextChanged -> a
    java.lang.reflect.Method doAfterTextChanged -> b
androidx.appcompat.widget.SearchView$OnCloseListener -> androidx.appcompat.widget.SearchView$l:
androidx.appcompat.widget.SearchView$OnQueryTextListener -> androidx.appcompat.widget.SearchView$m:
androidx.appcompat.widget.SearchView$OnSuggestionListener -> androidx.appcompat.widget.SearchView$n:
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$o:
    boolean isIconified -> d
    1:1:void androidx.customview.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$o$a:
    1:1:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:androidx.appcompat.widget.SearchView$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    java.lang.Runnable mRunShowSoftInputIfNecessary -> h
    boolean mHasPendingShowSoftInputRequest -> g
    int mThreshold -> e
    androidx.appcompat.widget.SearchView mSearchView -> f
    boolean isEmpty() -> a
    void showSoftInputIfNecessary() -> b
    1:1:void androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector.ensureImeVisible(android.widget.AutoCompleteTextView,boolean):0:0 -> onWindowFocusChanged
    1:1:void onWindowFocusChanged(boolean):0 -> onWindowFocusChanged
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$a:
    androidx.appcompat.widget.SearchView$SearchAutoComplete this$0 -> b
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$p:
    android.view.View mDelegateView -> a
    boolean mDelegateTargeted -> f
    int mSlop -> e
    android.graphics.Rect mActualBounds -> c
    android.graphics.Rect mSlopBounds -> d
    android.graphics.Rect mTargetBounds -> b
    void setBounds(android.graphics.Rect,android.graphics.Rect) -> a
androidx.appcompat.widget.SuggestionsAdapter -> f3:
    android.content.res.ColorStateList mUrlColor -> t
    boolean mClosed -> r
    java.util.WeakHashMap mOutsideDrawablesCache -> p
    int mFlagsCol -> z
    androidx.appcompat.widget.SearchView mSearchView -> m
    android.content.Context mProviderContext -> o
    int mIconName1Col -> x
    int mIconName2Col -> y
    android.app.SearchableInfo mSearchable -> n
    int mText2Col -> v
    int mText2UrlCol -> w
    int mText1Col -> u
    int mQueryRefinement -> s
    int mCommitIconResId -> q
    1:1:void setViewText(android.widget.TextView,java.lang.CharSequence):0:0 -> a
    1:1:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    2:2:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    3:3:java.lang.CharSequence formatUrl(java.lang.CharSequence):0:0 -> a
    3:3:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    4:4:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    5:5:void setViewText(android.widget.TextView,java.lang.CharSequence):0:0 -> a
    5:5:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    6:6:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    7:7:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0:0 -> a
    7:7:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    8:8:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor):0:0 -> a
    8:8:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    8:8:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    9:9:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName):0:0 -> a
    9:9:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor):0 -> a
    9:9:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    9:9:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    10:10:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName):0:0 -> a
    10:10:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName):0 -> a
    10:10:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor):0 -> a
    10:10:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    10:10:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    11:11:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName):0:0 -> a
    11:11:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor):0 -> a
    11:11:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    11:11:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    12:12:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor):0:0 -> a
    12:12:android.graphics.drawable.Drawable getIcon1(android.database.Cursor):0 -> a
    12:12:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    13:13:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int):0:0 -> a
    13:13:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    14:14:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    15:15:android.graphics.drawable.Drawable getIcon2(android.database.Cursor):0:0 -> a
    15:15:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    16:16:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int):0:0 -> a
    16:16:void bindView(android.view.View,android.content.Context,android.database.Cursor):0 -> a
    17:17:void bindView(android.view.View,android.content.Context,android.database.Cursor):0:0 -> a
    void changeCursor(android.database.Cursor) -> a
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> a
    android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> a
    18:18:android.graphics.drawable.Drawable checkIconCache(java.lang.String):0:0 -> a
    18:18:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> a
    19:19:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> a
    20:20:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable):0:0 -> a
    20:20:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> a
    21:21:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> a
    22:22:android.graphics.drawable.Drawable checkIconCache(java.lang.String):0:0 -> a
    22:22:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> a
    23:23:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0:0 -> a
    24:24:android.graphics.drawable.Drawable getDrawable(android.net.Uri):0:0 -> a
    24:24:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> a
    25:25:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable):0:0 -> a
    25:25:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String):0 -> a
    android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> a
    java.lang.String getStringOrNull(android.database.Cursor,int) -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    void setQueryRefinement(int) -> a
    1:1:java.lang.String getColumnString(android.database.Cursor,java.lang.String):0:0 -> b
    1:1:java.lang.CharSequence convertToString(android.database.Cursor):0 -> b
    2:2:java.lang.CharSequence convertToString(android.database.Cursor):0:0 -> b
    3:3:java.lang.String getColumnString(android.database.Cursor,java.lang.String):0:0 -> b
    3:3:java.lang.CharSequence convertToString(android.database.Cursor):0 -> b
    4:4:java.lang.CharSequence convertToString(android.database.Cursor):0:0 -> b
    5:5:java.lang.String getColumnString(android.database.Cursor,java.lang.String):0:0 -> b
    5:5:java.lang.CharSequence convertToString(android.database.Cursor):0 -> b
    void updateSpinnerState(android.database.Cursor) -> c
    1:1:android.view.View androidx.cursoradapter.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> getDropDownView
    1:1:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0 -> getDropDownView
    2:2:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getDropDownView
    1:1:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> notifyDataSetChanged
    1:1:void notifyDataSetChanged():0 -> notifyDataSetChanged
    2:2:void notifyDataSetChanged():0:0 -> notifyDataSetChanged
    1:1:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> notifyDataSetInvalidated
    1:1:void notifyDataSetInvalidated():0 -> notifyDataSetInvalidated
    2:2:void notifyDataSetInvalidated():0:0 -> notifyDataSetInvalidated
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> f3$a:
    android.widget.TextView mText1 -> a
    android.widget.TextView mText2 -> b
    android.widget.ImageView mIcon2 -> d
    android.widget.ImageView mIconRefine -> e
    android.widget.ImageView mIcon1 -> c
androidx.appcompat.widget.ThemeUtils -> g3:
    int[] EMPTY_STATE_SET -> f
    int[] TEMP_ARRAY -> g
    java.lang.ThreadLocal TL_TYPED_VALUE -> a
    int[] DISABLED_STATE_SET -> b
    int[] FOCUSED_STATE_SET -> c
    int[] PRESSED_STATE_SET -> d
    int[] CHECKED_STATE_SET -> e
    1:1:android.util.TypedValue getTypedValue():0:0 -> a
    1:1:int getDisabledThemeAttrColor(android.content.Context,int):0 -> a
    2:2:int getDisabledThemeAttrColor(android.content.Context,int):0:0 -> a
    3:3:int getThemeAttrColor(android.content.Context,int,float):0:0 -> a
    3:3:int getDisabledThemeAttrColor(android.content.Context,int):0 -> a
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> b
    1:1:int getThemeAttrColor(android.content.Context,int):0 -> b
    2:2:int androidx.appcompat.widget.TintTypedArray.getColor(int,int):0:0 -> b
    2:2:int getThemeAttrColor(android.content.Context,int):0 -> b
    3:3:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> b
    3:3:int getThemeAttrColor(android.content.Context,int):0 -> b
    4:4:int getThemeAttrColor(android.content.Context,int):0:0 -> b
    1:1:androidx.appcompat.widget.TintTypedArray androidx.appcompat.widget.TintTypedArray.obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]):0:0 -> c
    1:1:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> c
    2:2:android.content.res.ColorStateList androidx.appcompat.widget.TintTypedArray.getColorStateList(int):0:0 -> c
    2:2:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> c
    3:3:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> c
    3:3:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0 -> c
    4:4:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int):0:0 -> c
androidx.appcompat.widget.ThemedSpinnerAdapter -> h3:
androidx.appcompat.widget.TintContextWrapper -> i3:
    java.lang.Object CACHE_LOCK -> a
    1:1:boolean shouldWrap(android.content.Context):0:0 -> a
    1:1:android.content.Context wrap(android.content.Context):0 -> a
androidx.appcompat.widget.TintInfo -> j3:
    android.content.res.ColorStateList mTintList -> a
    android.graphics.PorterDuff$Mode mTintMode -> b
    boolean mHasTintMode -> c
    boolean mHasTintList -> d
    void clear() -> a
androidx.appcompat.widget.TintResources -> k3:
androidx.appcompat.widget.TintTypedArray -> l3:
    android.content.Context mContext -> a
    android.content.res.TypedArray mWrapped -> b
    android.util.TypedValue mTypedValue -> c
    boolean getBoolean(int,boolean) -> a
    android.content.res.ColorStateList getColorStateList(int) -> a
    int getDimensionPixelOffset(int,int) -> a
    1:1:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0:0 -> a
    1:1:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    2:2:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    2:2:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    2:2:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    3:3:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    3:3:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    3:3:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    3:3:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    4:4:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.findFromCache(android.content.res.Resources,int,int):0:0 -> a
    4:4:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    4:4:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    4:4:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    4:4:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    5:5:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    5:5:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    5:5:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    5:5:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    6:6:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    6:6:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    6:6:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    7:7:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    7:7:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    7:7:android.graphics.Typeface androidx.core.content.res.ResourcesCompat.getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    7:7:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback):0 -> a
    androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> a
    androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> a
    int getDimensionPixelSize(int,int) -> b
    android.graphics.drawable.Drawable getDrawable(int) -> b
    android.graphics.drawable.Drawable getDrawableIfKnown(int) -> c
    int getInt(int,int) -> c
    int getLayoutDimension(int,int) -> d
    java.lang.String getString(int) -> d
    int getResourceId(int,int) -> e
    java.lang.CharSequence getText(int) -> e
    boolean hasValue(int) -> f
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    int mSubtitleTextAppearance -> n
    int mPopupTheme -> l
    android.graphics.drawable.Drawable mCollapseIcon -> g
    androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper -> J
    java.util.ArrayList mHiddenViews -> F
    android.content.Context mPopupContext -> k
    java.lang.CharSequence mCollapseDescription -> h
    androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback -> M
    int[] mTempMargins -> G
    android.content.res.ColorStateList mSubtitleTextColor -> B
    android.widget.TextView mSubtitleTextView -> d
    androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> L
    androidx.appcompat.widget.RtlSpacingHelper mContentInsets -> u
    int mContentInsetEndWithActions -> w
    int mTitleMarginTop -> s
    java.lang.CharSequence mTitleText -> y
    java.lang.Runnable mShowOverflowMenuRunnable -> P
    boolean mEatingTouch -> C
    int mTitleMarginStart -> q
    int mButtonGravity -> o
    boolean mCollapsible -> O
    int mTitleTextAppearance -> m
    java.util.ArrayList mTempViews -> E
    androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback -> N
    androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter -> K
    androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener -> I
    android.widget.ImageView mLogoView -> f
    android.view.View mExpandedActionView -> j
    android.content.res.ColorStateList mTitleTextColor -> A
    android.widget.TextView mTitleTextView -> c
    androidx.appcompat.widget.ActionMenuView mMenuView -> b
    int mGravity -> x
    int mContentInsetStartWithNavigation -> v
    androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener -> H
    android.widget.ImageButton mCollapseButtonView -> i
    int mTitleMarginBottom -> t
    int mTitleMarginEnd -> r
    android.widget.ImageButton mNavButtonView -> e
    int mMaxButtonHeight -> p
    java.lang.CharSequence mSubtitleText -> z
    boolean mEatingHover -> D
    1:1:int androidx.appcompat.widget.TintTypedArray.getInteger(int,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    3:3:int androidx.appcompat.widget.TintTypedArray.getInteger(int,int):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    5:5:void androidx.appcompat.widget.RtlSpacingHelper.setAbsolute(int,int):0:0 -> <init>
    5:5:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    6:6:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    7:7:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    7:7:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    void addChildrenForExpandedActionView() -> a
    void addCustomViewsWithGravity(java.util.List,int) -> a
    void addSystemView(android.view.View,boolean) -> a
    int getChildHorizontalGravity(int) -> a
    1:1:int getChildVerticalGravity(int):0:0 -> a
    1:1:int getChildTop(android.view.View,int):0 -> a
    2:2:int getChildTop(android.view.View,int):0:0 -> a
    3:3:int androidx.core.view.MarginLayoutParamsCompat.getMarginStart(android.view.ViewGroup$MarginLayoutParams):0:0 -> a
    3:3:int getHorizontalMargins(android.view.View):0 -> a
    4:4:int androidx.core.view.MarginLayoutParamsCompat.getMarginEnd(android.view.ViewGroup$MarginLayoutParams):0:0 -> a
    4:4:int getHorizontalMargins(android.view.View):0 -> a
    int layoutChildLeft(android.view.View,int,int[],int) -> a
    int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> a
    void measureChildConstrained(android.view.View,int,int,int,int,int) -> a
    void setContentInsetsRelative(int,int) -> a
    5:5:void androidx.appcompat.widget.ActionMenuPresenter.setExpandedActionViewsExclusive(boolean):0:0 -> a
    5:5:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0 -> a
    6:6:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter):0:0 -> a
    void setSubtitleTextAppearance(android.content.Context,int) -> a
    boolean canShowOverflowMenu() -> b
    int getVerticalMargins(android.view.View) -> b
    void inflateMenu(int) -> b
    int layoutChildRight(android.view.View,int,int[],int) -> b
    void setTitleTextAppearance(android.content.Context,int) -> b
    void collapseActionView() -> c
    boolean isChildOrHidden(android.view.View) -> c
    void dismissPopupMenus() -> d
    boolean shouldLayout(android.view.View) -> d
    void ensureCollapseButtonView() -> e
    void ensureContentInsets() -> f
    void ensureLogoView() -> g
    1:1:int androidx.appcompat.widget.RtlSpacingHelper.getEnd():0:0 -> getContentInsetEnd
    1:1:int getContentInsetEnd():0 -> getContentInsetEnd
    1:1:int androidx.appcompat.widget.RtlSpacingHelper.getLeft():0:0 -> getContentInsetLeft
    1:1:int getContentInsetLeft():0 -> getContentInsetLeft
    1:1:int androidx.appcompat.widget.RtlSpacingHelper.getRight():0:0 -> getContentInsetRight
    1:1:int getContentInsetRight():0 -> getContentInsetRight
    1:1:int androidx.appcompat.widget.RtlSpacingHelper.getStart():0:0 -> getContentInsetStart
    1:1:int getContentInsetStart():0 -> getContentInsetStart
    void ensureMenu() -> h
    void ensureMenuView() -> i
    void ensureNavButtonView() -> j
    boolean hasExpandedActionView() -> k
    boolean hideOverflowMenu() -> l
    boolean isOverflowMenuShowPending() -> m
    boolean isOverflowMenuShowing() -> n
    void removeChildrenForExpandedActionView() -> o
    1:1:int getViewListMeasuredWidth(java.util.List,int[]):0:0 -> onLayout
    1:1:void onLayout(boolean,int,int,int,int):0 -> onLayout
    2:2:void onLayout(boolean,int,int,int,int):0:0 -> onLayout
    1:1:boolean shouldCollapse():0:0 -> onMeasure
    1:1:void onMeasure(int,int):0 -> onMeasure
    2:2:void onMeasure(int,int):0:0 -> onMeasure
    1:1:android.os.Parcelable androidx.customview.view.AbsSavedState.getSuperState():0:0 -> onRestoreInstanceState
    1:1:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    2:2:void onRestoreInstanceState(android.os.Parcelable):0:0 -> onRestoreInstanceState
    3:3:void postShowOverflowMenu():0:0 -> onRestoreInstanceState
    3:3:void onRestoreInstanceState(android.os.Parcelable):0 -> onRestoreInstanceState
    1:1:void androidx.appcompat.widget.RtlSpacingHelper.setDirection(boolean):0:0 -> onRtlPropertiesChanged
    1:1:void onRtlPropertiesChanged(int):0 -> onRtlPropertiesChanged
    1:1:int androidx.appcompat.view.menu.MenuItemImpl.getItemId():0:0 -> onSaveInstanceState
    1:1:android.os.Parcelable onSaveInstanceState():0 -> onSaveInstanceState
    2:2:android.os.Parcelable onSaveInstanceState():0:0 -> onSaveInstanceState
    boolean showOverflowMenu() -> p
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$a:
    androidx.appcompat.widget.Toolbar this$0 -> a
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$b:
    androidx.appcompat.widget.Toolbar this$0 -> b
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$c:
    androidx.appcompat.widget.Toolbar this$0 -> b
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$d:
    androidx.appcompat.view.menu.MenuBuilder mMenu -> b
    androidx.appcompat.widget.Toolbar this$0 -> d
    androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem -> c
    1:1:void androidx.appcompat.view.menu.MenuItemImpl.setActionViewExpanded(boolean):0:0 -> a
    1:1:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> a
    2:2:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0:0 -> a
    void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> a
    void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> a
    boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> a
    void updateMenuView(boolean) -> a
    1:1:void androidx.appcompat.view.menu.MenuItemImpl.setActionViewExpanded(boolean):0:0 -> b
    1:1:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl):0 -> b
    boolean flagActionItems() -> b
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$e:
    int mViewType -> b
    1:1:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams):0:0 -> <init>
    1:1:void <init>(android.view.ViewGroup$MarginLayoutParams):0 -> <init>
androidx.appcompat.widget.Toolbar$OnMenuItemClickListener -> androidx.appcompat.widget.Toolbar$f:
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$g:
    boolean isOverflowOpen -> e
    int expandedMenuItemId -> d
    1:1:void androidx.customview.view.AbsSavedState.writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
    1:1:void writeToParcel(android.os.Parcel,int):0 -> writeToParcel
    2:2:void writeToParcel(android.os.Parcel,int):0:0 -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$g$a:
    1:1:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> n3:
    boolean mMenuPrepared -> m
    int mNavigationMode -> o
    android.graphics.drawable.Drawable mIcon -> e
    android.graphics.drawable.Drawable mLogo -> f
    android.view.Window$Callback mWindowCallback -> l
    android.graphics.drawable.Drawable mNavIcon -> g
    androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter -> n
    int mDisplayOpts -> b
    java.lang.CharSequence mTitle -> i
    java.lang.CharSequence mSubtitle -> j
    java.lang.CharSequence mHomeDescription -> k
    androidx.appcompat.widget.Toolbar mToolbar -> a
    android.view.View mTabView -> c
    boolean mTitleSet -> h
    android.view.View mCustomView -> d
    int mDefaultNavigationContentDescription -> p
    android.graphics.drawable.Drawable mDefaultNavigationIcon -> q
    1:1:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    1:1:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    2:2:void setTitle(java.lang.CharSequence):0:0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    2:2:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    3:3:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    4:4:void setSubtitle(java.lang.CharSequence):0:0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    4:4:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    5:5:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    5:5:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    6:6:void setIcon(android.graphics.drawable.Drawable):0:0 -> <init>
    6:6:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    6:6:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    7:7:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    7:7:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    8:8:void setNavigationIcon(android.graphics.drawable.Drawable):0:0 -> <init>
    8:8:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    8:8:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    9:9:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    9:9:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    10:10:void setCustomView(android.view.View):0:0 -> <init>
    10:10:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    10:10:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    11:11:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    11:11:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    12:12:int detectDisplayOptions():0:0 -> <init>
    12:12:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    12:12:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    13:13:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    13:13:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    14:14:void androidx.appcompat.widget.TintTypedArray.recycle():0:0 -> <init>
    14:14:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    14:14:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    15:15:void setDefaultNavigationContentDescription(int):0:0 -> <init>
    15:15:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    15:15:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    16:16:void setNavigationContentDescription(int):0:0 -> <init>
    16:16:void setDefaultNavigationContentDescription(int):0 -> <init>
    16:16:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    16:16:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    17:17:void setNavigationContentDescription(java.lang.CharSequence):0:0 -> <init>
    17:17:void setNavigationContentDescription(int):0 -> <init>
    17:17:void setDefaultNavigationContentDescription(int):0 -> <init>
    17:17:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0 -> <init>
    17:17:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    18:18:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int):0:0 -> <init>
    18:18:void <init>(androidx.appcompat.widget.Toolbar,boolean):0 -> <init>
    android.content.Context getContext() -> a
    void setDisplayOptions(int) -> a
    void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> a
    void setHomeButtonEnabled(boolean) -> a
    void setLogo(android.graphics.drawable.Drawable) -> a
    void setTitleInt(java.lang.CharSequence) -> a
    androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> a
    void initIndeterminateProgress() -> b
    1:1:void setTitleInt(java.lang.CharSequence):0:0 -> b
    1:1:void setWindowTitle(java.lang.CharSequence):0 -> b
    void initProgress() -> c
    void updateHomeAccessibility() -> d
    void updateNavigationIcon() -> e
    void updateToolbarLogo() -> f
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> m3:
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> c
    androidx.appcompat.view.menu.ActionMenuItem mNavItem -> b
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> n3$a:
    androidx.appcompat.widget.ToolbarWidgetWrapper this$0 -> c
    boolean mCanceled -> a
    int val$visibility -> b
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.appcompat.widget.VectorEnabledTintResources -> o3:
    boolean shouldBeUsed() -> a
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    android.view.LayoutInflater mInflater -> e
    java.lang.ref.WeakReference mInflatedViewRef -> d
    int mLayoutResource -> b
    int mInflatedId -> c
    android.view.View inflate() -> a
androidx.appcompat.widget.ViewStubCompat$OnInflateListener -> androidx.appcompat.widget.ViewStubCompat$a:
androidx.appcompat.widget.ViewUtils -> p3:
    java.lang.reflect.Method sComputeFitSystemWindowsMethod -> a
    void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> a
    boolean isLayoutRtl(android.view.View) -> a
    void makeOptionalFitsSystemWindows(android.view.View) -> b
androidx.appcompat.widget.WithHint -> q3:
    java.lang.CharSequence getHint() -> a
androidx.arch.core.executor.ArchTaskExecutor -> r3:
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> c
    androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor -> b
    androidx.arch.core.executor.TaskExecutor mDelegate -> a
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> a
    androidx.arch.core.executor.ArchTaskExecutor getInstance() -> b
    void postToMainThread(java.lang.Runnable) -> b
androidx.arch.core.executor.ArchTaskExecutor$1 -> r3$a:
androidx.arch.core.executor.ArchTaskExecutor$2 -> r3$b:
androidx.arch.core.executor.DefaultTaskExecutor -> s3:
    android.os.Handler mMainHandler -> c
    java.lang.Object mLock -> a
    java.util.concurrent.ExecutorService mDiskIO -> b
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> a
    void postToMainThread(java.lang.Runnable) -> b
androidx.arch.core.executor.DefaultTaskExecutor$1 -> s3$a:
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
androidx.arch.core.executor.TaskExecutor -> t3:
    void executeOnDiskIO(java.lang.Runnable) -> a
    boolean isMainThread() -> a
    void postToMainThread(java.lang.Runnable) -> b
androidx.arch.core.internal.FastSafeIterableMap -> u3:
    java.util.HashMap mHashMap -> f
    androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object):0:0 -> b
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0 -> b
    2:2:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> b
androidx.arch.core.internal.SafeIterableMap -> v3:
    androidx.arch.core.internal.SafeIterableMap$Entry mStart -> b
    androidx.arch.core.internal.SafeIterableMap$Entry mEnd -> c
    java.util.WeakHashMap mIterators -> d
    int mSize -> e
    androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> a
    androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> a
    androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> a
    1:1:int size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> v3$a:
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> v3$b:
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
androidx.arch.core.internal.SafeIterableMap$Entry -> v3$c:
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> d
    androidx.arch.core.internal.SafeIterableMap$Entry mPrevious -> e
    java.lang.Object mKey -> b
    java.lang.Object mValue -> c
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> v3$d:
    androidx.arch.core.internal.SafeIterableMap$Entry mCurrent -> b
    androidx.arch.core.internal.SafeIterableMap this$0 -> d
    boolean mBeforeStart -> c
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
    1:1:java.util.Map$Entry next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
androidx.arch.core.internal.SafeIterableMap$ListIterator -> v3$e:
    androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd -> b
    androidx.arch.core.internal.SafeIterableMap$Entry mNext -> c
    androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> a
    1:1:androidx.arch.core.internal.SafeIterableMap$Entry nextNode():0:0 -> a
    1:1:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0 -> a
    2:2:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry):0:0 -> a
    androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> b
    androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> c
    1:1:java.util.Map$Entry next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
androidx.arch.core.internal.SafeIterableMap$SupportRemove -> v3$f:
    void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> a
androidx.collection.ArrayMap -> w3:
    androidx.collection.MapCollections mCollections -> i
    androidx.collection.MapCollections getCollection() -> b
    1:1:java.util.Set androidx.collection.MapCollections.getEntrySet():0:0 -> entrySet
    1:1:java.util.Set entrySet():0 -> entrySet
    1:1:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> keySet
    1:1:java.util.Set keySet():0 -> keySet
    1:1:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    1:1:void putAll(java.util.Map):0 -> putAll
    2:2:void putAll(java.util.Map):0:0 -> putAll
    3:3:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    3:3:void putAll(java.util.Map):0 -> putAll
    1:1:java.util.Collection androidx.collection.MapCollections.getValues():0:0 -> values
    1:1:java.util.Collection values():0 -> values
androidx.collection.ArrayMap$1 -> w3$a:
    androidx.collection.ArrayMap this$0 -> d
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    void colPut(java.lang.Object,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> a
    1:1:java.lang.Object colSetValue(int,java.lang.Object):0 -> a
    java.util.Map colGetMap() -> b
    int colIndexOfValue(java.lang.Object) -> b
    int colGetSize() -> c
androidx.collection.ArraySet -> y3:
    int[] INT -> f
    androidx.collection.MapCollections mCollections -> e
    java.lang.Object[] mArray -> c
    int[] mHashes -> b
    int sTwiceBaseCacheSize -> k
    int sBaseCacheSize -> i
    java.lang.Object[] sTwiceBaseCache -> j
    int mSize -> d
    java.lang.Object[] sBaseCache -> h
    java.lang.Object[] OBJECT -> g
    1:1:void <init>(int):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    void allocArrays(int) -> a
    void freeArrays(int[],java.lang.Object[],int) -> a
    int indexOf(java.lang.Object) -> a
    int indexOf(java.lang.Object,int) -> a
    int indexOfNull() -> a
    1:1:void ensureCapacity(int):0:0 -> addAll
    1:1:boolean addAll(java.util.Collection):0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    java.lang.Object removeAt(int) -> b
    1:1:int size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
    3:3:java.lang.Object valueAt(int):0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
    4:4:boolean equals(java.lang.Object):0:0 -> equals
    1:1:androidx.collection.MapCollections getCollection():0:0 -> iterator
    1:1:java.util.Iterator iterator():0 -> iterator
    2:2:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> iterator
    2:2:java.util.Iterator iterator():0 -> iterator
    3:3:java.util.Iterator iterator():0:0 -> iterator
    1:1:java.lang.Object valueAt(int):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
androidx.collection.ArraySet$1 -> x3:
    androidx.collection.ArraySet this$0 -> d
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    void colPut(java.lang.Object,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    java.util.Map colGetMap() -> b
    int colIndexOfValue(java.lang.Object) -> b
    int colGetSize() -> c
androidx.collection.ContainerHelpers -> z3:
    java.lang.Object[] EMPTY_OBJECTS -> c
    long[] EMPTY_LONGS -> b
    int[] EMPTY_INTS -> a
    int binarySearch(int[],int,int) -> a
    int binarySearch(long[],int,long) -> a
    boolean equal(java.lang.Object,java.lang.Object) -> a
    int idealByteArraySize(int) -> a
    int idealIntArraySize(int) -> b
    int idealLongArraySize(int) -> c
androidx.collection.LongSparseArray -> a4:
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    java.lang.Object DELETED -> f
    int mSize -> e
    boolean mGarbage -> b
    1:1:void <init>(int):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    void gc() -> a
    java.lang.Object get(long,java.lang.Object) -> a
    void put(long,java.lang.Object) -> b
    1:1:int size():0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:long keyAt(int):0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:java.lang.Object valueAt(int):0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
androidx.collection.LruCache -> b4:
    java.util.LinkedHashMap map -> a
    int hitCount -> f
    int missCount -> g
    int putCount -> d
    int evictionCount -> e
    int size -> b
    int maxSize -> c
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> a
    void trimToSize(int) -> a
androidx.collection.MapCollections -> c4:
    androidx.collection.MapCollections$KeySet mKeySet -> b
    androidx.collection.MapCollections$ValuesCollection mValues -> c
    androidx.collection.MapCollections$EntrySet mEntrySet -> a
    void colClear() -> a
    java.lang.Object colGetEntry(int,int) -> a
    int colIndexOfKey(java.lang.Object) -> a
    void colPut(java.lang.Object,java.lang.Object) -> a
    void colRemoveAt(int) -> a
    java.lang.Object colSetValue(int,java.lang.Object) -> a
    boolean equalsSetHelper(java.util.Set,java.lang.Object) -> a
    boolean retainAllHelper(java.util.Map,java.util.Collection) -> a
    java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> a
    java.util.Map colGetMap() -> b
    int colIndexOfValue(java.lang.Object) -> b
    java.lang.Object[] toArrayHelper(int) -> b
    int colGetSize() -> c
androidx.collection.MapCollections$ArrayIterator -> c4$a:
    androidx.collection.MapCollections this$0 -> f
    boolean mCanRemove -> e
    int mIndex -> d
    int mOffset -> b
    int mSize -> c
androidx.collection.MapCollections$EntrySet -> c4$b:
    androidx.collection.MapCollections this$0 -> b
    1:1:boolean add(java.util.Map$Entry):0:0 -> add
    1:1:boolean add(java.lang.Object):0 -> add
androidx.collection.MapCollections$KeySet -> c4$c:
    androidx.collection.MapCollections this$0 -> b
    1:1:boolean androidx.collection.MapCollections.containsAllHelper(java.util.Map,java.util.Collection):0:0 -> containsAll
    1:1:boolean containsAll(java.util.Collection):0 -> containsAll
    1:1:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0:0 -> removeAll
    1:1:boolean removeAll(java.util.Collection):0 -> removeAll
androidx.collection.MapCollections$MapIterator -> c4$d:
    androidx.collection.MapCollections this$0 -> e
    int mEnd -> b
    int mIndex -> c
    boolean mEntryValid -> d
    1:1:java.util.Map$Entry next():0:0 -> next
    1:1:java.lang.Object next():0 -> next
androidx.collection.MapCollections$ValuesCollection -> c4$e:
    androidx.collection.MapCollections this$0 -> b
androidx.collection.SimpleArrayMap -> d4:
    java.lang.Object[] mBaseCache -> e
    java.lang.Object[] mArray -> c
    int[] mHashes -> b
    int mTwiceBaseCacheSize -> h
    int mBaseCacheSize -> f
    int mSize -> d
    java.lang.Object[] mTwiceBaseCache -> g
    void allocArrays(int) -> a
    void freeArrays(int[],java.lang.Object[],int) -> a
    1:1:int binarySearchHashes(int[],int,int):0:0 -> a
    1:1:int indexOf(java.lang.Object,int):0 -> a
    2:2:int indexOf(java.lang.Object,int):0:0 -> a
    3:3:int binarySearchHashes(int[],int,int):0:0 -> a
    3:3:int indexOf(java.lang.Object,int):0 -> a
    int indexOfKey(java.lang.Object) -> a
    4:4:int binarySearchHashes(int[],int,int):0:0 -> a
    4:4:int indexOfNull():0 -> a
    5:5:int indexOfNull():0:0 -> a
    6:6:int binarySearchHashes(int[],int,int):0:0 -> a
    6:6:int indexOfNull():0 -> a
    java.lang.Object setValueAt(int,java.lang.Object) -> a
    int indexOfValue(java.lang.Object) -> b
    java.lang.Object keyAt(int) -> b
    java.lang.Object removeAt(int) -> c
    java.lang.Object valueAt(int) -> d
    1:1:int size():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
    2:2:boolean equals(java.lang.Object):0:0 -> equals
    3:3:int size():0:0 -> equals
    3:3:boolean equals(java.lang.Object):0 -> equals
    4:4:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object get(java.lang.Object):0:0 -> putIfAbsent
    1:1:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0 -> putIfAbsent
    2:2:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
androidx.collection.SparseArrayCompat -> e4:
    java.lang.Object[] mValues -> d
    java.lang.Object DELETED -> f
    int[] mKeys -> c
    int mSize -> e
    boolean mGarbage -> b
    void append(int,java.lang.Object) -> a
    void gc() -> a
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> b
    int keyAt(int) -> b
    int size() -> b
    void put(int,java.lang.Object) -> c
    void remove(int) -> c
    java.lang.Object valueAt(int) -> d
androidx.core.R$id -> f4:
androidx.core.R$styleable -> g4:
androidx.core.app.ActivityCompat -> h4:
    void finishAffinity(android.app.Activity) -> a
    androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> a
    void recreate(android.app.Activity) -> b
androidx.core.app.ActivityCompat$OnRequestPermissionsResultCallback -> h4$a:
androidx.core.app.ActivityCompat$RequestPermissionsRequestCodeValidator -> h4$b:
androidx.core.app.ActivityRecreator -> i4:
    android.os.Handler mainHandler -> g
    java.lang.reflect.Method performStopActivity3ParamsMethod -> d
    java.lang.reflect.Field mainThreadField -> b
    java.lang.reflect.Method performStopActivity2ParamsMethod -> e
    java.lang.reflect.Field tokenField -> c
    java.lang.reflect.Method requestRelaunchActivityMethod -> f
    java.lang.Class activityThreadClass -> a
    1:1:java.lang.Class getActivityThreadClass():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    3:3:java.lang.reflect.Field getMainThreadField():0:0 -> <clinit>
    3:3:void <clinit>():0 -> <clinit>
    4:4:void <clinit>():0:0 -> <clinit>
    5:5:java.lang.reflect.Field getTokenField():0:0 -> <clinit>
    5:5:void <clinit>():0 -> <clinit>
    6:6:void <clinit>():0:0 -> <clinit>
    7:7:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class):0:0 -> <clinit>
    7:7:void <clinit>():0 -> <clinit>
    8:8:void <clinit>():0:0 -> <clinit>
    9:9:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class):0:0 -> <clinit>
    9:9:void <clinit>():0 -> <clinit>
    10:10:void <clinit>():0:0 -> <clinit>
    11:11:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class):0:0 -> <clinit>
    11:11:void <clinit>():0 -> <clinit>
    12:12:void <clinit>():0:0 -> <clinit>
    boolean needsRelaunchCall() -> a
    boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity) -> a
    boolean recreate(android.app.Activity) -> a
androidx.core.app.ActivityRecreator$1 -> i4$a:
    java.lang.Object val$token -> c
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> b
androidx.core.app.ActivityRecreator$2 -> i4$b:
    android.app.Application val$application -> b
    androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks -> c
androidx.core.app.ActivityRecreator$3 -> i4$c:
    java.lang.Object val$activityThread -> b
    java.lang.Object val$token -> c
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> i4$d:
    boolean mStopQueued -> e
    java.lang.Object currentlyRecreatingToken -> a
    boolean mStarted -> c
    android.app.Activity mActivity -> b
    boolean mDestroyed -> d
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> b
    1:1:void androidx.collection.SimpleArrayMap.<init>():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    androidx.lifecycle.Lifecycle getLifecycle() -> a
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
    1:1:boolean androidx.core.view.KeyEventDispatcher.dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent):0 -> dispatchKeyEvent
    2:2:boolean dispatchKeyEvent(android.view.KeyEvent):0:0 -> dispatchKeyEvent
    1:1:boolean androidx.core.view.KeyEventDispatcher.dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    1:1:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0 -> dispatchKeyShortcutEvent
    2:2:boolean dispatchKeyShortcutEvent(android.view.KeyEvent):0:0 -> dispatchKeyShortcutEvent
    1:1:void androidx.lifecycle.LifecycleRegistry.setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> onSaveInstanceState
    1:1:void androidx.lifecycle.LifecycleRegistry.markState(androidx.lifecycle.Lifecycle$State):0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    2:2:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    java.lang.Object checkCompatWrapper(java.lang.Object) -> a
androidx.core.app.CoreComponentFactory$CompatWrapped -> androidx.core.app.CoreComponentFactory$a:
    java.lang.Object getWrapper() -> a
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
    android.app.PendingIntent mActionIntent -> d
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    1:1:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> read
    1:1:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    2:2:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    1:1:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> write
    1:1:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    2:2:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    3:3:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    3:3:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    4:4:void androidx.versionedparcelable.VersionedParcelParcel.writeCharSequence(java.lang.CharSequence):0:0 -> write
    4:4:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0 -> write
    4:4:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    5:5:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    6:6:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    6:6:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    7:7:void androidx.versionedparcelable.VersionedParcelParcel.writeCharSequence(java.lang.CharSequence):0:0 -> write
    7:7:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0 -> write
    7:7:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    8:8:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    9:9:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    9:9:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    10:10:void androidx.versionedparcelable.VersionedParcelParcel.writeBoolean(boolean):0:0 -> write
    10:10:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0 -> write
    10:10:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    11:11:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    12:12:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    12:12:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    13:13:void androidx.versionedparcelable.VersionedParcelParcel.writeBoolean(boolean):0:0 -> write
    13:13:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0 -> write
    13:13:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.app.SharedElementCallback -> j4:
androidx.core.app.TaskStackBuilder -> k4:
    android.content.Context mSourceContext -> c
    java.util.ArrayList mIntents -> b
    1:1:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName):0:0 -> a
    1:1:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity):0 -> a
    2:2:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent):0:0 -> a
    2:2:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity):0 -> a
    3:3:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName):0:0 -> a
    3:3:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity):0 -> a
androidx.core.app.TaskStackBuilder$SupportParentable -> k4$a:
    android.content.Intent getSupportParentActivityIntent() -> e
androidx.core.content.ContextCompat -> l4:
    java.lang.Object sLock -> a
    android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> a
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry -> m4:
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> n4:
    androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries -> a
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> o4:
    int mResourceId -> f
    java.lang.String mFileName -> a
    int mTtcIndex -> e
    int mWeight -> b
    boolean mItalic -> c
    java.lang.String mVariationSettings -> d
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> p4:
    androidx.core.provider.FontRequest mRequest -> a
    int mTimeoutMs -> b
    int mStrategy -> c
androidx.core.content.res.ResourcesCompat$FontCallback -> q4:
    void callbackFailAsync(int,android.os.Handler) -> a
    void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> a
    void onFontRetrievalFailed(int) -> a
    void onFontRetrieved(android.graphics.Typeface) -> a
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> q4$a:
    android.graphics.Typeface val$typeface -> b
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> c
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> q4$b:
    int val$reason -> b
    androidx.core.content.res.ResourcesCompat$FontCallback this$0 -> c
androidx.core.graphics.ColorUtils -> r4:
    1:1:int compositeAlpha(int,int):0:0 -> a
    1:1:int compositeColors(int,int):0 -> a
    2:2:int compositeColors(int,int):0:0 -> a
    int compositeComponent(int,int,int,int,int) -> a
    int setAlphaComponent(int,int) -> b
androidx.core.graphics.TypefaceCompat -> s4:
    androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl -> a
    androidx.collection.LruCache sTypefaceCache -> b
    android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> a
    1:1:int androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getFetchStrategy():0:0 -> a
    1:1:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    2:2:int androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getTimeout():0:0 -> a
    2:2:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    3:3:androidx.core.provider.FontRequest androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry.getRequest():0:0 -> a
    3:3:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0 -> a
    4:4:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean):0:0 -> a
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> a
    java.lang.String createResourceUid(android.content.res.Resources,int,int) -> a
androidx.core.graphics.TypefaceCompatApi21Impl -> t4:
    java.lang.reflect.Method sAddFontWeightStyle -> d
    boolean sHasInitBeenCalled -> f
    java.lang.reflect.Constructor sFontFamilyCtor -> c
    java.lang.reflect.Method sCreateFromFamiliesWithDefault -> e
    java.lang.Class sFontFamily -> b
    boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> a
    1:1:java.lang.Object newFamily():0:0 -> a
    1:1:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    2:2:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry.getEntries():0:0 -> a
    2:2:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    3:3:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    4:4:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getResourceId():0:0 -> a
    4:4:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    5:5:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    6:6:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> a
    6:6:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    7:7:boolean androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> a
    7:7:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    8:8:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    9:9:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object):0:0 -> a
    9:9:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    10:10:java.lang.Object newFamily():0:0 -> a
    10:10:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    void init() -> a
androidx.core.graphics.TypefaceCompatApi26Impl -> u4:
    java.lang.reflect.Method mFreeze -> k
    java.lang.reflect.Method mAbortCreation -> l
    java.lang.reflect.Method mCreateFromFamiliesWithDefault -> m
    java.lang.Class mFontFamily -> g
    java.lang.reflect.Constructor mFontFamilyCtor -> h
    java.lang.reflect.Method mAddFontFromAssetManager -> i
    java.lang.reflect.Method mAddFontFromBuffer -> j
    1:1:java.lang.Class obtainFontFamily():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class):0:0 -> <init>
    2:2:void <init>():0 -> <init>
    3:3:void <init>():0:0 -> <init>
    4:4:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class):0:0 -> <init>
    4:4:void <init>():0 -> <init>
    5:5:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class):0:0 -> <init>
    5:5:void <init>():0 -> <init>
    6:6:void <init>():0:0 -> <init>
    void abortCreation(java.lang.Object) -> a
    boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> a
    1:1:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry.getEntries():0:0 -> a
    1:1:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    2:2:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    3:3:java.lang.String androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getFileName():0:0 -> a
    3:3:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    4:4:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getTtcIndex():0:0 -> a
    4:4:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    5:5:int androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getWeight():0:0 -> a
    5:5:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    6:6:boolean androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.isItalic():0:0 -> a
    6:6:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    7:7:java.lang.String androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry.getVariationSettings():0:0 -> a
    7:7:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0 -> a
    8:8:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int):0:0 -> a
    9:9:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> a
    9:9:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    10:10:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> a
    11:11:int androidx.core.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> a
    11:11:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    12:12:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> a
    13:13:boolean androidx.core.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> a
    13:13:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    14:14:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> a
    15:15:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> a
    15:15:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    16:16:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> a
    17:17:int androidx.core.provider.FontsContractCompat$FontInfo.getTtcIndex():0:0 -> a
    17:17:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    18:18:int androidx.core.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> a
    18:18:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    19:19:boolean androidx.core.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> a
    19:19:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    20:20:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int):0:0 -> a
    20:20:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    21:21:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> a
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> a
    java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> a
    android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> b
    boolean isFontFamilyPrivateAPIAvailable() -> b
    java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> b
    boolean freeze(java.lang.Object) -> c
    java.lang.Object newFamily() -> c
    java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> c
androidx.core.graphics.TypefaceCompatApi28Impl -> v4:
    android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> b
    java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> c
androidx.core.graphics.TypefaceCompatBaseImpl -> w4:
    java.util.concurrent.ConcurrentHashMap mFontFamilies -> a
    android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> a
    android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> a
    android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> a
    1:1:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0:0 -> a
    1:1:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    2:2:int androidx.core.provider.FontsContractCompat$FontInfo.getWeight():0:0 -> a
    2:2:int androidx.core.graphics.TypefaceCompatBaseImpl$1.getWeight(androidx.core.provider.FontsContractCompat$FontInfo):0 -> a
    2:2:int androidx.core.graphics.TypefaceCompatBaseImpl$1.getWeight(java.lang.Object):0 -> a
    2:2:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> a
    2:2:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    3:3:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0:0 -> a
    3:3:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    4:4:boolean androidx.core.provider.FontsContractCompat$FontInfo.isItalic():0:0 -> a
    4:4:boolean androidx.core.graphics.TypefaceCompatBaseImpl$1.isItalic(androidx.core.provider.FontsContractCompat$FontInfo):0 -> a
    4:4:boolean androidx.core.graphics.TypefaceCompatBaseImpl$1.isItalic(java.lang.Object):0 -> a
    4:4:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor):0 -> a
    4:4:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int):0 -> a
    5:5:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> a
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> j
    java.lang.String mTintModeStr -> i
    android.graphics.PorterDuff$Mode mTintMode -> h
    android.os.Parcelable mParcelable -> d
    java.lang.Object mObj1 -> b
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    int mInt1 -> e
    byte[] mData -> c
    int mType -> a
    1:1:int getResId(android.graphics.drawable.Icon):0:0 -> a
    1:1:int getResId():0 -> a
    2:2:int getResId():0:0 -> a
    void onPreParceling(boolean) -> a
    1:1:java.lang.String getResPackage(android.graphics.drawable.Icon):0:0 -> b
    1:1:java.lang.String getResPackage():0 -> b
    2:2:java.lang.String getResPackage():0:0 -> b
    void onPostParceling() -> c
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    1:1:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0:0 -> read
    1:1:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    2:2:byte[] androidx.versionedparcelable.VersionedParcelParcel.readByteArray():0:0 -> read
    2:2:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0 -> read
    2:2:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    3:3:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    4:4:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    4:4:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    5:5:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    1:1:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0:0 -> write
    1:1:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    2:2:void androidx.versionedparcelable.VersionedParcelParcel.writeByteArray(byte[]):0:0 -> write
    2:2:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0 -> write
    2:2:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    3:3:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    4:4:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    4:4:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    5:5:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    5:5:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    5:5:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    6:6:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    7:7:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    7:7:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    8:8:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    8:8:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    8:8:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    9:9:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    10:10:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    10:10:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    11:11:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> write
    11:11:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0 -> write
    11:11:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.graphics.drawable.TintAwareDrawable -> x4:
androidx.core.graphics.drawable.WrappedDrawable -> y4:
androidx.core.graphics.drawable.WrappedDrawableApi14 -> z4:
    android.graphics.drawable.Drawable mDrawable -> g
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> h
    androidx.core.graphics.drawable.WrappedDrawableState mState -> e
    boolean mMutated -> f
    android.graphics.PorterDuff$Mode mCurrentMode -> c
    int mCurrentColor -> b
    boolean mColorFilterSet -> d
    1:1:void updateLocalState(android.content.res.Resources):0:0 -> <init>
    1:1:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources):0 -> <init>
    boolean isCompatTintEnabled() -> a
    void setWrappedDrawable(android.graphics.drawable.Drawable) -> a
    boolean updateTint(int[]) -> a
    1:1:boolean androidx.core.graphics.drawable.WrappedDrawableState.canConstantState():0:0 -> getConstantState
    1:1:android.graphics.drawable.Drawable$ConstantState getConstantState():0 -> getConstantState
    2:2:android.graphics.drawable.Drawable$ConstantState getConstantState():0:0 -> getConstantState
    1:1:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState():0:0 -> mutate
    1:1:android.graphics.drawable.Drawable mutate():0 -> mutate
    2:2:android.graphics.drawable.Drawable mutate():0:0 -> mutate
androidx.core.graphics.drawable.WrappedDrawableApi21 -> a5:
    java.lang.reflect.Method sIsProjectedDrawableMethod -> i
    boolean isCompatTintEnabled() -> a
    void findAndCacheIsProjectedDrawableMethod() -> b
    1:1:boolean isCompatTintEnabled():0:0 -> setTint
    1:1:void setTint(int):0 -> setTint
    2:2:void setTint(int):0:0 -> setTint
    1:1:boolean isCompatTintEnabled():0:0 -> setTintList
    1:1:void setTintList(android.content.res.ColorStateList):0 -> setTintList
    2:2:void setTintList(android.content.res.ColorStateList):0:0 -> setTintList
    1:1:boolean isCompatTintEnabled():0:0 -> setTintMode
    1:1:void setTintMode(android.graphics.PorterDuff$Mode):0 -> setTintMode
    2:2:void setTintMode(android.graphics.PorterDuff$Mode):0:0 -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> b5:
    android.graphics.drawable.Drawable$ConstantState mDrawableState -> b
    android.content.res.ColorStateList mTint -> c
    android.graphics.PorterDuff$Mode mTintMode -> d
    int mChangingConfigurations -> a
androidx.core.internal.view.SupportMenu -> c5:
androidx.core.internal.view.SupportMenuItem -> d5:
    androidx.core.view.ActionProvider getSupportActionProvider() -> a
    androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> a
androidx.core.internal.view.SupportSubMenu -> e5:
androidx.core.provider.FontRequest -> f5:
    java.lang.String mIdentifier -> f
    java.util.List mCertificates -> d
    java.lang.String mProviderAuthority -> a
    int mCertificatesArray -> e
    java.lang.String mQuery -> c
    java.lang.String mProviderPackage -> b
    1:1:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> <init>
androidx.core.provider.FontsContractCompat -> g5:
    androidx.collection.SimpleArrayMap sPendingReplies -> d
    androidx.collection.LruCache sTypefaceCache -> a
    java.lang.Object sLock -> c
    java.util.Comparator sByteArrayComparator -> e
    androidx.core.provider.SelfDestructiveThread sBackgroundThread -> b
    1:1:java.lang.String androidx.core.provider.FontRequest.getProviderAuthority():0:0 -> a
    1:1:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    1:1:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    2:2:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    2:2:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    3:3:java.lang.String androidx.core.provider.FontRequest.getProviderPackage():0:0 -> a
    3:3:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    3:3:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    4:4:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    4:4:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    5:5:java.util.List convertToByteArrayList(android.content.pm.Signature[]):0:0 -> a
    5:5:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    5:5:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    6:6:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    6:6:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    7:7:java.util.List androidx.core.provider.FontRequest.getCertificates():0:0 -> a
    7:7:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    7:7:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    7:7:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    8:8:int androidx.core.provider.FontRequest.getCertificatesArrayResId():0:0 -> a
    8:8:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    8:8:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    8:8:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    9:9:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    9:9:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    9:9:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    10:10:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    10:10:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    11:11:boolean equalsByteArrayList(java.util.List,java.util.List):0:0 -> a
    11:11:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    11:11:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    12:12:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0:0 -> a
    13:13:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    13:13:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    14:14:java.lang.String androidx.core.provider.FontRequest.getQuery():0:0 -> a
    14:14:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0 -> a
    14:14:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    15:15:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    15:15:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    16:16:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0:0 -> a
    17:17:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal):0:0 -> a
    17:17:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    18:18:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    18:18:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    19:19:java.lang.String androidx.core.provider.FontRequest.getProviderPackage():0:0 -> a
    19:19:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0 -> a
    19:19:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    20:20:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources):0:0 -> a
    20:20:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest):0 -> a
    21:21:int androidx.core.provider.FontsContractCompat$FontFamilyResult.getStatusCode():0:0 -> a
    21:21:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    22:22:androidx.core.provider.FontsContractCompat$FontInfo[] androidx.core.provider.FontsContractCompat$FontFamilyResult.getFonts():0:0 -> a
    22:22:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    23:23:android.graphics.Typeface androidx.core.graphics.TypefaceCompat.createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int):0:0 -> a
    23:23:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int):0 -> a
    24:24:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int):0:0 -> a
    25:25:java.lang.String androidx.core.provider.FontRequest.getIdentifier():0:0 -> a
    25:25:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0 -> a
    26:26:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0:0 -> a
    27:27:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> a
    27:27:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0 -> a
    28:28:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int):0:0 -> a
    29:29:int androidx.core.provider.FontsContractCompat$FontInfo.getResultCode():0:0 -> a
    29:29:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0 -> a
    30:30:android.net.Uri androidx.core.provider.FontsContractCompat$FontInfo.getUri():0:0 -> a
    30:30:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0 -> a
    31:31:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal):0:0 -> a
androidx.core.provider.FontsContractCompat$1 -> g5$a:
    android.content.Context val$context -> a
    androidx.core.provider.FontRequest val$request -> b
    int val$style -> c
    java.lang.String val$id -> d
    1:1:androidx.core.provider.FontsContractCompat$TypefaceResult call():0:0 -> call
    1:1:java.lang.Object call():0 -> call
androidx.core.provider.FontsContractCompat$2 -> g5$b:
    android.os.Handler val$handler -> b
    androidx.core.content.res.ResourcesCompat$FontCallback val$fontCallback -> a
    1:1:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult):0:0 -> a
    1:1:void onReply(java.lang.Object):0 -> a
androidx.core.provider.FontsContractCompat$3 -> g5$c:
    java.lang.String val$id -> a
    void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> a
    void onReply(java.lang.Object) -> a
androidx.core.provider.FontsContractCompat$5 -> g5$d:
    1:1:int compare(byte[],byte[]):0:0 -> compare
    1:1:int compare(java.lang.Object,java.lang.Object):0 -> compare
androidx.core.provider.FontsContractCompat$FontFamilyResult -> g5$e:
    int mStatusCode -> a
    androidx.core.provider.FontsContractCompat$FontInfo[] mFonts -> b
androidx.core.provider.FontsContractCompat$FontInfo -> g5$f:
    int mResultCode -> e
    int mTtcIndex -> b
    int mWeight -> c
    android.net.Uri mUri -> a
    boolean mItalic -> d
    1:1:java.lang.Object androidx.core.util.Preconditions.checkNotNull(java.lang.Object):0:0 -> <init>
    1:1:void <init>(android.net.Uri,int,int,boolean,int):0 -> <init>
androidx.core.provider.FontsContractCompat$TypefaceResult -> g5$g:
    android.graphics.Typeface mTypeface -> a
    int mResult -> b
androidx.core.provider.SelfDestructiveThread -> h5:
    java.lang.String mThreadName -> h
    android.os.Handler mHandler -> c
    android.os.Handler$Callback mCallback -> e
    int mDestructAfterMillisec -> f
    int mPriority -> g
    int mGeneration -> d
    java.lang.Object mLock -> a
    android.os.HandlerThread mThread -> b
    void onDestruction() -> a
    void onInvokeRunnable(java.lang.Runnable) -> a
    void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> a
    java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> a
    void post(java.lang.Runnable) -> b
androidx.core.provider.SelfDestructiveThread$1 -> h5$a:
    androidx.core.provider.SelfDestructiveThread this$0 -> a
androidx.core.provider.SelfDestructiveThread$2 -> h5$b:
    android.os.Handler val$callingHandler -> c
    java.util.concurrent.Callable val$callable -> b
    androidx.core.provider.SelfDestructiveThread$ReplyCallback val$reply -> d
androidx.core.provider.SelfDestructiveThread$2$1 -> h5$b$a:
    androidx.core.provider.SelfDestructiveThread$2 this$1 -> c
    java.lang.Object val$result -> b
androidx.core.provider.SelfDestructiveThread$3 -> h5$c:
    java.util.concurrent.atomic.AtomicBoolean val$running -> e
    java.util.concurrent.locks.Condition val$cond -> f
    java.util.concurrent.locks.ReentrantLock val$lock -> d
    java.util.concurrent.Callable val$callable -> c
    java.util.concurrent.atomic.AtomicReference val$holder -> b
androidx.core.provider.SelfDestructiveThread$ReplyCallback -> h5$d:
    void onReply(java.lang.Object) -> a
androidx.core.text.PrecomputedTextCompat -> i5:
    android.text.Spannable mText -> b
    androidx.core.text.PrecomputedTextCompat$Params mParams -> c
androidx.core.text.PrecomputedTextCompat$Params -> i5$a:
    android.text.TextPaint mPaint -> a
    android.text.PrecomputedText$Params mWrapped -> e
    int mHyphenationFrequency -> d
    android.text.TextDirectionHeuristic mTextDir -> b
    int mBreakStrategy -> c
    1:1:int getBreakStrategy():0:0 -> a
    1:1:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    2:2:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    3:3:int getHyphenationFrequency():0:0 -> a
    3:3:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    4:4:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    5:5:android.text.TextPaint getTextPaint():0:0 -> a
    5:5:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    6:6:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    7:7:android.text.TextPaint getTextPaint():0:0 -> a
    7:7:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    8:8:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    9:9:android.text.TextPaint getTextPaint():0:0 -> a
    9:9:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    10:10:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    11:11:android.text.TextPaint getTextPaint():0:0 -> a
    11:11:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    12:12:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    13:13:android.text.TextPaint getTextPaint():0:0 -> a
    13:13:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    14:14:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    15:15:android.text.TextPaint getTextPaint():0:0 -> a
    15:15:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    16:16:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    17:17:android.text.TextPaint getTextPaint():0:0 -> a
    17:17:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    18:18:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    19:19:android.text.TextPaint getTextPaint():0:0 -> a
    19:19:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    20:20:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    21:21:android.text.TextPaint getTextPaint():0:0 -> a
    21:21:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0 -> a
    22:22:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params):0:0 -> a
    int getBreakStrategy() -> a
    int getHyphenationFrequency() -> b
    android.text.TextDirectionHeuristic getTextDirection() -> c
    1:1:android.text.TextDirectionHeuristic getTextDirection():0:0 -> equals
    1:1:boolean equals(java.lang.Object):0 -> equals
androidx.core.util.LogWriter -> j5:
    java.lang.String mTag -> b
    java.lang.StringBuilder mBuilder -> c
    void flushBuilder() -> a
androidx.core.view.AccessibilityDelegateCompat -> k5:
    android.view.View$AccessibilityDelegate mOriginalDelegate -> a
    android.view.View$AccessibilityDelegate mBridge -> b
    android.view.View$AccessibilityDelegate DEFAULT_DELEGATE -> c
    1:1:void <init>(android.view.View$AccessibilityDelegate):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    1:1:android.view.accessibility.AccessibilityNodeInfo androidx.core.view.accessibility.AccessibilityNodeInfoCompat.unwrap():0:0 -> a
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> a
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> a
    3:3:java.util.List getActionList(android.view.View):0:0 -> a
    3:3:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> a
    4:4:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0:0 -> a
    5:5:boolean performClickableSpanAction(int,android.view.View):0:0 -> a
    5:5:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> a
    6:6:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View):0:0 -> a
    6:6:boolean performClickableSpanAction(int,android.view.View):0 -> a
    6:6:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> a
    7:7:boolean performClickableSpanAction(int,android.view.View):0:0 -> a
    7:7:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle):0 -> a
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> k5$a:
    androidx.core.view.AccessibilityDelegateCompat mCompat -> a
    1:1:boolean androidx.core.view.AccessibilityDelegateCompat.dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> dispatchPopulateAccessibilityEvent
    1:1:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> dispatchPopulateAccessibilityEvent
    1:1:java.lang.Object androidx.core.view.accessibility.AccessibilityNodeProviderCompat.getProvider():0:0 -> getAccessibilityNodeProvider
    1:1:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0 -> getAccessibilityNodeProvider
    2:2:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View):0:0 -> getAccessibilityNodeProvider
    1:1:androidx.core.view.accessibility.AccessibilityNodeInfoCompat androidx.core.view.accessibility.AccessibilityNodeInfoCompat.wrap(android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    2:2:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    3:3:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScreenReaderFocusable(boolean):0:0 -> onInitializeAccessibilityNodeInfo
    3:3:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    4:4:androidx.core.view.ViewCompat$AccessibilityViewProperty androidx.core.view.ViewCompat.accessibilityHeadingProperty():0:0 -> onInitializeAccessibilityNodeInfo
    4:4:boolean androidx.core.view.ViewCompat.isAccessibilityHeading(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    4:4:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    5:5:boolean androidx.core.view.ViewCompat.isAccessibilityHeading(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    5:5:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    6:6:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setHeading(boolean):0:0 -> onInitializeAccessibilityNodeInfo
    6:6:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    7:7:androidx.core.view.ViewCompat$AccessibilityViewProperty androidx.core.view.ViewCompat.paneTitleProperty():0:0 -> onInitializeAccessibilityNodeInfo
    7:7:java.lang.CharSequence androidx.core.view.ViewCompat.getAccessibilityPaneTitle(android.view.View):0 -> onInitializeAccessibilityNodeInfo
    7:7:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    8:8:java.lang.CharSequence androidx.core.view.ViewCompat.getAccessibilityPaneTitle(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    8:8:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    9:9:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setPaneTitle(java.lang.CharSequence):0:0 -> onInitializeAccessibilityNodeInfo
    9:9:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    10:10:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    11:11:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addSpansToExtras(java.lang.CharSequence,android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    11:11:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    12:12:java.util.List androidx.core.view.AccessibilityDelegateCompat.getActionList(android.view.View):0:0 -> onInitializeAccessibilityNodeInfo
    12:12:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    13:13:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> onInitializeAccessibilityNodeInfo
    14:14:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat):0:0 -> onInitializeAccessibilityNodeInfo
    14:14:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> onInitializeAccessibilityNodeInfo
    1:1:void androidx.core.view.AccessibilityDelegateCompat.onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> onPopulateAccessibilityEvent
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> onPopulateAccessibilityEvent
    1:1:boolean androidx.core.view.AccessibilityDelegateCompat.onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> onRequestSendAccessibilityEvent
    1:1:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent):0 -> onRequestSendAccessibilityEvent
    1:1:void androidx.core.view.AccessibilityDelegateCompat.sendAccessibilityEvent(android.view.View,int):0:0 -> sendAccessibilityEvent
    1:1:void sendAccessibilityEvent(android.view.View,int):0 -> sendAccessibilityEvent
    1:1:void androidx.core.view.AccessibilityDelegateCompat.sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> sendAccessibilityEventUnchecked
    1:1:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> l5:
    androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener -> a
    boolean isVisible() -> a
    1:1:android.view.View androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper.onCreateActionView():0:0 -> a
    1:1:android.view.View onCreateActionView(android.view.MenuItem):0 -> a
    void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> a
    boolean overridesItemVisibility() -> b
androidx.core.view.ActionProvider$SubUiVisibilityListener -> l5$a:
androidx.core.view.ActionProvider$VisibilityListener -> l5$b:
androidx.core.view.KeyEventDispatcher -> m5:
    java.lang.reflect.Field sDialogKeyListenerField -> d
    boolean sActionBarFieldsFetched -> a
    boolean sDialogFieldsFetched -> c
    java.lang.reflect.Method sActionBarOnMenuKeyMethod -> b
    1:1:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0:0 -> a
    1:1:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> a
    2:2:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent):0:0 -> a
    2:2:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0 -> a
    2:2:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> a
    3:3:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent):0:0 -> a
    3:3:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> a
    4:4:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0:0 -> a
    5:5:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog):0:0 -> a
    5:5:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent):0 -> a
    5:5:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> a
    6:6:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent):0:0 -> a
    6:6:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0 -> a
    7:7:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent):0:0 -> a
androidx.core.view.KeyEventDispatcher$Component -> m5$a:
    boolean superDispatchKeyEvent(android.view.KeyEvent) -> a
androidx.core.view.NestedScrollingChild -> o5:
androidx.core.view.NestedScrollingChild3 -> n5:
androidx.core.view.NestedScrollingChildHelper -> p5:
    android.view.ViewParent mNestedScrollingParentTouch -> a
    int[] mTempNestedScrollConsumed -> e
    android.view.View mView -> c
    android.view.ViewParent mNestedScrollingParentNonTouch -> b
    boolean mIsNestedScrollingEnabled -> d
    1:1:boolean isNestedScrollingEnabled():0:0 -> a
    1:1:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0 -> a
    2:2:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0:0 -> a
    3:3:int[] getTempNestedScrollConsumed():0:0 -> a
    3:3:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0 -> a
    4:4:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]):0:0 -> a
    android.view.ViewParent getNestedScrollingParentForType(int) -> a
    int[] getTempNestedScrollConsumed() -> a
    void setNestedScrollingParentForType(int,android.view.ViewParent) -> a
    boolean hasNestedScrollingParent(int) -> b
androidx.core.view.NestedScrollingParent -> s5:
androidx.core.view.NestedScrollingParent2 -> q5:
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> a
    void onNestedScroll(android.view.View,int,int,int,int,int) -> a
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
    void onStopNestedScroll(android.view.View,int) -> a
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> b
androidx.core.view.NestedScrollingParent3 -> r5:
    void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> a
androidx.core.view.NestedScrollingParentHelper -> t5:
    int mNestedScrollAxesNonTouch -> b
    int mNestedScrollAxesTouch -> a
    void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> a
androidx.core.view.OnApplyWindowInsetsListener -> u5:
androidx.core.view.OneShotPreDrawListener -> v5:
    java.lang.Runnable mRunnable -> d
    android.view.ViewTreeObserver mViewTreeObserver -> c
    android.view.View mView -> b
    androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> a
    void removeListener() -> a
androidx.core.view.ScrollingView -> w5:
androidx.core.view.TintableBackgroundView -> x5:
androidx.core.view.ViewCompat -> y5:
    java.lang.reflect.Field sAccessibilityDelegateField -> b
    java.util.WeakHashMap sViewPropertyAnimatorMap -> a
    boolean sAccessibilityDelegateCheckFailed -> c
    androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> a
    boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> a
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty():0:0 -> a
    1:1:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0 -> a
    1:1:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> a
    2:2:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View):0:0 -> a
    2:2:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> a
    3:3:int getAccessibilityLiveRegion(android.view.View):0:0 -> a
    3:3:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0 -> a
    4:4:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int):0:0 -> a
    5:5:java.lang.Object androidx.core.view.WindowInsetsCompat.unwrap(androidx.core.view.WindowInsetsCompat):0:0 -> a
    5:5:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0 -> a
    6:6:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat):0:0 -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    7:7:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View):0:0 -> a
    7:7:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0 -> a
    8:8:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0:0 -> a
    9:9:android.view.View$AccessibilityDelegate androidx.core.view.AccessibilityDelegateCompat.getBridge():0:0 -> a
    9:9:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0 -> a
    10:10:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat):0:0 -> a
    void setBackground(android.view.View,android.graphics.drawable.Drawable) -> a
    void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> a
    void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> a
    void setElevation(android.view.View,float) -> a
    void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> a
    void setScrollIndicators(android.view.View,int,int) -> a
    void setTransitionName(android.view.View,java.lang.String) -> a
    1:1:boolean androidx.core.view.ViewCompat$UnhandledKeyEventManager.preDispatch(android.view.KeyEvent):0:0 -> b
    1:1:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent):0 -> b
    android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> b
    int getLayoutDirection(android.view.View) -> c
    int getMinimumHeight(android.view.View) -> d
    java.lang.String getTransitionName(android.view.View) -> e
    int getWindowSystemUiVisibility(android.view.View) -> f
    boolean hasOnClickListeners(android.view.View) -> g
    boolean isAttachedToWindow(android.view.View) -> h
    boolean isLaidOut(android.view.View) -> i
    1:1:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty():0:0 -> j
    1:1:boolean isScreenReaderFocusable(android.view.View):0 -> j
    2:2:boolean isScreenReaderFocusable(android.view.View):0:0 -> j
    void postInvalidateOnAnimation(android.view.View) -> k
    void requestApplyInsets(android.view.View) -> l
    void stopNestedScroll(android.view.View) -> m
androidx.core.view.ViewCompat$1 -> y5$a:
    androidx.core.view.OnApplyWindowInsetsListener val$listener -> a
    1:1:java.lang.Object androidx.core.view.WindowInsetsCompat.unwrap(androidx.core.view.WindowInsetsCompat):0:0 -> onApplyWindowInsets
    1:1:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0 -> onApplyWindowInsets
    2:2:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets):0:0 -> onApplyWindowInsets
androidx.core.view.ViewCompat$3 -> z5:
    1:1:java.lang.Boolean frameworkGet(android.view.View):0:0 -> a
    1:1:java.lang.Object frameworkGet(android.view.View):0 -> a
androidx.core.view.ViewCompat$4 -> a6:
    1:1:java.lang.CharSequence frameworkGet(android.view.View):0:0 -> a
    1:1:java.lang.Object frameworkGet(android.view.View):0 -> a
androidx.core.view.ViewCompat$5 -> b6:
    1:1:java.lang.Boolean frameworkGet(android.view.View):0:0 -> a
    1:1:java.lang.Object frameworkGet(android.view.View):0 -> a
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> y5$b:
    java.util.WeakHashMap mPanesToVisible -> b
    1:1:void checkPaneVisibility(android.view.View,boolean):0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    1:1:void registerForLayoutCallback(android.view.View):0:0 -> onViewAttachedToWindow
    1:1:void onViewAttachedToWindow(android.view.View):0 -> onViewAttachedToWindow
androidx.core.view.ViewCompat$AccessibilityViewProperty -> y5$c:
    java.lang.Class mType -> b
    int mFrameworkMinimumSdk -> c
    int mTagKey -> a
    1:1:void <init>(int,java.lang.Class,int,int):0:0 -> <init>
    1:1:void <init>(int,java.lang.Class,int):0 -> <init>
    java.lang.Object frameworkGet(android.view.View) -> a
    1:1:boolean frameworkAvailable():0:0 -> b
    1:1:java.lang.Object get(android.view.View):0 -> b
    2:2:java.lang.Object get(android.view.View):0:0 -> b
    3:3:boolean extrasAvailable():0:0 -> b
    3:3:java.lang.Object get(android.view.View):0 -> b
    4:4:java.lang.Object get(android.view.View):0:0 -> b
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat -> y5$d:
    boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> a
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> y5$e:
    android.util.SparseArray mCapturedKeys -> b
    java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent -> c
    java.util.ArrayList sViewsWithListeners -> d
    java.util.WeakHashMap mViewsContainingListeners -> a
    androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> a
    1:1:android.util.SparseArray getCapturedKeys():0:0 -> a
    1:1:boolean dispatch(android.view.View,android.view.KeyEvent):0 -> a
    2:2:boolean dispatch(android.view.View,android.view.KeyEvent):0:0 -> a
    android.util.SparseArray getCapturedKeys() -> a
    android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> b
    void recalcViewsWithUnhandled() -> b
    boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> c
androidx.core.view.ViewConfigurationCompat -> c6:
    boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> a
androidx.core.view.ViewPropertyAnimatorCompat -> d6:
    java.lang.Runnable mEndAction -> c
    java.lang.Runnable mStartAction -> b
    int mOldLayerType -> d
    java.lang.ref.WeakReference mView -> a
    androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> a
    void cancel() -> a
    androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> a
    androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> a
    void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> a
    androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> a
    androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> b
androidx.core.view.ViewPropertyAnimatorCompat$1 -> d6$a:
    androidx.core.view.ViewPropertyAnimatorListener val$listener -> a
    android.view.View val$view -> b
androidx.core.view.ViewPropertyAnimatorCompat$2 -> d6$b:
    androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener -> a
    android.view.View val$view -> b
    1:1:void androidx.appcompat.app.WindowDecorActionBar$3.onAnimationUpdate(android.view.View):0:0 -> onAnimationUpdate
    1:1:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorListener -> e6:
    void onAnimationEnd(android.view.View) -> a
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> f6:
    void onAnimationStart(android.view.View) -> b
    void onAnimationCancel(android.view.View) -> c
androidx.core.view.ViewPropertyAnimatorUpdateListener -> g6:
androidx.core.view.WindowInsetsCompat -> h6:
    java.lang.Object mInsets -> a
    int getSystemWindowInsetTop() -> a
    androidx.core.view.WindowInsetsCompat wrap(java.lang.Object) -> a
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> i6:
    androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat -> c
    int mClickableSpanActionId -> d
    int mOriginalClickableSpanId -> b
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> j6:
    android.view.accessibility.AccessibilityNodeInfo mInfo -> a
    int mParentVirtualDescendantId -> b
    int mVirtualDescendantId -> c
    java.util.List extrasIntList(java.lang.String) -> a
    android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> a
    android.os.Bundle getExtras() -> a
    boolean performAction(int,android.os.Bundle) -> a
    void setBooleanProperty(int,boolean) -> a
    1:1:void getBoundsInParent(android.graphics.Rect):0:0 -> toString
    1:1:java.lang.String toString():0 -> toString
    2:2:java.lang.String toString():0:0 -> toString
    3:3:void getBoundsInScreen(android.graphics.Rect):0:0 -> toString
    3:3:java.lang.String toString():0 -> toString
    4:4:java.lang.String toString():0:0 -> toString
    5:5:java.lang.CharSequence getPackageName():0:0 -> toString
    5:5:java.lang.String toString():0 -> toString
    6:6:java.lang.String toString():0:0 -> toString
    7:7:java.lang.CharSequence getClassName():0:0 -> toString
    7:7:java.lang.String toString():0 -> toString
    8:8:java.lang.String toString():0:0 -> toString
    9:9:boolean hasSpans():0:0 -> toString
    9:9:java.lang.CharSequence getText():0 -> toString
    9:9:java.lang.String toString():0 -> toString
    10:10:java.lang.CharSequence getText():0:0 -> toString
    10:10:java.lang.String toString():0 -> toString
    11:11:java.lang.String toString():0:0 -> toString
    12:12:java.lang.CharSequence getContentDescription():0:0 -> toString
    12:12:java.lang.String toString():0 -> toString
    13:13:java.lang.String toString():0:0 -> toString
    14:14:java.lang.String getViewIdResourceName():0:0 -> toString
    14:14:java.lang.String toString():0 -> toString
    15:15:java.lang.String toString():0:0 -> toString
    16:16:boolean isCheckable():0:0 -> toString
    16:16:java.lang.String toString():0 -> toString
    17:17:java.lang.String toString():0:0 -> toString
    18:18:boolean isChecked():0:0 -> toString
    18:18:java.lang.String toString():0 -> toString
    19:19:java.lang.String toString():0:0 -> toString
    20:20:boolean isFocusable():0:0 -> toString
    20:20:java.lang.String toString():0 -> toString
    21:21:java.lang.String toString():0:0 -> toString
    22:22:boolean isFocused():0:0 -> toString
    22:22:java.lang.String toString():0 -> toString
    23:23:java.lang.String toString():0:0 -> toString
    24:24:boolean isSelected():0:0 -> toString
    24:24:java.lang.String toString():0 -> toString
    25:25:java.lang.String toString():0:0 -> toString
    26:26:boolean isClickable():0:0 -> toString
    26:26:java.lang.String toString():0 -> toString
    27:27:java.lang.String toString():0:0 -> toString
    28:28:boolean isLongClickable():0:0 -> toString
    28:28:java.lang.String toString():0 -> toString
    29:29:java.lang.String toString():0:0 -> toString
    30:30:boolean isEnabled():0:0 -> toString
    30:30:java.lang.String toString():0 -> toString
    31:31:java.lang.String toString():0:0 -> toString
    32:32:boolean isPassword():0:0 -> toString
    32:32:java.lang.String toString():0 -> toString
    33:33:java.lang.String toString():0:0 -> toString
    34:34:boolean isScrollable():0:0 -> toString
    34:34:java.lang.String toString():0 -> toString
    35:35:java.lang.String toString():0:0 -> toString
    36:36:int getActions():0:0 -> toString
    36:36:java.lang.String toString():0 -> toString
    37:37:java.lang.String toString():0:0 -> toString
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> j6$a:
    java.lang.Object mAction -> a
    java.lang.Class mViewCommandArgumentClass -> b
    1:1:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    3:3:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    3:3:void <clinit>():0 -> <clinit>
    4:4:void <clinit>():0:0 -> <clinit>
    5:5:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    5:5:void <clinit>():0 -> <clinit>
    6:6:void <clinit>():0:0 -> <clinit>
    7:7:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    7:7:void <clinit>():0 -> <clinit>
    8:8:void <clinit>():0:0 -> <clinit>
    9:9:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    9:9:void <clinit>():0 -> <clinit>
    10:10:void <clinit>():0:0 -> <clinit>
    11:11:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    11:11:void <clinit>():0 -> <clinit>
    12:12:void <clinit>():0:0 -> <clinit>
    13:13:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    13:13:void <clinit>():0 -> <clinit>
    14:14:void <clinit>():0:0 -> <clinit>
    15:15:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    15:15:void <clinit>():0 -> <clinit>
    16:16:void <clinit>():0:0 -> <clinit>
    17:17:void <init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    17:17:void <clinit>():0 -> <clinit>
    18:18:void <clinit>():0:0 -> <clinit>
    19:19:void <init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    19:19:void <clinit>():0 -> <clinit>
    20:20:void <clinit>():0:0 -> <clinit>
    21:21:void <init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    21:21:void <clinit>():0 -> <clinit>
    22:22:void <clinit>():0:0 -> <clinit>
    23:23:void <init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    23:23:void <clinit>():0 -> <clinit>
    24:24:void <clinit>():0:0 -> <clinit>
    25:25:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    25:25:void <clinit>():0 -> <clinit>
    26:26:void <clinit>():0:0 -> <clinit>
    27:27:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    27:27:void <clinit>():0 -> <clinit>
    28:28:void <clinit>():0:0 -> <clinit>
    29:29:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    29:29:void <clinit>():0 -> <clinit>
    30:30:void <clinit>():0:0 -> <clinit>
    31:31:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    31:31:void <clinit>():0 -> <clinit>
    32:32:void <clinit>():0:0 -> <clinit>
    33:33:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    33:33:void <clinit>():0 -> <clinit>
    34:34:void <clinit>():0:0 -> <clinit>
    35:35:void <init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    35:35:void <clinit>():0 -> <clinit>
    36:36:void <clinit>():0:0 -> <clinit>
    37:37:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    37:37:void <clinit>():0 -> <clinit>
    38:38:void <clinit>():0:0 -> <clinit>
    39:39:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    39:39:void <clinit>():0 -> <clinit>
    40:40:void <clinit>():0:0 -> <clinit>
    41:41:void <init>(int,java.lang.CharSequence):0:0 -> <clinit>
    41:41:void <clinit>():0 -> <clinit>
    42:42:void <clinit>():0:0 -> <clinit>
    43:43:void <init>(int,java.lang.CharSequence,java.lang.Class):0:0 -> <clinit>
    43:43:void <clinit>():0 -> <clinit>
    44:44:void <clinit>():0:0 -> <clinit>
    int getId() -> a
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> k6:
    java.lang.Object mProvider -> a
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> l6:
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> m6:
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> n6:
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> o6:
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> p6:
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> q6:
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> r6:
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> s6:
androidx.core.widget.AutoScrollHelper -> t6:
    boolean mAlreadyDelayed -> m
    boolean mNeedsReset -> n
    float[] mMinimumVelocity -> k
    boolean mNeedsCancel -> o
    float[] mMaximumVelocity -> l
    boolean mAnimating -> p
    float[] mRelativeVelocity -> j
    android.view.animation.Interpolator mEdgeInterpolator -> c
    float[] mMaximumEdges -> g
    int mEdgeType -> h
    int mActivationDelay -> i
    float[] mRelativeEdges -> f
    boolean mEnabled -> q
    boolean mExclusive -> r
    java.lang.Runnable mRunnable -> e
    int DEFAULT_ACTIVATION_DELAY -> s
    android.view.View mTarget -> d
    androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller -> b
    1:1:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float):0:0 -> <init>
    1:1:void <init>(android.view.View):0 -> <init>
    2:2:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float):0:0 -> <init>
    2:2:void <init>(android.view.View):0 -> <init>
    3:3:androidx.core.widget.AutoScrollHelper setEdgeType(int):0:0 -> <init>
    3:3:void <init>(android.view.View):0 -> <init>
    4:4:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float):0:0 -> <init>
    4:4:void <init>(android.view.View):0 -> <init>
    5:5:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float):0:0 -> <init>
    5:5:void <init>(android.view.View):0 -> <init>
    6:6:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float):0:0 -> <init>
    6:6:void <init>(android.view.View):0 -> <init>
    7:7:void <init>(android.view.View):0:0 -> <init>
    8:8:androidx.core.widget.AutoScrollHelper setActivationDelay(int):0:0 -> <init>
    8:8:void <init>(android.view.View):0 -> <init>
    9:9:androidx.core.widget.AutoScrollHelper setRampUpDuration(int):0:0 -> <init>
    9:9:void <init>(android.view.View):0 -> <init>
    10:10:void androidx.core.widget.AutoScrollHelper$ClampedScroller.setRampUpDuration(int):0:0 -> <init>
    10:10:androidx.core.widget.AutoScrollHelper setRampUpDuration(int):0 -> <init>
    10:10:void <init>(android.view.View):0 -> <init>
    11:11:void androidx.core.widget.AutoScrollHelper$ClampedScroller.setRampDownDuration(int):0:0 -> <init>
    11:11:androidx.core.widget.AutoScrollHelper setRampDownDuration(int):0 -> <init>
    11:11:void <init>(android.view.View):0 -> <init>
    void cancelTargetTouch() -> a
    1:1:float getEdgeValue(float,float,float,float):0:0 -> a
    1:1:float computeTargetVelocity(int,float,float,float):0 -> a
    2:2:float computeTargetVelocity(int,float,float,float):0:0 -> a
    float constrain(float,float,float) -> a
    int constrain(int,int,int) -> a
    float constrainEdgeValue(float,float) -> a
    3:3:void requestStop():0:0 -> a
    3:3:androidx.core.widget.AutoScrollHelper setEnabled(boolean):0 -> a
    4:4:androidx.core.widget.AutoScrollHelper setEnabled(boolean):0:0 -> a
    1:1:int androidx.core.widget.AutoScrollHelper$ClampedScroller.getVerticalDirection():0:0 -> b
    1:1:boolean shouldAnimate():0 -> b
    2:2:int androidx.core.widget.AutoScrollHelper$ClampedScroller.getHorizontalDirection():0:0 -> b
    2:2:boolean shouldAnimate():0 -> b
    3:3:boolean shouldAnimate():0:0 -> b
    4:4:boolean androidx.core.widget.ListViewAutoScrollHelper.canTargetScrollVertically(int):0:0 -> b
    4:4:boolean shouldAnimate():0 -> b
    5:5:boolean shouldAnimate():0:0 -> b
    1:1:void requestStop():0:0 -> onTouch
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    2:2:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    3:3:void androidx.core.widget.AutoScrollHelper$ClampedScroller.setTargetVelocity(float,float):0:0 -> onTouch
    3:3:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    4:4:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
    5:5:void startAnimating():0:0 -> onTouch
    5:5:boolean onTouch(android.view.View,android.view.MotionEvent):0 -> onTouch
    6:6:boolean onTouch(android.view.View,android.view.MotionEvent):0:0 -> onTouch
androidx.core.widget.AutoScrollHelper$ClampedScroller -> t6$a:
    long mStopTime -> i
    float mStopValue -> j
    long mDeltaTime -> f
    long mStartTime -> e
    int mEffectiveRampDown -> k
    int mDeltaY -> h
    float mTargetVelocityY -> d
    float mTargetVelocityX -> c
    int mDeltaX -> g
    int mRampDownDuration -> b
    int mRampUpDuration -> a
    float getValueAt(long) -> a
    void requestStop() -> a
    void start() -> b
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> t6$b:
    androidx.core.widget.AutoScrollHelper this$0 -> b
    1:1:boolean androidx.core.widget.AutoScrollHelper$ClampedScroller.isFinished():0:0 -> run
    1:1:void run():0 -> run
    2:2:void run():0:0 -> run
    3:3:void androidx.core.widget.AutoScrollHelper$ClampedScroller.computeScrollDelta():0:0 -> run
    3:3:void run():0 -> run
    4:4:int androidx.core.widget.AutoScrollHelper$ClampedScroller.getDeltaX():0:0 -> run
    4:4:void run():0 -> run
    5:5:int androidx.core.widget.AutoScrollHelper$ClampedScroller.getDeltaY():0:0 -> run
    5:5:void run():0 -> run
    6:6:void run():0:0 -> run
    7:7:void androidx.core.widget.ListViewAutoScrollHelper.scrollTargetBy(int,int):0:0 -> run
    7:7:void run():0 -> run
    8:8:void androidx.core.widget.ListViewCompat.scrollListBy(android.widget.ListView,int):0:0 -> run
    8:8:void androidx.core.widget.ListViewAutoScrollHelper.scrollTargetBy(int,int):0 -> run
    8:8:void run():0 -> run
    9:9:void run():0:0 -> run
    10:10:void androidx.core.widget.AutoScrollHelper$ClampedScroller.computeScrollDelta():0:0 -> run
    10:10:void run():0 -> run
    11:11:void run():0:0 -> run
androidx.core.widget.AutoSizeableTextView -> u6:
    boolean PLATFORM_SUPPORTS_AUTOSIZE -> a
androidx.core.widget.ListViewAutoScrollHelper -> v6:
    android.widget.ListView mTarget -> t
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    boolean mFillViewport -> m
    boolean mIsLaidOut -> i
    int[] mScrollOffset -> s
    boolean mIsBeingDragged -> k
    androidx.core.view.NestedScrollingParentHelper mParentHelper -> x
    androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE -> B
    android.graphics.Rect mTempRect -> c
    android.widget.OverScroller mScroller -> d
    int[] SCROLLVIEW_STYLEABLE -> C
    android.widget.EdgeEffect mEdgeGlowTop -> e
    boolean mIsLayoutDirty -> h
    int mNestedYOffset -> u
    int mMaximumVelocity -> q
    boolean mSmoothScrollingEnabled -> n
    int mTouchSlop -> o
    android.view.VelocityTracker mVelocityTracker -> l
    int[] mScrollConsumed -> t
    long mLastScroll -> b
    int mLastMotionY -> g
    androidx.core.widget.NestedScrollView$SavedState mSavedState -> w
    android.widget.EdgeEffect mEdgeGlowBottom -> f
    float mVerticalScrollFactor -> z
    android.view.View mChildToScrollTo -> j
    int mLastScrollerY -> v
    androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener -> A
    int mActivePointerId -> r
    androidx.core.view.NestedScrollingChildHelper mChildHelper -> y
    int mMinimumVelocity -> p
    1:1:void initScrollView():0:0 -> <init>
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int):0 -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,int):0:0 -> <init>
    void abortAnimatedScroll() -> a
    1:1:boolean isOffScreen(android.view.View):0:0 -> a
    1:1:boolean arrowScroll(int):0 -> a
    2:2:boolean arrowScroll(int):0:0 -> a
    int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> a
    3:3:boolean androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> a
    3:3:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedPreScroll(int,int,int[],int[],int):0 -> a
    3:3:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0 -> a
    4:4:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedPreScroll(int,int,int[],int[],int):0:0 -> a
    4:4:boolean dispatchNestedPreScroll(int,int,int[],int[],int):0 -> a
    5:5:void androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> a
    5:5:void dispatchNestedScroll(int,int,int,int,int[],int,int[]):0 -> a
    6:6:boolean canScroll():0:0 -> a
    6:6:boolean executeKeyEvent(android.view.KeyEvent):0 -> a
    7:7:boolean executeKeyEvent(android.view.KeyEvent):0:0 -> a
    boolean isViewDescendantOf(android.view.View,android.view.View) -> a
    boolean isWithinDeltaOfScreen(android.view.View,int,int) -> a
    void onNestedPreScroll(android.view.View,int,int,int[],int) -> a
    void onNestedScroll(android.view.View,int,int,int,int,int) -> a
    void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> a
    8:8:void androidx.core.view.NestedScrollingParentHelper.onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> a
    8:8:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0 -> a
    9:9:void onNestedScrollAccepted(android.view.View,android.view.View,int,int):0:0 -> a
    10:10:void androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[],int,int[]):0:0 -> a
    10:10:void onNestedScrollInternal(int,int,int[]):0 -> a
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    11:11:void androidx.core.view.NestedScrollingParentHelper.onStopNestedScroll(android.view.View,int):0:0 -> a
    11:11:void onStopNestedScroll(android.view.View,int):0 -> a
    12:12:void onStopNestedScroll(android.view.View,int):0:0 -> a
    boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> a
    void runAnimatedScroll(boolean) -> a
    13:13:android.view.View findFocusableViewInBounds(boolean,int,int):0:0 -> a
    13:13:boolean scrollAndFocus(int,int,int):0 -> a
    14:14:boolean scrollAndFocus(int,int,int):0:0 -> a
    void scrollToChild(android.view.View) -> a
    void smoothScrollBy(int,int) -> a
    int clamp(int,int,int) -> b
    void doScrollY(int) -> b
    void ensureGlows() -> b
    boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> b
    void smoothScrollTo(int,int) -> b
    void fling(int) -> c
    void recycleVelocityTracker() -> c
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.startNestedScroll(int,int):0:0 -> c
    1:1:boolean startNestedScroll(int,int):0 -> c
    2:2:boolean androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> c
    2:2:boolean androidx.core.view.NestedScrollingChildHelper.startNestedScroll(int,int):0 -> c
    2:2:boolean startNestedScroll(int,int):0 -> c
    3:3:boolean androidx.core.view.NestedScrollingChildHelper.startNestedScroll(int,int):0:0 -> c
    3:3:boolean startNestedScroll(int,int):0 -> c
    4:4:boolean androidx.core.view.ViewParentCompat.onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> c
    4:4:boolean androidx.core.view.NestedScrollingChildHelper.startNestedScroll(int,int):0 -> c
    4:4:boolean startNestedScroll(int,int):0 -> c
    5:5:boolean androidx.core.view.NestedScrollingChildHelper.startNestedScroll(int,int):0:0 -> c
    5:5:boolean startNestedScroll(int,int):0 -> c
    6:6:void androidx.core.view.ViewParentCompat.onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int):0:0 -> c
    6:6:boolean androidx.core.view.NestedScrollingChildHelper.startNestedScroll(int,int):0 -> c
    6:6:boolean startNestedScroll(int,int):0 -> c
    7:7:boolean androidx.core.view.NestedScrollingChildHelper.startNestedScroll(int,int):0:0 -> c
    7:7:boolean startNestedScroll(int,int):0 -> c
    boolean fullScroll(int) -> d
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> dispatchNestedFling
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedFling(float,float,boolean):0 -> dispatchNestedFling
    1:1:boolean dispatchNestedFling(float,float,boolean):0 -> dispatchNestedFling
    2:2:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedFling(float,float,boolean):0:0 -> dispatchNestedFling
    2:2:boolean dispatchNestedFling(float,float,boolean):0 -> dispatchNestedFling
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> dispatchNestedPreFling
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedPreFling(float,float):0 -> dispatchNestedPreFling
    1:1:boolean dispatchNestedPreFling(float,float):0 -> dispatchNestedPreFling
    2:2:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedPreFling(float,float):0:0 -> dispatchNestedPreFling
    2:2:boolean dispatchNestedPreFling(float,float):0 -> dispatchNestedPreFling
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.dispatchNestedScroll(int,int,int,int,int[]):0:0 -> dispatchNestedScroll
    1:1:boolean dispatchNestedScroll(int,int,int,int,int[]):0 -> dispatchNestedScroll
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.hasNestedScrollingParent(int):0:0 -> e
    1:1:boolean hasNestedScrollingParent(int):0 -> e
    boolean pageScroll(int) -> f
    1:1:void androidx.core.view.NestedScrollingChildHelper.stopNestedScroll(int):0:0 -> g
    1:1:void stopNestedScroll(int):0 -> g
    2:2:void androidx.core.view.ViewParentCompat.onStopNestedScroll(android.view.ViewParent,android.view.View,int):0:0 -> g
    2:2:void androidx.core.view.NestedScrollingChildHelper.stopNestedScroll(int):0 -> g
    2:2:void stopNestedScroll(int):0 -> g
    3:3:void androidx.core.view.NestedScrollingChildHelper.stopNestedScroll(int):0:0 -> g
    3:3:void stopNestedScroll(int):0 -> g
    1:1:int androidx.core.view.NestedScrollingParentHelper.getNestedScrollAxes():0:0 -> getNestedScrollAxes
    1:1:int getNestedScrollAxes():0 -> getNestedScrollAxes
    1:1:boolean androidx.core.view.NestedScrollingChildHelper.isNestedScrollingEnabled():0:0 -> isNestedScrollingEnabled
    1:1:boolean isNestedScrollingEnabled():0 -> isNestedScrollingEnabled
    1:1:void initVelocityTrackerIfNotExists():0:0 -> onInterceptTouchEvent
    1:1:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    2:2:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    3:3:boolean inChild(int,int):0:0 -> onInterceptTouchEvent
    3:3:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    4:4:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    5:5:void initOrResetVelocityTracker():0:0 -> onInterceptTouchEvent
    5:5:boolean onInterceptTouchEvent(android.view.MotionEvent):0 -> onInterceptTouchEvent
    6:6:boolean onInterceptTouchEvent(android.view.MotionEvent):0:0 -> onInterceptTouchEvent
    1:1:boolean isOffScreen(android.view.View):0:0 -> onRequestFocusInDescendants
    1:1:boolean onRequestFocusInDescendants(int,android.graphics.Rect):0 -> onRequestFocusInDescendants
    2:2:boolean onRequestFocusInDescendants(int,android.graphics.Rect):0:0 -> onRequestFocusInDescendants
    1:1:void androidx.appcompat.app.AlertController$2.onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int):0:0 -> onScrollChanged
    1:1:void onScrollChanged(int,int,int,int):0 -> onScrollChanged
    1:1:void initVelocityTrackerIfNotExists():0:0 -> onTouchEvent
    1:1:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    2:2:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    3:3:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> onTouchEvent
    3:3:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    4:4:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    5:5:void androidx.core.widget.EdgeEffectCompat.onPull(android.widget.EdgeEffect,float,float):0:0 -> onTouchEvent
    5:5:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    6:6:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    7:7:void endDrag():0:0 -> onTouchEvent
    7:7:boolean onTouchEvent(android.view.MotionEvent):0 -> onTouchEvent
    8:8:boolean onTouchEvent(android.view.MotionEvent):0:0 -> onTouchEvent
    1:1:boolean scrollToChildRect(android.graphics.Rect,boolean):0:0 -> requestChildRectangleOnScreen
    1:1:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean):0 -> requestChildRectangleOnScreen
    1:1:void androidx.core.view.NestedScrollingChildHelper.setNestedScrollingEnabled(boolean):0:0 -> setNestedScrollingEnabled
    1:1:void setNestedScrollingEnabled(boolean):0 -> setNestedScrollingEnabled
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$a:
    1:1:void androidx.core.view.accessibility.AccessibilityRecordCompat.setMaxScrollX(android.view.accessibility.AccessibilityRecord,int):0:0 -> a
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    2:2:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> a
    3:3:void androidx.core.view.accessibility.AccessibilityRecordCompat.setMaxScrollY(android.view.accessibility.AccessibilityRecord,int):0:0 -> a
    3:3:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent):0 -> a
    4:4:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> a
    4:4:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> a
    5:5:android.view.accessibility.AccessibilityNodeInfo androidx.core.view.accessibility.AccessibilityNodeInfoCompat.unwrap():0:0 -> a
    5:5:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> a
    5:5:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> a
    6:6:void androidx.core.view.AccessibilityDelegateCompat.onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> a
    6:6:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> a
    7:7:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> a
    8:8:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setClassName(java.lang.CharSequence):0:0 -> a
    8:8:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> a
    9:9:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> a
    10:10:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.setScrollable(boolean):0:0 -> a
    10:10:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> a
    11:11:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> a
    12:12:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> a
    12:12:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> a
    13:13:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0:0 -> a
    14:14:void androidx.core.view.accessibility.AccessibilityNodeInfoCompat.addAction(int):0:0 -> a
    14:14:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat):0 -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
androidx.core.widget.NestedScrollView$OnScrollChangeListener -> androidx.core.widget.NestedScrollView$b:
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$c:
    int scrollPosition -> b
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$c$a:
    1:1:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.core.widget.NestedScrollView$SavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.core.widget.TextViewCompat$OreoCallback -> w6:
    android.widget.TextView mTextView -> b
    boolean mCanUseMenuBuilderReferences -> e
    java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod -> d
    boolean mInitializedMenuBuilderReferences -> f
    android.view.ActionMode$Callback mCallback -> a
    java.lang.Class mMenuBuilderClass -> c
    android.content.Intent createProcessTextIntent() -> a
    1:1:void recomputeProcessTextMenuItems(android.view.Menu):0:0 -> onPrepareActionMode
    1:1:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    2:2:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0:0 -> onPrepareActionMode
    2:2:void recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    2:2:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    3:3:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context):0:0 -> onPrepareActionMode
    3:3:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0 -> onPrepareActionMode
    3:3:void recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    3:3:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    4:4:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager):0:0 -> onPrepareActionMode
    4:4:void recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    4:4:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    5:5:void recomputeProcessTextMenuItems(android.view.Menu):0:0 -> onPrepareActionMode
    5:5:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    6:6:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0:0 -> onPrepareActionMode
    6:6:void recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    6:6:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    7:7:boolean isEditable(android.widget.TextView):0:0 -> onPrepareActionMode
    7:7:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0 -> onPrepareActionMode
    7:7:void recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    7:7:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    8:8:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView):0:0 -> onPrepareActionMode
    8:8:void recomputeProcessTextMenuItems(android.view.Menu):0 -> onPrepareActionMode
    8:8:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    9:9:void recomputeProcessTextMenuItems(android.view.Menu):0:0 -> onPrepareActionMode
    9:9:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0 -> onPrepareActionMode
    10:10:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu):0:0 -> onPrepareActionMode
androidx.core.widget.TintableCompoundButton -> x6:
androidx.core.widget.TintableCompoundDrawablesView -> y6:
androidx.core.widget.TintableImageSourceView -> z6:
androidx.cursoradapter.widget.CursorAdapter -> a7:
    androidx.cursoradapter.widget.CursorFilter mCursorFilter -> i
    androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver -> g
    android.database.Cursor mCursor -> d
    android.database.DataSetObserver mDataSetObserver -> h
    int mRowIDColumn -> f
    android.content.Context mContext -> e
    boolean mDataValid -> b
    boolean mAutoRequery -> c
    1:1:void init(android.content.Context,android.database.Cursor,int):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.database.Cursor,boolean):0 -> <init>
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    1:1:android.database.Cursor swapCursor(android.database.Cursor):0:0 -> a
    1:1:void changeCursor(android.database.Cursor):0 -> a
    2:2:void changeCursor(android.database.Cursor):0:0 -> a
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    java.lang.CharSequence convertToString(android.database.Cursor) -> b
    1:1:android.view.View androidx.cursoradapter.widget.ResourceCursorAdapter.newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup):0:0 -> getDropDownView
    1:1:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0 -> getDropDownView
    2:2:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup):0:0 -> getDropDownView
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> a7$a:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
    1:1:void androidx.cursoradapter.widget.CursorAdapter.onContentChanged():0:0 -> onChange
    1:1:void onChange(boolean):0 -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> a7$b:
    androidx.cursoradapter.widget.CursorAdapter this$0 -> a
androidx.cursoradapter.widget.CursorFilter -> b7:
    androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient -> a
    1:1:android.database.Cursor androidx.cursoradapter.widget.CursorAdapter.getCursor():0:0 -> publishResults
    1:1:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults):0 -> publishResults
    2:2:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults):0:0 -> publishResults
androidx.cursoradapter.widget.CursorFilter$CursorFilterClient -> b7$a:
androidx.cursoradapter.widget.ResourceCursorAdapter -> c7:
    int mLayout -> j
    int mDropDownLayout -> k
    android.view.LayoutInflater mInflater -> l
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
androidx.customview.view.AbsSavedState -> d7:
    android.os.Parcelable mSuperState -> b
    androidx.customview.view.AbsSavedState EMPTY_STATE -> c
    1:1:void <init>():0:0 -> <init>
    1:1:void <init>(androidx.customview.view.AbsSavedState$1):0 -> <init>
androidx.customview.view.AbsSavedState$1 -> d7$a:
androidx.customview.view.AbsSavedState$2 -> d7$b:
    1:1:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    2:2:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader):0:0 -> createFromParcel
    2:2:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader):0 -> createFromParcel
    1:1:androidx.customview.view.AbsSavedState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.BackStackRecord -> e7:
    androidx.fragment.app.FragmentManagerImpl mManager -> r
    int mIndex -> t
    boolean mCommitted -> s
    void bumpBackStackNesting(int) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    1:1:void androidx.fragment.app.Fragment.setNextTransition(int,int):0:0 -> a
    1:1:void executeOps():0 -> a
    2:2:void executeOps():0:0 -> a
    3:3:void androidx.fragment.app.Fragment.setNextTransition(int,int):0:0 -> a
    3:3:void executePopOps(boolean):0 -> a
    4:4:void executePopOps(boolean):0:0 -> a
    5:5:void androidx.fragment.app.FragmentManagerImpl.addBackStackState(androidx.fragment.app.BackStackRecord):0:0 -> a
    5:5:boolean generateOps(java.util.ArrayList,java.util.ArrayList):0 -> a
    boolean interactsWith(java.util.ArrayList,int,int) -> a
    6:6:boolean androidx.fragment.app.Fragment.isPostponed():0:0 -> a
    6:6:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op):0 -> a
    boolean interactsWith(int) -> b
androidx.fragment.app.BackStackState -> f7:
    int mBreadCrumbShortTitleRes -> l
    java.lang.String mName -> h
    boolean mReorderingAllowed -> p
    int mBreadCrumbTitleRes -> j
    int mIndex -> i
    int mTransition -> f
    int mTransitionStyle -> g
    java.util.ArrayList mFragmentWhos -> c
    java.lang.CharSequence mBreadCrumbTitleText -> k
    java.util.ArrayList mSharedElementTargetNames -> o
    java.lang.CharSequence mBreadCrumbShortTitleText -> m
    java.util.ArrayList mSharedElementSourceNames -> n
    int[] mOps -> b
    int[] mOldMaxLifecycleStates -> d
    int[] mCurrentMaxLifecycleStates -> e
    1:1:void androidx.fragment.app.FragmentTransaction.addOp(androidx.fragment.app.FragmentTransaction$Op):0:0 -> a
    1:1:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl):0 -> a
    2:2:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl):0:0 -> a
androidx.fragment.app.BackStackState$1 -> f7$a:
    1:1:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.fragment.app.BackStackState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    boolean mRemoving -> m
    java.lang.String mWho -> f
    java.lang.Boolean mSavedUserVisibleHint -> e
    android.os.Bundle mSavedFragmentState -> c
    android.os.Bundle mArguments -> g
    boolean mPerformedCreateView -> q
    androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo -> L
    androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData -> U
    androidx.fragment.app.FragmentManagerImpl mChildFragmentManager -> u
    androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner -> T
    android.view.ViewGroup mContainer -> G
    boolean mRetainInstanceChangedWhileDetached -> C
    boolean mIsNewlyAdded -> M
    boolean mFromLayout -> n
    java.lang.String mTargetWho -> i
    boolean mIsCreated -> Q
    androidx.fragment.app.Fragment mParentFragment -> v
    android.view.View mInnerView -> I
    java.lang.String mTag -> y
    boolean mHidden -> z
    android.view.LayoutInflater mLayoutInflater -> P
    int mBackStackNesting -> r
    float mPostponedAlpha -> O
    boolean mHasMenu -> D
    androidx.lifecycle.Lifecycle$State mMaxState -> R
    boolean mHiddenChanged -> N
    boolean mInLayout -> o
    int mTargetRequestCode -> j
    java.lang.Boolean mIsPrimaryNavigationFragment -> k
    boolean mDeferStart -> J
    int mState -> b
    androidx.fragment.app.FragmentHostCallback mHost -> t
    android.view.View mView -> H
    java.lang.Object USE_DEFAULT_TRANSITION -> X
    androidx.fragment.app.FragmentManagerImpl mFragmentManager -> s
    android.util.SparseArray mSavedViewState -> d
    boolean mMenuVisible -> E
    int mFragmentId -> w
    boolean mDetached -> A
    androidx.fragment.app.Fragment mTarget -> h
    boolean mRestored -> p
    boolean mUserVisibleHint -> K
    boolean mAdded -> l
    int mContainerId -> x
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> S
    boolean mCalled -> F
    int mContentLayoutId -> W
    boolean mRetainInstance -> B
    androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController -> V
    androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> a
    androidx.lifecycle.Lifecycle getLifecycle() -> a
    androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    1:1:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> a
    1:1:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0 -> a
    2:2:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0:0 -> a
    3:3:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle):0:0 -> a
    3:3:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle):0 -> a
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    4:4:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> a
    4:4:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> a
    5:5:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> a
    6:6:void androidx.fragment.app.FragmentViewLifecycleOwner.initialize():0:0 -> a
    6:6:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> a
    7:7:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> a
    8:8:boolean androidx.fragment.app.FragmentViewLifecycleOwner.isInitialized():0:0 -> a
    8:8:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0 -> a
    9:9:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle):0:0 -> a
    10:10:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0:0 -> a
    10:10:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> a
    10:10:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> a
    11:11:android.view.LayoutInflater androidx.fragment.app.FragmentActivity$HostCallbacks.onGetLayoutInflater():0:0 -> a
    11:11:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0 -> a
    11:11:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> a
    11:11:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> a
    12:12:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0:0 -> a
    12:12:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> a
    12:12:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> a
    13:13:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0:0 -> a
    14:14:android.view.LayoutInflater getLayoutInflater(android.os.Bundle):0:0 -> a
    14:14:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle):0 -> a
    14:14:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle):0 -> a
    void performMultiWindowModeChanged(boolean) -> a
    boolean performPrepareOptionsMenu(android.view.Menu) -> a
    void setAnimatingAway(android.view.View) -> a
    void setAnimator(android.animation.Animator) -> a
    void setNextAnim(int) -> a
    15:15:void androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener.startListening():0:0 -> a
    15:15:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener):0 -> a
    void performPictureInPictureModeChanged(boolean) -> b
    1:1:boolean isStateSaved():0:0 -> b
    1:1:void setArguments(android.os.Bundle):0 -> b
    2:2:void setArguments(android.os.Bundle):0:0 -> b
    1:1:androidx.savedstate.SavedStateRegistry androidx.savedstate.SavedStateRegistryController.getSavedStateRegistry():0:0 -> c
    1:1:androidx.savedstate.SavedStateRegistry getSavedStateRegistry():0 -> c
    void setHideReplaced(boolean) -> c
    1:1:androidx.lifecycle.ViewModelStore androidx.fragment.app.FragmentManagerImpl.getViewModelStore(androidx.fragment.app.Fragment):0:0 -> d
    1:1:androidx.lifecycle.ViewModelStore getViewModelStore():0 -> d
    2:2:androidx.lifecycle.ViewModelStore getViewModelStore():0:0 -> d
    1:1:void androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener.onStartEnterTransition():0:0 -> e
    1:1:void callStartTransitionListener():0 -> e
    androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> f
    android.view.View getAnimatingAway() -> g
    android.animation.Animator getAnimator() -> h
    androidx.fragment.app.FragmentManager getChildFragmentManager() -> i
    1:1:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> j
    1:1:android.content.Context getContext():0 -> j
    java.lang.Object getEnterTransition() -> k
    androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> l
    java.lang.Object getExitTransition() -> m
    int getNextAnim() -> n
    int getNextTransition() -> o
    1:1:androidx.fragment.app.FragmentActivity getActivity():0:0 -> onCreateContextMenu
    1:1:androidx.fragment.app.FragmentActivity requireActivity():0 -> onCreateContextMenu
    1:1:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo):0 -> onCreateContextMenu
    2:2:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> onCreateContextMenu
    2:2:androidx.fragment.app.FragmentActivity getActivity():0 -> onCreateContextMenu
    2:2:androidx.fragment.app.FragmentActivity requireActivity():0 -> onCreateContextMenu
    2:2:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo):0 -> onCreateContextMenu
    3:3:androidx.fragment.app.FragmentActivity getActivity():0:0 -> onCreateContextMenu
    3:3:androidx.fragment.app.FragmentActivity requireActivity():0 -> onCreateContextMenu
    3:3:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo):0 -> onCreateContextMenu
    4:4:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo):0:0 -> onCreateContextMenu
    5:5:androidx.fragment.app.FragmentActivity requireActivity():0:0 -> onCreateContextMenu
    5:5:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo):0 -> onCreateContextMenu
    int getNextTransitionStyle() -> p
    java.lang.Object getSharedElementEnterTransition() -> q
    int getStateAfterAnimating() -> r
    1:1:androidx.savedstate.SavedStateRegistryController androidx.savedstate.SavedStateRegistryController.create(androidx.savedstate.SavedStateRegistryOwner):0:0 -> s
    1:1:void initLifecycle():0 -> s
    2:2:void initLifecycle():0:0 -> s
    boolean isHideReplaced() -> t
    boolean isInBackStack() -> u
    void onDestroyOptionsMenu() -> v
    1:1:void onLowMemory():0:0 -> w
    1:1:void performLowMemory():0 -> w
    2:2:void performLowMemory():0:0 -> w
    1:1:android.view.View getView():0:0 -> x
    1:1:android.view.View requireView():0 -> x
    2:2:android.view.View requireView():0:0 -> x
    1:1:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> y
    1:1:void startPostponedEnterTransition():0 -> y
    2:2:void startPostponedEnterTransition():0:0 -> y
    3:3:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> y
    3:3:void startPostponedEnterTransition():0 -> y
    4:4:void startPostponedEnterTransition():0:0 -> y
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$a:
    androidx.fragment.app.Fragment this$0 -> b
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    androidx.fragment.app.Fragment this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$b:
    androidx.fragment.app.Fragment this$0 -> b
androidx.fragment.app.Fragment$4 -> g7:
    androidx.fragment.app.Fragment this$0 -> a
    android.view.View onFindViewById(int) -> a
    boolean onHasView() -> c
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$c:
    java.lang.Object mReenterTransition -> j
    java.lang.Object mSharedElementEnterTransition -> k
    java.lang.Object mReturnTransition -> h
    java.lang.Object mExitTransition -> i
    androidx.core.app.SharedElementCallback mEnterTransitionCallback -> o
    java.lang.Object mEnterTransition -> g
    androidx.core.app.SharedElementCallback mExitTransitionCallback -> p
    int mNextTransitionStyle -> f
    int mNextAnim -> d
    java.lang.Boolean mAllowReturnTransitionOverlap -> m
    int mNextTransition -> e
    java.lang.Boolean mAllowEnterTransitionOverlap -> n
    boolean mEnterTransitionPostponed -> q
    int mStateAfterAnimating -> c
    java.lang.Object mSharedElementReturnTransition -> l
    boolean mIsHideReplaced -> s
    androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener -> r
    android.animation.Animator mAnimator -> b
    android.view.View mAnimatingAway -> a
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$d:
androidx.fragment.app.Fragment$OnStartEnterTransitionListener -> androidx.fragment.app.Fragment$e:
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    boolean mStartedIntentSenderFromFragment -> m
    androidx.fragment.app.FragmentController mFragments -> h
    boolean mStartedActivityFromFragment -> n
    int mNextCandidateRequestIndex -> o
    boolean mCreated -> j
    androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry -> i
    boolean mResumed -> k
    boolean mStopped -> l
    androidx.collection.SparseArrayCompat mPendingFragmentActivityResults -> p
    1:1:androidx.fragment.app.FragmentController androidx.fragment.app.FragmentController.createController(androidx.fragment.app.FragmentHostCallback):0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    void checkForValidRequestCode(int) -> a
    1:1:android.view.View androidx.fragment.app.FragmentController.onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> a
    1:1:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> a
    2:2:androidx.lifecycle.Lifecycle androidx.fragment.app.Fragment.getLifecycle():0:0 -> a
    2:2:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> a
    3:3:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> a
    3:3:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> a
    4:4:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> a
    5:5:void androidx.lifecycle.LifecycleRegistry.setCurrentState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    5:5:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> a
    6:6:java.lang.Object androidx.fragment.app.Fragment.getHost():0:0 -> a
    6:6:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> a
    7:7:androidx.fragment.app.FragmentActivity androidx.fragment.app.FragmentActivity$HostCallbacks.onGetHost():0:0 -> a
    7:7:java.lang.Object androidx.fragment.app.FragmentActivity$HostCallbacks.onGetHost():0 -> a
    7:7:java.lang.Object androidx.fragment.app.Fragment.getHost():0 -> a
    7:7:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0 -> a
    8:8:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State):0:0 -> a
    boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> a
    1:1:void androidx.loader.app.LoaderManagerImpl.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> dump
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> dump
    2:2:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> dump
    3:3:androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentController.getSupportFragmentManager():0:0 -> dump
    3:3:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> dump
    4:4:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> dump
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.FragmentController.getSupportFragmentManager():0:0 -> g
    1:1:androidx.fragment.app.FragmentManager getSupportFragmentManager():0 -> g
    void onAttachFragment(androidx.fragment.app.Fragment) -> h
    1:1:void androidx.fragment.app.FragmentController.dispatchResume():0:0 -> i
    1:1:void onResumeFragments():0 -> i
    void supportInvalidateOptionsMenu() -> j
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentController.findFragmentByWho(java.lang.String):0:0 -> onActivityResult
    1:1:void onActivityResult(int,int,android.content.Intent):0 -> onActivityResult
    2:2:void onActivityResult(int,int,android.content.Intent):0:0 -> onActivityResult
    1:1:void androidx.fragment.app.FragmentController.dispatchConfigurationChanged(android.content.res.Configuration):0:0 -> onConfigurationChanged
    1:1:void onConfigurationChanged(android.content.res.Configuration):0 -> onConfigurationChanged
    1:1:void androidx.fragment.app.FragmentController.attachHost(androidx.fragment.app.Fragment):0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
    3:3:void androidx.fragment.app.FragmentController.restoreSaveState(android.os.Parcelable):0:0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0:0 -> onCreate
    5:5:void androidx.fragment.app.FragmentController.restoreSaveState(android.os.Parcelable):0:0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0:0 -> onCreate
    7:7:void androidx.collection.SparseArrayCompat.<init>():0:0 -> onCreate
    7:7:void onCreate(android.os.Bundle):0 -> onCreate
    8:8:void onCreate(android.os.Bundle):0:0 -> onCreate
    9:9:void androidx.fragment.app.FragmentController.dispatchCreate():0:0 -> onCreate
    9:9:void onCreate(android.os.Bundle):0 -> onCreate
    1:1:boolean androidx.fragment.app.FragmentController.dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater):0:0 -> onCreatePanelMenu
    1:1:boolean onCreatePanelMenu(int,android.view.Menu):0 -> onCreatePanelMenu
    2:2:boolean onCreatePanelMenu(int,android.view.Menu):0:0 -> onCreatePanelMenu
    1:1:void androidx.fragment.app.FragmentController.dispatchDestroy():0:0 -> onDestroy
    1:1:void onDestroy():0 -> onDestroy
    2:2:void onDestroy():0:0 -> onDestroy
    1:1:void androidx.fragment.app.FragmentController.dispatchLowMemory():0:0 -> onLowMemory
    1:1:void onLowMemory():0 -> onLowMemory
    1:1:boolean androidx.fragment.app.FragmentController.dispatchContextItemSelected(android.view.MenuItem):0:0 -> onMenuItemSelected
    1:1:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    2:2:boolean onMenuItemSelected(int,android.view.MenuItem):0:0 -> onMenuItemSelected
    3:3:boolean androidx.fragment.app.FragmentController.dispatchOptionsItemSelected(android.view.MenuItem):0:0 -> onMenuItemSelected
    3:3:boolean onMenuItemSelected(int,android.view.MenuItem):0 -> onMenuItemSelected
    1:1:void androidx.fragment.app.FragmentController.dispatchMultiWindowModeChanged(boolean):0:0 -> onMultiWindowModeChanged
    1:1:void onMultiWindowModeChanged(boolean):0 -> onMultiWindowModeChanged
    1:1:void androidx.fragment.app.FragmentController.dispatchOptionsMenuClosed(android.view.Menu):0:0 -> onPanelClosed
    1:1:void onPanelClosed(int,android.view.Menu):0 -> onPanelClosed
    2:2:void onPanelClosed(int,android.view.Menu):0:0 -> onPanelClosed
    1:1:void androidx.fragment.app.FragmentController.dispatchPause():0:0 -> onPause
    1:1:void onPause():0 -> onPause
    2:2:void onPause():0:0 -> onPause
    1:1:void androidx.fragment.app.FragmentController.dispatchPictureInPictureModeChanged(boolean):0:0 -> onPictureInPictureModeChanged
    1:1:void onPictureInPictureModeChanged(boolean):0 -> onPictureInPictureModeChanged
    1:1:boolean androidx.fragment.app.FragmentController.dispatchPrepareOptionsMenu(android.view.Menu):0:0 -> onPreparePanel
    1:1:boolean onPreparePanel(int,android.view.View,android.view.Menu):0 -> onPreparePanel
    2:2:boolean onPreparePanel(int,android.view.View,android.view.Menu):0:0 -> onPreparePanel
    1:1:androidx.fragment.app.Fragment androidx.fragment.app.FragmentController.findFragmentByWho(java.lang.String):0:0 -> onRequestPermissionsResult
    1:1:void onRequestPermissionsResult(int,java.lang.String[],int[]):0 -> onRequestPermissionsResult
    2:2:void onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> onRequestPermissionsResult
    1:1:boolean androidx.fragment.app.FragmentController.execPendingActions():0:0 -> onResume
    1:1:void onResume():0 -> onResume
    1:1:void markFragmentsCreated():0:0 -> onSaveInstanceState
    1:1:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    2:2:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    3:3:android.os.Parcelable androidx.fragment.app.FragmentController.saveAllState():0:0 -> onSaveInstanceState
    3:3:void onSaveInstanceState(android.os.Bundle):0 -> onSaveInstanceState
    4:4:void onSaveInstanceState(android.os.Bundle):0:0 -> onSaveInstanceState
    1:1:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0:0 -> onStart
    1:1:void onStart():0 -> onStart
    2:2:void androidx.fragment.app.FragmentManagerImpl.dispatchActivityCreated():0:0 -> onStart
    2:2:void androidx.fragment.app.FragmentController.dispatchActivityCreated():0 -> onStart
    2:2:void onStart():0 -> onStart
    3:3:void onStart():0:0 -> onStart
    4:4:boolean androidx.fragment.app.FragmentController.execPendingActions():0:0 -> onStart
    4:4:void onStart():0 -> onStart
    5:5:void onStart():0:0 -> onStart
    6:6:void androidx.fragment.app.FragmentController.dispatchStart():0:0 -> onStart
    6:6:void onStart():0 -> onStart
    7:7:void androidx.fragment.app.FragmentManagerImpl.dispatchStart():0:0 -> onStart
    7:7:void androidx.fragment.app.FragmentController.dispatchStart():0 -> onStart
    7:7:void onStart():0 -> onStart
    1:1:void markFragmentsCreated():0:0 -> onStop
    1:1:void onStop():0 -> onStop
    2:2:void onStop():0:0 -> onStop
    3:3:void androidx.fragment.app.FragmentController.dispatchStop():0:0 -> onStop
    3:3:void onStop():0 -> onStop
    4:4:void androidx.fragment.app.FragmentManagerImpl.dispatchStop():0:0 -> onStop
    4:4:void androidx.fragment.app.FragmentController.dispatchStop():0 -> onStop
    4:4:void onStop():0 -> onStop
    5:5:void onStop():0:0 -> onStop
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$a:
    androidx.fragment.app.FragmentActivity this$0 -> g
    androidx.lifecycle.Lifecycle getLifecycle() -> a
    android.view.View onFindViewById(int) -> a
    androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> b
    boolean onHasView() -> c
    androidx.lifecycle.ViewModelStore getViewModelStore() -> d
androidx.fragment.app.FragmentContainer -> h7:
    androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    android.view.View onFindViewById(int) -> a
    boolean onHasView() -> c
androidx.fragment.app.FragmentController -> i7:
    androidx.fragment.app.FragmentHostCallback mHost -> a
    void noteStateNotSaved() -> a
androidx.fragment.app.FragmentFactory -> j7:
    androidx.collection.SimpleArrayMap sClassMap -> a
    androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> a
    boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> b
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> c
    1:1:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0 -> c
    2:2:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String):0:0 -> c
    java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> d
androidx.fragment.app.FragmentHostCallback -> k7:
    android.content.Context mContext -> c
    android.os.Handler mHandler -> d
    androidx.fragment.app.FragmentManagerImpl mFragmentManager -> f
    int mWindowAnimations -> e
    android.app.Activity mActivity -> b
    1:1:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int):0:0 -> <init>
    1:1:void <init>(androidx.fragment.app.FragmentActivity):0 -> <init>
androidx.fragment.app.FragmentManager -> l7:
    androidx.fragment.app.FragmentFactory mFragmentFactory -> b
    androidx.fragment.app.FragmentFactory DEFAULT_FACTORY -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    java.util.List getFragments() -> a
    boolean popBackStackImmediate() -> b
androidx.fragment.app.FragmentManager$BackStackEntry -> l7$a:
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> l7$b:
androidx.fragment.app.FragmentManager$OnBackStackChangedListener -> l7$c:
    void onBackStackChanged() -> a
androidx.fragment.app.FragmentManagerImpl -> m7:
    android.os.Bundle mStateBundle -> D
    int mNextFragmentIndex -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mPostponedTransactions -> F
    boolean mStateSaved -> w
    android.view.animation.Interpolator DECELERATE_QUINT -> I
    java.util.ArrayList mTmpIsPop -> B
    androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher -> k
    androidx.activity.OnBackPressedCallback mOnBackPressedCallback -> l
    androidx.fragment.app.Fragment mPrimaryNav -> u
    java.util.ArrayList mBackStackChangeListeners -> o
    androidx.fragment.app.FragmentHostCallback mHost -> r
    java.util.ArrayList mBackStackIndices -> m
    boolean mDestroyed -> y
    java.lang.Runnable mExecCommit -> H
    java.util.ArrayList mBackStack -> i
    android.util.SparseArray mStateArray -> E
    androidx.fragment.app.FragmentManagerViewModel mNonConfig -> G
    int mCurState -> q
    java.util.HashMap mActive -> h
    boolean mNeedMenuInvalidate -> v
    java.util.ArrayList mPendingActions -> d
    boolean mStopped -> x
    androidx.fragment.app.Fragment mParent -> t
    java.util.ArrayList mTmpAddedFragments -> C
    java.util.ArrayList mTmpRecords -> A
    android.view.animation.Interpolator DECELERATE_CUBIC -> J
    java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks -> p
    java.util.ArrayList mAvailBackStackIndices -> n
    androidx.fragment.app.FragmentContainer mContainer -> s
    java.util.ArrayList mCreatedMenus -> j
    boolean mHavePendingDeferredStart -> z
    boolean mExecutingActions -> e
    void addAddedFragments(androidx.collection.ArraySet) -> a
    1:1:void moveToState(androidx.fragment.app.Fragment):0:0 -> a
    1:1:void addFragment(androidx.fragment.app.Fragment,boolean):0 -> a
    2:2:void addFragment(androidx.fragment.app.Fragment,boolean):0:0 -> a
    3:3:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment):0:0 -> a
    3:3:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> a
    4:4:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> a
    5:5:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> a
    5:5:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> a
    6:6:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> a
    6:6:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> a
    6:6:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> a
    7:7:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelStore.get(java.lang.String):0:0 -> a
    7:7:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> a
    7:7:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> a
    7:7:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> a
    7:7:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> a
    8:8:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0:0 -> a
    8:8:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> a
    8:8:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> a
    8:8:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> a
    9:9:void androidx.lifecycle.ViewModelStore.put(java.lang.String,androidx.lifecycle.ViewModel):0:0 -> a
    9:9:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> a
    9:9:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> a
    9:9:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> a
    9:9:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> a
    10:10:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> a
    10:10:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> a
    11:11:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> a
    11:11:androidx.fragment.app.FragmentManagerViewModel androidx.fragment.app.FragmentManagerViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> a
    11:11:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0 -> a
    12:12:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment):0:0 -> a
    void attachFragment(androidx.fragment.app.Fragment) -> a
    void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> a
    13:13:void androidx.fragment.app.Fragment.onConfigurationChanged(android.content.res.Configuration):0:0 -> a
    13:13:void androidx.fragment.app.Fragment.performConfigurationChanged(android.content.res.Configuration):0 -> a
    13:13:void dispatchConfigurationChanged(android.content.res.Configuration):0 -> a
    14:14:void androidx.fragment.app.Fragment.performConfigurationChanged(android.content.res.Configuration):0:0 -> a
    14:14:void dispatchConfigurationChanged(android.content.res.Configuration):0 -> a
    15:15:boolean androidx.fragment.app.Fragment.performContextItemSelected(android.view.MenuItem):0:0 -> a
    15:15:boolean dispatchContextItemSelected(android.view.MenuItem):0 -> a
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void dispatchMultiWindowModeChanged(boolean) -> a
    16:16:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> a
    16:16:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> a
    17:17:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> a
    18:18:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> a
    18:18:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean):0 -> a
    19:19:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean):0:0 -> a
    20:20:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> a
    20:20:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0 -> a
    21:21:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean):0:0 -> a
    22:22:void androidx.fragment.app.Fragment.performOptionsMenuClosed(android.view.Menu):0:0 -> a
    22:22:void dispatchOptionsMenuClosed(android.view.Menu):0 -> a
    void dispatchStateChange(int) -> a
    23:23:void androidx.fragment.app.Fragment.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    23:23:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    24:24:androidx.fragment.app.Fragment androidx.fragment.app.Fragment.getTargetFragment():0:0 -> a
    24:24:void androidx.fragment.app.Fragment.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    24:24:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    25:25:void androidx.fragment.app.Fragment.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    25:25:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    26:26:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    27:27:void androidx.fragment.app.BackStackRecord.dump(java.lang.String,java.io.PrintWriter):0:0 -> a
    27:27:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    28:28:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    29:29:androidx.fragment.app.Fragment getPrimaryNavigationFragment():0:0 -> a
    29:29:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    30:30:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> a
    31:31:androidx.fragment.app.Fragment androidx.fragment.app.BackStackRecord.expandOps(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> a
    31:31:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    32:32:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> a
    33:33:androidx.fragment.app.Fragment androidx.fragment.app.BackStackRecord.trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment):0:0 -> a
    33:33:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    34:34:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> a
    35:35:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> a
    35:35:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    36:36:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> a
    37:37:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet):0:0 -> a
    37:37:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    38:38:boolean androidx.fragment.app.BackStackRecord.isPostponed():0:0 -> a
    38:38:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet):0 -> a
    38:38:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    39:39:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet):0:0 -> a
    39:39:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    40:40:void androidx.fragment.app.BackStackRecord.setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener):0:0 -> a
    40:40:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet):0 -> a
    40:40:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    41:41:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet):0:0 -> a
    41:41:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    42:42:int androidx.collection.ArraySet.size():0:0 -> a
    42:42:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet):0 -> a
    42:42:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    43:43:java.lang.Object androidx.collection.ArraySet.valueAt(int):0:0 -> a
    43:43:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet):0 -> a
    43:43:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    44:44:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet):0:0 -> a
    44:44:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    45:45:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> a
    46:46:void androidx.fragment.app.BackStackRecord.runOnCommitRunnables():0:0 -> a
    46:46:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    47:47:void reportBackStackChanged():0:0 -> a
    47:47:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int):0 -> a
    48:48:boolean androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener.isReady():0:0 -> a
    48:48:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0 -> a
    49:49:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0:0 -> a
    50:50:void androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener.cancelTransaction():0:0 -> a
    50:50:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0 -> a
    51:51:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList):0:0 -> a
    androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> a
    java.util.List getFragments() -> a
    52:52:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    52:52:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0 -> a
    53:53:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0:0 -> a
    54:54:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    54:54:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0 -> a
    55:55:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0:0 -> a
    56:56:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    56:56:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0 -> a
    57:57:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0:0 -> a
    58:58:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    58:58:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0 -> a
    59:59:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0:0 -> a
    60:60:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float):0:0 -> a
    60:60:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0 -> a
    61:61:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0:0 -> a
    62:62:boolean androidx.fragment.app.FragmentActivity$HostCallbacks.onHasWindowAnimations():0:0 -> a
    62:62:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0 -> a
    63:63:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0:0 -> a
    64:64:int androidx.fragment.app.FragmentActivity$HostCallbacks.onGetWindowAnimations():0:0 -> a
    64:64:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int):0 -> a
    androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float) -> a
    65:65:void androidx.fragment.app.FragmentActivity$HostCallbacks.onSupportInvalidateOptionsMenu():0:0 -> a
    65:65:void moveToState(int,boolean):0 -> a
    66:66:void moveToState(int,boolean):0:0 -> a
    67:67:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    67:67:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    68:68:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    69:69:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String):0:0 -> a
    69:69:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    70:70:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    71:71:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String):0:0 -> a
    71:71:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    72:72:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    73:73:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    73:73:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    74:74:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    75:75:void androidx.fragment.app.Fragment.performAttach():0:0 -> a
    75:75:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    76:76:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    76:76:void androidx.fragment.app.Fragment.performAttach():0 -> a
    76:76:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    77:77:void androidx.fragment.app.Fragment.onAttach(android.content.Context):0:0 -> a
    77:77:void androidx.fragment.app.Fragment.performAttach():0 -> a
    77:77:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    78:78:android.app.Activity androidx.fragment.app.FragmentHostCallback.getActivity():0:0 -> a
    78:78:void androidx.fragment.app.Fragment.onAttach(android.content.Context):0 -> a
    78:78:void androidx.fragment.app.Fragment.performAttach():0 -> a
    78:78:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    79:79:void androidx.fragment.app.Fragment.onAttach(android.content.Context):0:0 -> a
    79:79:void androidx.fragment.app.Fragment.performAttach():0 -> a
    79:79:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    80:80:void androidx.fragment.app.Fragment.onAttach(android.app.Activity):0:0 -> a
    80:80:void androidx.fragment.app.Fragment.onAttach(android.content.Context):0 -> a
    80:80:void androidx.fragment.app.Fragment.performAttach():0 -> a
    80:80:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    81:81:void androidx.fragment.app.Fragment.performAttach():0:0 -> a
    81:81:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    82:82:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    83:83:void androidx.fragment.app.FragmentActivity$HostCallbacks.onAttachFragment(androidx.fragment.app.Fragment):0:0 -> a
    83:83:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    84:84:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    85:85:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    85:85:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    86:86:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    87:87:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0:0 -> a
    87:87:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    88:88:void androidx.fragment.app.Fragment.onCreate(android.os.Bundle):0:0 -> a
    88:88:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0 -> a
    88:88:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    89:89:void androidx.fragment.app.Fragment.restoreChildFragmentState(android.os.Bundle):0:0 -> a
    89:89:void androidx.fragment.app.Fragment.onCreate(android.os.Bundle):0 -> a
    89:89:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0 -> a
    89:89:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    90:90:void androidx.fragment.app.Fragment.onCreate(android.os.Bundle):0:0 -> a
    90:90:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0 -> a
    90:90:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    91:91:boolean isStateAtLeast(int):0:0 -> a
    91:91:void androidx.fragment.app.Fragment.onCreate(android.os.Bundle):0 -> a
    91:91:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0 -> a
    91:91:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    92:92:void androidx.fragment.app.Fragment.onCreate(android.os.Bundle):0:0 -> a
    92:92:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0 -> a
    92:92:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    93:93:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0:0 -> a
    93:93:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    94:94:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    95:95:void androidx.fragment.app.Fragment.performCreate(android.os.Bundle):0:0 -> a
    95:95:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    96:96:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    97:97:void androidx.fragment.app.Fragment.restoreChildFragmentState(android.os.Bundle):0:0 -> a
    97:97:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    98:98:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    99:99:void androidx.fragment.app.Fragment.performAttach():0:0 -> a
    99:99:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    100:100:void ensureInflatedFragmentView(androidx.fragment.app.Fragment):0:0 -> a
    100:100:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    101:101:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    102:102:android.content.Context androidx.fragment.app.Fragment.getContext():0:0 -> a
    102:102:android.content.Context androidx.fragment.app.Fragment.requireContext():0 -> a
    102:102:android.content.res.Resources androidx.fragment.app.Fragment.getResources():0 -> a
    102:102:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    103:103:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    103:103:android.content.Context androidx.fragment.app.Fragment.getContext():0 -> a
    103:103:android.content.Context androidx.fragment.app.Fragment.requireContext():0 -> a
    103:103:android.content.res.Resources androidx.fragment.app.Fragment.getResources():0 -> a
    103:103:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    104:104:android.content.res.Resources androidx.fragment.app.Fragment.getResources():0:0 -> a
    104:104:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    105:105:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    106:106:android.content.Context androidx.fragment.app.Fragment.requireContext():0:0 -> a
    106:106:android.content.res.Resources androidx.fragment.app.Fragment.getResources():0 -> a
    106:106:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    107:107:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    108:108:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0:0 -> a
    108:108:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    109:109:void androidx.fragment.app.Fragment.onActivityCreated(android.os.Bundle):0:0 -> a
    109:109:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    109:109:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    110:110:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0:0 -> a
    110:110:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    111:111:void dispatchActivityCreated():0:0 -> a
    111:111:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0 -> a
    111:111:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    112:112:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    113:113:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0:0 -> a
    113:113:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    114:114:void androidx.fragment.app.Fragment.onViewStateRestored(android.os.Bundle):0:0 -> a
    114:114:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0 -> a
    114:114:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    115:115:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0:0 -> a
    115:115:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    116:116:void androidx.fragment.app.FragmentViewLifecycleOwner.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> a
    116:116:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0 -> a
    116:116:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    117:117:void androidx.fragment.app.Fragment.restoreViewState(android.os.Bundle):0:0 -> a
    117:117:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    118:118:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    119:119:void androidx.fragment.app.Fragment.performActivityCreated(android.os.Bundle):0:0 -> a
    119:119:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    120:120:void androidx.fragment.app.Fragment.performStart():0:0 -> a
    120:120:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    121:121:void androidx.fragment.app.Fragment.onStart():0:0 -> a
    121:121:void androidx.fragment.app.Fragment.performStart():0 -> a
    121:121:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    122:122:void androidx.fragment.app.Fragment.performStart():0:0 -> a
    122:122:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    123:123:void androidx.fragment.app.FragmentViewLifecycleOwner.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> a
    123:123:void androidx.fragment.app.Fragment.performStart():0 -> a
    123:123:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    124:124:void androidx.fragment.app.Fragment.performStart():0:0 -> a
    124:124:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    125:125:void dispatchStart():0:0 -> a
    125:125:void androidx.fragment.app.Fragment.performStart():0 -> a
    125:125:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    126:126:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    127:127:void androidx.fragment.app.Fragment.performStart():0:0 -> a
    127:127:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    128:128:void androidx.fragment.app.Fragment.performResume():0:0 -> a
    128:128:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    129:129:void androidx.fragment.app.Fragment.onResume():0:0 -> a
    129:129:void androidx.fragment.app.Fragment.performResume():0 -> a
    129:129:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    130:130:void androidx.fragment.app.Fragment.performResume():0:0 -> a
    130:130:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    131:131:void androidx.fragment.app.FragmentViewLifecycleOwner.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> a
    131:131:void androidx.fragment.app.Fragment.performResume():0 -> a
    131:131:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    132:132:void androidx.fragment.app.Fragment.performResume():0:0 -> a
    132:132:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    133:133:void dispatchResume():0:0 -> a
    133:133:void androidx.fragment.app.Fragment.performResume():0 -> a
    133:133:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    134:134:void androidx.fragment.app.Fragment.performResume():0:0 -> a
    134:134:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    135:135:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    136:136:void androidx.fragment.app.Fragment.performResume():0:0 -> a
    136:136:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    137:137:void androidx.fragment.app.Fragment.performPause():0:0 -> a
    137:137:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    138:138:void dispatchPause():0:0 -> a
    138:138:void androidx.fragment.app.Fragment.performPause():0 -> a
    138:138:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    139:139:void androidx.fragment.app.Fragment.performPause():0:0 -> a
    139:139:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    140:140:void androidx.fragment.app.FragmentViewLifecycleOwner.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> a
    140:140:void androidx.fragment.app.Fragment.performPause():0 -> a
    140:140:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    141:141:void androidx.fragment.app.Fragment.performPause():0:0 -> a
    141:141:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    142:142:void androidx.fragment.app.Fragment.onPause():0:0 -> a
    142:142:void androidx.fragment.app.Fragment.performPause():0 -> a
    142:142:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    143:143:void androidx.fragment.app.Fragment.performPause():0:0 -> a
    143:143:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    144:144:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    145:145:void androidx.fragment.app.Fragment.performPause():0:0 -> a
    145:145:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    146:146:void androidx.fragment.app.Fragment.performStop():0:0 -> a
    146:146:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    147:147:void dispatchStop():0:0 -> a
    147:147:void androidx.fragment.app.Fragment.performStop():0 -> a
    147:147:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    148:148:void androidx.fragment.app.Fragment.performStop():0:0 -> a
    148:148:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    149:149:void androidx.fragment.app.FragmentViewLifecycleOwner.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> a
    149:149:void androidx.fragment.app.Fragment.performStop():0 -> a
    149:149:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    150:150:void androidx.fragment.app.Fragment.performStop():0:0 -> a
    150:150:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    151:151:void androidx.fragment.app.Fragment.onStop():0:0 -> a
    151:151:void androidx.fragment.app.Fragment.performStop():0 -> a
    151:151:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    152:152:void androidx.fragment.app.Fragment.performStop():0:0 -> a
    152:152:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    153:153:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    154:154:void androidx.fragment.app.Fragment.performStop():0:0 -> a
    154:154:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    155:155:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    156:156:boolean androidx.fragment.app.FragmentActivity$HostCallbacks.onShouldSaveFragmentState(androidx.fragment.app.Fragment):0:0 -> a
    156:156:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    157:157:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    158:158:void androidx.fragment.app.Fragment.performDestroyView():0:0 -> a
    158:158:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    159:159:void dispatchDestroyView():0:0 -> a
    159:159:void androidx.fragment.app.Fragment.performDestroyView():0 -> a
    159:159:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    160:160:void androidx.fragment.app.Fragment.performDestroyView():0:0 -> a
    160:160:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    161:161:void androidx.fragment.app.FragmentViewLifecycleOwner.handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0:0 -> a
    161:161:void androidx.fragment.app.Fragment.performDestroyView():0 -> a
    161:161:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    162:162:void androidx.fragment.app.Fragment.performDestroyView():0:0 -> a
    162:162:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    163:163:void androidx.fragment.app.Fragment.onDestroyView():0:0 -> a
    163:163:void androidx.fragment.app.Fragment.performDestroyView():0 -> a
    163:163:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    164:164:void androidx.fragment.app.Fragment.performDestroyView():0:0 -> a
    164:164:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    165:165:void androidx.loader.app.LoaderManagerImpl.markForRedelivery():0:0 -> a
    165:165:void androidx.fragment.app.Fragment.performDestroyView():0 -> a
    165:165:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    166:166:void androidx.fragment.app.Fragment.performDestroyView():0:0 -> a
    166:166:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    167:167:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    168:168:androidx.fragment.app.Fragment androidx.fragment.app.Fragment.getParentFragment():0:0 -> a
    168:168:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    169:169:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    170:170:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int):0:0 -> a
    170:170:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    171:171:void androidx.fragment.app.Fragment.setStateAfterAnimating(int):0:0 -> a
    171:171:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int):0 -> a
    171:171:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    172:172:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int):0:0 -> a
    172:172:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    173:173:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    174:174:void androidx.fragment.app.Fragment.performDestroyView():0:0 -> a
    174:174:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    175:175:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    176:176:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    176:176:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    177:177:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    178:178:void androidx.fragment.app.Fragment.performDestroy():0:0 -> a
    178:178:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    179:179:void androidx.fragment.app.Fragment.onDestroy():0:0 -> a
    179:179:void androidx.fragment.app.Fragment.performDestroy():0 -> a
    179:179:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    180:180:void androidx.fragment.app.Fragment.performDestroy():0:0 -> a
    180:180:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    181:181:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    182:182:void androidx.fragment.app.Fragment.performDetach():0:0 -> a
    182:182:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    183:183:void androidx.fragment.app.Fragment.onDetach():0:0 -> a
    183:183:void androidx.fragment.app.Fragment.performDetach():0 -> a
    183:183:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    184:184:void androidx.fragment.app.Fragment.performDetach():0:0 -> a
    184:184:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    185:185:boolean isDestroyed():0:0 -> a
    185:185:void androidx.fragment.app.Fragment.performDetach():0 -> a
    185:185:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    186:186:void androidx.fragment.app.Fragment.performDetach():0:0 -> a
    186:186:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    187:187:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    188:188:boolean androidx.fragment.app.Fragment.getRetainInstance():0:0 -> a
    188:188:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    189:189:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    190:190:void makeInactive(androidx.fragment.app.Fragment):0:0 -> a
    190:190:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    191:191:void removeRetainedFragment(androidx.fragment.app.Fragment):0:0 -> a
    191:191:void makeInactive(androidx.fragment.app.Fragment):0 -> a
    191:191:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    192:192:void makeInactive(androidx.fragment.app.Fragment):0:0 -> a
    192:192:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    193:193:void androidx.fragment.app.Fragment.initState():0:0 -> a
    193:193:void makeInactive(androidx.fragment.app.Fragment):0 -> a
    193:193:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    194:194:void androidx.fragment.app.Fragment.performDetach():0:0 -> a
    194:194:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    195:195:void androidx.fragment.app.Fragment.performDestroy():0:0 -> a
    195:195:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    196:196:void androidx.fragment.app.Fragment.setStateAfterAnimating(int):0:0 -> a
    196:196:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0 -> a
    197:197:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean):0:0 -> a
    198:198:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    198:198:void restoreSaveState(android.os.Parcelable):0 -> a
    199:199:void restoreSaveState(android.os.Parcelable):0:0 -> a
    200:200:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    200:200:void restoreSaveState(android.os.Parcelable):0 -> a
    201:201:void restoreSaveState(android.os.Parcelable):0:0 -> a
    202:202:androidx.fragment.app.Fragment androidx.fragment.app.FragmentState.instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory):0:0 -> a
    202:202:void restoreSaveState(android.os.Parcelable):0 -> a
    203:203:void restoreSaveState(android.os.Parcelable):0:0 -> a
    void setBackStackIndex(int,androidx.fragment.app.BackStackRecord) -> a
    204:204:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> a
    204:204:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State):0 -> a
    205:205:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State):0:0 -> a
    206:206:void androidx.fragment.app.FragmentActivity$HostCallbacks.onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    206:206:void throwException(java.lang.RuntimeException):0 -> a
    207:207:void throwException(java.lang.RuntimeException):0:0 -> a
    void detachFragment(androidx.fragment.app.Fragment) -> b
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> b
    1:1:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> b
    2:2:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> b
    3:3:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> b
    3:3:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0 -> b
    4:4:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> b
    5:5:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> b
    5:5:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean):0 -> b
    6:6:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean):0:0 -> b
    7:7:boolean androidx.fragment.app.Fragment.performOptionsItemSelected(android.view.MenuItem):0:0 -> b
    7:7:boolean dispatchOptionsItemSelected(android.view.MenuItem):0 -> b
    void dispatchPictureInPictureModeChanged(boolean) -> b
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> b
    androidx.fragment.app.Fragment findFragmentById(int) -> b
    8:8:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> b
    8:8:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0 -> b
    9:9:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList):0:0 -> b
    10:10:void checkStateLoss():0:0 -> b
    10:10:boolean popBackStackImmediate():0 -> b
    11:11:boolean popBackStackImmediate(java.lang.String,int,int):0:0 -> b
    11:11:boolean popBackStackImmediate():0 -> b
    12:12:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int):0:0 -> b
    12:12:boolean popBackStackImmediate(java.lang.String,int,int):0 -> b
    12:12:boolean popBackStackImmediate():0 -> b
    13:13:boolean popBackStackImmediate(java.lang.String,int,int):0:0 -> b
    13:13:boolean popBackStackImmediate():0 -> b
    14:14:void doPendingDeferredStart():0:0 -> b
    14:14:boolean popBackStackImmediate(java.lang.String,int,int):0 -> b
    14:14:boolean popBackStackImmediate():0 -> b
    15:15:void burpActive():0:0 -> b
    15:15:boolean popBackStackImmediate(java.lang.String,int,int):0 -> b
    15:15:boolean popBackStackImmediate():0 -> b
    16:16:void checkStateLoss():0:0 -> b
    16:16:boolean popBackStackImmediate():0 -> b
    void cleanupExec() -> c
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> c
    1:1:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0 -> c
    2:2:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean):0:0 -> c
    3:3:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> c
    3:3:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> c
    4:4:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> c
    5:5:void androidx.fragment.app.Fragment.performPrimaryNavigationFragmentChanged():0:0 -> c
    5:5:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment):0 -> c
    6:6:void dispatchPrimaryNavigationFragmentChanged():0:0 -> c
    6:6:void androidx.fragment.app.Fragment.performPrimaryNavigationFragmentChanged():0 -> c
    6:6:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment):0 -> c
    7:7:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> c
    7:7:void ensureExecReady(boolean):0 -> c
    8:8:void ensureExecReady(boolean):0:0 -> c
    9:9:void checkStateLoss():0:0 -> c
    9:9:void ensureExecReady(boolean):0 -> c
    10:10:void ensureExecReady(boolean):0:0 -> c
    void freeBackStackIndex(int) -> c
    void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> c
    void dispatchCreate() -> d
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> d
    1:1:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0 -> d
    2:2:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean):0:0 -> d
    3:3:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> d
    3:3:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0 -> d
    4:4:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean):0:0 -> d
    void hideFragment(androidx.fragment.app.Fragment) -> d
    int reverseTransit(int) -> d
    1:1:void androidx.activity.OnBackPressedCallback.remove():0:0 -> e
    1:1:void dispatchDestroy():0 -> e
    2:2:void dispatchDestroy():0:0 -> e
    3:3:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> e
    3:3:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0 -> e
    4:4:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean):0:0 -> e
    5:5:boolean checkForMenus():0:0 -> e
    5:5:boolean isMenuAvailable(androidx.fragment.app.Fragment):0 -> e
    void dispatchLowMemory() -> f
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> f
    1:1:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0 -> f
    2:2:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean):0:0 -> f
    3:3:androidx.fragment.app.Fragment getPrimaryNavigationFragment():0:0 -> f
    3:3:boolean isPrimaryNavigation(androidx.fragment.app.Fragment):0 -> f
    4:4:boolean isPrimaryNavigation(androidx.fragment.app.Fragment):0:0 -> f
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> g
    1:1:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0 -> g
    2:2:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean):0:0 -> g
    void dispatchPause() -> g
    3:3:void addRetainedFragment(androidx.fragment.app.Fragment):0:0 -> g
    3:3:void makeActive(androidx.fragment.app.Fragment):0 -> g
    4:4:void removeRetainedFragment(androidx.fragment.app.Fragment):0:0 -> g
    4:4:void makeActive(androidx.fragment.app.Fragment):0 -> g
    5:5:void makeActive(androidx.fragment.app.Fragment):0:0 -> g
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> h
    1:1:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0 -> h
    2:2:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean):0:0 -> h
    void dispatchResume() -> h
    3:3:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment):0:0 -> h
    3:3:void moveFragmentToExpectedState(androidx.fragment.app.Fragment):0 -> h
    4:4:void moveFragmentToExpectedState(androidx.fragment.app.Fragment):0:0 -> h
    5:5:void completeShowHideFragment(androidx.fragment.app.Fragment):0:0 -> h
    5:5:void moveFragmentToExpectedState(androidx.fragment.app.Fragment):0 -> h
    1:1:void doPendingDeferredStart():0:0 -> i
    1:1:boolean execPendingActions():0 -> i
    2:2:void burpActive():0:0 -> i
    2:2:boolean execPendingActions():0 -> i
    void removeFragment(androidx.fragment.app.Fragment) -> i
    1:1:androidx.fragment.app.FragmentFactory androidx.fragment.app.FragmentManager.getFragmentFactory():0:0 -> j
    1:1:androidx.fragment.app.FragmentFactory getFragmentFactory():0 -> j
    2:2:androidx.fragment.app.FragmentFactory getFragmentFactory():0:0 -> j
    3:3:void androidx.fragment.app.FragmentManager.setFragmentFactory(androidx.fragment.app.FragmentFactory):0:0 -> j
    3:3:androidx.fragment.app.FragmentFactory getFragmentFactory():0 -> j
    4:4:androidx.fragment.app.FragmentFactory androidx.fragment.app.FragmentManager.getFragmentFactory():0:0 -> j
    4:4:androidx.fragment.app.FragmentFactory getFragmentFactory():0 -> j
    void saveFragmentViewState(androidx.fragment.app.Fragment) -> j
    android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> k
    1:1:androidx.fragment.app.FragmentManager androidx.fragment.app.Fragment.getFragmentManager():0:0 -> k
    1:1:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0 -> k
    2:2:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment):0:0 -> k
    boolean isStateSaved() -> l
    void showFragment(androidx.fragment.app.Fragment) -> l
    1:1:void androidx.fragment.app.Fragment.noteStateNotSaved():0:0 -> m
    1:1:void noteStateNotSaved():0 -> m
    1:1:void forcePostponedTransactions():0:0 -> n
    1:1:android.os.Parcelable saveAllState():0 -> n
    2:2:void endAnimatingAwayFragments():0:0 -> n
    2:2:android.os.Parcelable saveAllState():0 -> n
    3:3:android.os.Parcelable saveAllState():0:0 -> n
    4:4:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment):0:0 -> n
    4:4:android.os.Parcelable saveAllState():0 -> n
    5:5:void androidx.fragment.app.Fragment.performSaveInstanceState(android.os.Bundle):0:0 -> n
    5:5:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment):0 -> n
    5:5:android.os.Parcelable saveAllState():0 -> n
    6:6:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment):0:0 -> n
    6:6:android.os.Parcelable saveAllState():0 -> n
    7:7:android.os.Parcelable saveAllState():0:0 -> n
    8:8:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment):0:0 -> n
    8:8:android.os.Parcelable saveAllState():0 -> n
    9:9:android.os.Parcelable saveAllState():0:0 -> n
    10:10:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment):0:0 -> n
    10:10:android.os.Parcelable saveAllState():0 -> n
    11:11:android.os.Parcelable saveAllState():0:0 -> n
    1:1:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> o
    1:1:void scheduleCommit():0 -> o
    2:2:void scheduleCommit():0:0 -> o
    3:3:android.os.Handler androidx.fragment.app.FragmentHostCallback.getHandler():0:0 -> o
    3:3:void scheduleCommit():0 -> o
    4:4:void scheduleCommit():0:0 -> o
    1:1:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String):0:0 -> onCreateView
    1:1:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    2:2:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    3:3:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> onCreateView
    3:3:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    4:4:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    5:5:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> onCreateView
    5:5:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    6:6:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    7:7:void moveToState(androidx.fragment.app.Fragment):0:0 -> onCreateView
    7:7:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0 -> onCreateView
    8:8:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet):0:0 -> onCreateView
    1:1:void performPendingDeferredStart(androidx.fragment.app.Fragment):0:0 -> p
    1:1:void startPendingDeferredFragments():0 -> p
    1:1:void androidx.activity.OnBackPressedCallback.setEnabled(boolean):0:0 -> q
    1:1:void updateOnBackPressedCallbackEnabled():0 -> q
    2:2:void updateOnBackPressedCallbackEnabled():0:0 -> q
    3:3:int getBackStackEntryCount():0:0 -> q
    3:3:void updateOnBackPressedCallbackEnabled():0 -> q
    4:4:void updateOnBackPressedCallbackEnabled():0:0 -> q
    5:5:void androidx.activity.OnBackPressedCallback.setEnabled(boolean):0:0 -> q
    5:5:void updateOnBackPressedCallbackEnabled():0 -> q
androidx.fragment.app.FragmentManagerImpl$1 -> m7$a:
    androidx.fragment.app.FragmentManagerImpl this$0 -> c
androidx.fragment.app.FragmentManagerImpl$2 -> m7$b:
    androidx.fragment.app.FragmentManagerImpl this$0 -> b
androidx.fragment.app.FragmentManagerImpl$3 -> n7:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentManagerImpl this$0 -> c
    androidx.fragment.app.Fragment val$fragment -> b
androidx.fragment.app.FragmentManagerImpl$3$1 -> n7$a:
    androidx.fragment.app.FragmentManagerImpl$3 this$1 -> b
androidx.fragment.app.FragmentManagerImpl$4 -> o7:
    android.view.ViewGroup val$container -> a
    androidx.fragment.app.FragmentManagerImpl this$0 -> d
    android.view.View val$viewToAnimate -> b
    androidx.fragment.app.Fragment val$fragment -> c
androidx.fragment.app.FragmentManagerImpl$5 -> p7:
    android.view.ViewGroup val$container -> a
    android.view.View val$animatingView -> b
    androidx.fragment.app.Fragment val$fragment -> c
androidx.fragment.app.FragmentManagerImpl$6 -> m7$c:
    androidx.fragment.app.FragmentManagerImpl this$0 -> b
    1:1:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    1:1:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0 -> a
    2:2:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String):0:0 -> a
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator -> m7$d:
    android.view.animation.Animation animation -> a
    android.animation.Animator animator -> b
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation -> m7$e:
    android.view.ViewGroup mParent -> b
    boolean mTransitionEnded -> e
    boolean mAnimating -> f
    android.view.View mChild -> c
    boolean mEnded -> d
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder -> m7$f:
    boolean mRecursive -> b
    androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback -> a
androidx.fragment.app.FragmentManagerImpl$FragmentTag -> m7$g:
    int[] Fragment -> a
androidx.fragment.app.FragmentManagerImpl$OpGenerator -> m7$h:
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener -> m7$i:
    boolean mIsBack -> a
    int mNumPostponed -> c
    androidx.fragment.app.BackStackRecord mRecord -> b
    1:1:boolean androidx.fragment.app.Fragment.isPostponed():0:0 -> a
    1:1:void completeTransaction():0 -> a
    2:2:void completeTransaction():0:0 -> a
androidx.fragment.app.FragmentManagerState -> q7:
    int mNextFragmentIndex -> f
    java.util.ArrayList mAdded -> c
    java.util.ArrayList mActive -> b
    androidx.fragment.app.BackStackState[] mBackStack -> d
    java.lang.String mPrimaryNavActiveWho -> e
androidx.fragment.app.FragmentManagerState$1 -> q7$a:
    1:1:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.fragment.app.FragmentManagerState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.FragmentManagerViewModel -> r7:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> h
    java.util.HashSet mRetainedFragments -> b
    boolean mStateAutomaticallySaved -> e
    boolean mHasBeenCleared -> f
    boolean mHasSavedSnapshot -> g
    java.util.HashMap mViewModelStores -> d
    java.util.HashMap mChildNonConfigs -> c
    boolean addRetainedFragment(androidx.fragment.app.Fragment) -> a
    void clearNonConfigState(androidx.fragment.app.Fragment) -> b
    void onCleared() -> b
    androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> c
    java.util.Collection getRetainedFragments() -> c
    androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> d
    boolean isCleared() -> d
    boolean removeRetainedFragment(androidx.fragment.app.Fragment) -> e
    boolean shouldDestroy(androidx.fragment.app.Fragment) -> f
androidx.fragment.app.FragmentManagerViewModel$1 -> r7$a:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.fragment.app.FragmentState -> s7:
    java.lang.String mTag -> g
    int mMaxLifecycleState -> m
    boolean mRemoving -> i
    boolean mDetached -> j
    boolean mHidden -> l
    int mContainerId -> f
    androidx.fragment.app.Fragment mInstance -> o
    int mFragmentId -> e
    android.os.Bundle mArguments -> k
    android.os.Bundle mSavedFragmentState -> n
    boolean mRetainInstance -> h
    java.lang.String mWho -> c
    java.lang.String mClassName -> b
    boolean mFromLayout -> d
androidx.fragment.app.FragmentState$1 -> s7$a:
    1:1:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.fragment.app.FragmentState[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.fragment.app.FragmentTransaction -> t7:
    java.lang.String mName -> i
    int mBreadCrumbShortTitleRes -> l
    boolean mReorderingAllowed -> p
    int mBreadCrumbTitleRes -> j
    int mTransition -> f
    int mTransitionStyle -> g
    int mPopEnterAnim -> d
    int mPopExitAnim -> e
    int mEnterAnim -> b
    int mExitAnim -> c
    java.util.ArrayList mOps -> a
    java.lang.CharSequence mBreadCrumbTitleText -> k
    java.util.ArrayList mSharedElementTargetNames -> o
    java.lang.CharSequence mBreadCrumbShortTitleText -> m
    java.util.ArrayList mSharedElementSourceNames -> n
    boolean mAddToBackStack -> h
    java.util.ArrayList mCommitRunnables -> q
androidx.fragment.app.FragmentTransaction$Op -> t7$a:
    int mPopExitAnim -> f
    androidx.fragment.app.Fragment mFragment -> b
    int mExitAnim -> d
    androidx.lifecycle.Lifecycle$State mCurrentMaxState -> h
    int mPopEnterAnim -> e
    androidx.lifecycle.Lifecycle$State mOldMaxState -> g
    int mEnterAnim -> c
    int mCmd -> a
androidx.fragment.app.FragmentTransition -> y7:
    androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL -> b
    androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL -> c
    int[] INVERSE_OPS -> a
    1:1:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl():0:0 -> <clinit>
    1:1:void <clinit>():0 -> <clinit>
    2:2:void <clinit>():0:0 -> <clinit>
    1:1:int androidx.collection.SimpleArrayMap.size():0:0 -> a
    1:1:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection):0 -> a
    2:2:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection):0:0 -> a
    3:3:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int):0:0 -> a
    3:3:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0 -> a
    4:4:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0:0 -> a
    5:5:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int):0:0 -> a
    5:5:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0 -> a
    6:6:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean):0:0 -> a
    void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> a
    boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> a
    7:7:android.view.View androidx.fragment.app.Fragment.getView():0:0 -> a
    7:7:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> a
    8:8:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> a
    9:9:androidx.core.app.SharedElementCallback androidx.fragment.app.Fragment.getExitTransitionCallback():0:0 -> a
    9:9:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> a
    10:10:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> a
    11:11:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> a
    11:11:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> a
    12:12:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> a
    13:13:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> a
    13:13:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> a
    14:14:int androidx.collection.SimpleArrayMap.size():0:0 -> a
    14:14:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap):0 -> a
    14:14:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> a
    15:15:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> a
    15:15:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> a
    16:16:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> a
    17:17:java.lang.Object androidx.fragment.app.Fragment.getReturnTransition():0:0 -> a
    17:17:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment):0 -> a
    18:18:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment):0:0 -> a
    19:19:java.lang.Object androidx.fragment.app.Fragment.getSharedElementReturnTransition():0:0 -> a
    19:19:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment):0 -> a
    20:20:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment):0:0 -> a
    21:21:java.lang.Object androidx.fragment.app.Fragment.getReenterTransition():0:0 -> a
    21:21:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment):0 -> a
    22:22:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment):0:0 -> a
    23:23:android.view.View androidx.fragment.app.Fragment.getView():0:0 -> a
    23:23:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View):0 -> a
    24:24:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View):0:0 -> a
    25:25:java.lang.Object androidx.fragment.app.Fragment.getReenterTransition():0:0 -> a
    25:25:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean):0 -> a
    26:26:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean):0:0 -> a
    android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> a
    27:27:java.lang.Object androidx.fragment.app.Fragment.getSharedElementReturnTransition():0:0 -> a
    27:27:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean):0 -> a
    28:28:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean):0:0 -> a
    29:29:java.lang.Object androidx.fragment.app.FragmentTransitionCompat21.wrapTransitionInSet(java.lang.Object):0:0 -> a
    29:29:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean):0 -> a
    30:30:boolean androidx.fragment.app.Fragment.getAllowReturnTransitionOverlap():0:0 -> a
    30:30:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean):0 -> a
    31:31:boolean androidx.fragment.app.Fragment.getAllowEnterTransitionOverlap():0:0 -> a
    31:31:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean):0 -> a
    32:32:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean):0:0 -> a
    33:33:void androidx.fragment.app.FragmentTransitionCompat21.setEpicenter(java.lang.Object,android.view.View):0:0 -> a
    33:33:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord):0 -> a
    void setViewVisibility(java.util.ArrayList,int) -> a
    34:34:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean):0:0 -> a
    34:34:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    35:35:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean):0:0 -> a
    35:35:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    36:36:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0:0 -> a
    37:37:android.content.Context androidx.fragment.app.FragmentHostCallback.getContext():0:0 -> a
    37:37:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    38:38:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0:0 -> a
    39:39:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int):0:0 -> a
    39:39:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    40:40:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0:0 -> a
    41:41:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0:0 -> a
    41:41:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    42:42:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> a
    42:42:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    42:42:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    43:43:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0:0 -> a
    43:43:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    44:44:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList):0:0 -> a
    44:44:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    44:44:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    45:45:android.view.View androidx.fragment.app.Fragment.getView():0:0 -> a
    45:45:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList):0 -> a
    45:45:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    45:45:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    46:46:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList):0:0 -> a
    46:46:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    46:46:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    47:47:java.util.ArrayList androidx.fragment.app.FragmentTransitionImpl.prepareSetNameOverridesReordered(java.util.ArrayList):0:0 -> a
    47:47:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    47:47:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    48:48:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> a
    48:48:java.util.ArrayList androidx.fragment.app.FragmentTransitionImpl.prepareSetNameOverridesReordered(java.util.ArrayList):0 -> a
    48:48:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    48:48:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    49:49:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0:0 -> a
    49:49:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    50:50:void androidx.fragment.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> a
    50:50:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    50:50:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    51:51:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> a
    51:51:void androidx.fragment.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> a
    51:51:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    51:51:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    52:52:void androidx.fragment.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> a
    52:52:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    52:52:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    53:53:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> a
    53:53:void androidx.fragment.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0 -> a
    53:53:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    53:53:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    54:54:void androidx.fragment.app.FragmentTransitionImpl.setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map):0:0 -> a
    54:54:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    54:54:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    55:55:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0:0 -> a
    55:55:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    56:56:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0:0 -> a
    56:56:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    57:57:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object):0:0 -> a
    57:57:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    57:57:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    58:58:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0:0 -> a
    58:58:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    59:59:void androidx.fragment.app.FragmentTransitionCompat21.addTarget(java.lang.Object,android.view.View):0:0 -> a
    59:59:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    59:59:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    60:60:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0:0 -> a
    60:60:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    61:61:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList):0:0 -> a
    61:61:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    61:61:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    62:62:void androidx.fragment.app.FragmentTransitionImpl.setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map):0:0 -> a
    62:62:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    62:62:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    63:63:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0:0 -> a
    63:63:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    64:64:void androidx.fragment.app.FragmentTransitionImpl.scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map):0:0 -> a
    64:64:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap):0 -> a
    64:64:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean):0 -> a
    1:1:androidx.core.app.SharedElementCallback androidx.fragment.app.Fragment.getExitTransitionCallback():0:0 -> b
    1:1:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> b
    2:2:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> b
    3:3:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    3:3:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> b
    4:4:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> b
    5:5:boolean androidx.collection.ArrayMap.retainAll(java.util.Collection):0:0 -> b
    5:5:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0 -> b
    6:6:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition):0:0 -> b
    7:7:java.lang.Object androidx.fragment.app.Fragment.getReturnTransition():0:0 -> b
    7:7:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean):0 -> b
    8:8:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean):0:0 -> b
androidx.fragment.app.FragmentTransition$1 -> u7:
    java.util.ArrayList val$exitingViews -> b
androidx.fragment.app.FragmentTransition$2 -> v7:
    java.lang.Object val$exitTransition -> i
    androidx.fragment.app.FragmentTransitionImpl val$impl -> c
    java.util.ArrayList val$exitingViews -> h
    java.lang.Object val$enterTransition -> b
    java.util.ArrayList val$enteringViews -> g
    java.util.ArrayList val$sharedElementsIn -> f
    android.view.View val$nonExistentView -> d
    androidx.fragment.app.Fragment val$inFragment -> e
androidx.fragment.app.FragmentTransition$3 -> w7:
    androidx.collection.ArrayMap val$inSharedElements -> e
    androidx.fragment.app.FragmentTransitionImpl val$impl -> g
    android.graphics.Rect val$epicenter -> h
    androidx.fragment.app.Fragment val$inFragment -> b
    androidx.fragment.app.Fragment val$outFragment -> c
    boolean val$inIsPop -> d
    android.view.View val$epicenterView -> f
androidx.fragment.app.FragmentTransition$4 -> x7:
    androidx.fragment.app.Fragment val$inFragment -> h
    android.graphics.Rect val$inEpicenter -> m
    androidx.fragment.app.Fragment val$outFragment -> i
    androidx.fragment.app.FragmentTransitionImpl val$impl -> b
    java.util.ArrayList val$sharedElementsOut -> k
    boolean val$inIsPop -> j
    java.lang.Object val$finalSharedElementTransition -> d
    java.util.ArrayList val$sharedElementsIn -> f
    androidx.collection.ArrayMap val$nameOverrides -> c
    androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments -> e
    android.view.View val$nonExistentView -> g
    java.lang.Object val$enterTransition -> l
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> y7$a:
    androidx.fragment.app.BackStackRecord firstOutTransaction -> f
    boolean firstOutIsPop -> e
    androidx.fragment.app.Fragment lastIn -> a
    androidx.fragment.app.Fragment firstOut -> d
    boolean lastInIsPop -> b
    androidx.fragment.app.BackStackRecord lastInTransaction -> c
androidx.fragment.app.FragmentTransitionCompat21 -> z7:
    void addTargets(java.lang.Object,java.util.ArrayList) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    boolean canHandle(java.lang.Object) -> a
    boolean hasSimpleTarget(android.transition.Transition) -> a
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void removeTarget(java.lang.Object,android.view.View) -> a
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> a
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> a
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> b
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    void setEpicenter(java.lang.Object,android.view.View) -> b
    1:1:void androidx.fragment.app.FragmentTransitionImpl.bfsAddViewChildren(java.util.List,android.view.View):0:0 -> b
    1:1:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0 -> b
    2:2:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList):0:0 -> b
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> b
androidx.fragment.app.FragmentTransitionCompat21$1 -> z7$a:
    android.graphics.Rect val$epicenter -> a
androidx.fragment.app.FragmentTransitionCompat21$2 -> z7$b:
    android.view.View val$fragmentView -> a
    java.util.ArrayList val$exitingViews -> b
androidx.fragment.app.FragmentTransitionCompat21$3 -> z7$c:
    java.lang.Object val$sharedElementTransition -> e
    java.lang.Object val$exitTransition -> c
    java.util.ArrayList val$sharedElementsIn -> f
    java.lang.Object val$enterTransition -> a
    java.util.ArrayList val$exitingViews -> d
    java.util.ArrayList val$enteringViews -> b
    androidx.fragment.app.FragmentTransitionCompat21 this$0 -> g
androidx.fragment.app.FragmentTransitionCompat21$4 -> z7$d:
    android.graphics.Rect val$epicenter -> a
androidx.fragment.app.FragmentTransitionImpl -> d8:
    void addTargets(java.lang.Object,java.util.ArrayList) -> a
    void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> a
    boolean canHandle(java.lang.Object) -> a
    1:1:boolean androidx.core.view.ViewGroupCompat.isTransitionGroup(android.view.ViewGroup):0:0 -> a
    1:1:void captureTransitioningViews(java.util.ArrayList,android.view.View):0 -> a
    2:2:void captureTransitioningViews(java.util.ArrayList,android.view.View):0:0 -> a
    boolean containedBeforeIndex(java.util.List,android.view.View,int) -> a
    void findNamedViews(java.util.Map,android.view.View) -> a
    void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> a
    boolean isNullOrEmpty(java.util.List) -> a
    java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void removeTarget(java.lang.Object,android.view.View) -> a
    void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> a
    void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> a
    void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> a
    void setEpicenter(java.lang.Object,android.graphics.Rect) -> a
    java.lang.Object cloneTransition(java.lang.Object) -> b
    java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    void setEpicenter(java.lang.Object,android.view.View) -> b
    void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> b
    void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> b
androidx.fragment.app.FragmentTransitionImpl$1 -> a8:
    java.util.ArrayList val$outNames -> f
    java.util.ArrayList val$sharedElementsOut -> e
    java.util.ArrayList val$inNames -> d
    int val$numSharedElements -> b
    java.util.ArrayList val$sharedElementsIn -> c
    1:1:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    1:1:void run():0 -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> b8:
    java.util.Map val$nameOverrides -> c
    java.util.ArrayList val$sharedElementsIn -> b
    1:1:java.lang.String androidx.fragment.app.FragmentTransitionImpl.findKeyForValue(java.util.Map,java.lang.String):0:0 -> run
    1:1:void run():0 -> run
    2:2:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    2:2:void run():0 -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> c8:
    java.util.Map val$nameOverrides -> c
    java.util.ArrayList val$sharedElementsIn -> b
    1:1:void androidx.core.view.ViewCompat.setTransitionName(android.view.View,java.lang.String):0:0 -> run
    1:1:void run():0 -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> e8:
    androidx.lifecycle.LifecycleRegistry mLifecycleRegistry -> b
    1:1:void initialize():0:0 -> a
    1:1:androidx.lifecycle.Lifecycle getLifecycle():0 -> a
    2:2:androidx.lifecycle.Lifecycle getLifecycle():0:0 -> a
androidx.fragment.app.SuperNotCalledException -> f8:
androidx.lifecycle.ClassesInfoCache -> g8:
    java.util.Map mCallbackMap -> a
    java.util.Map mHasLifecycleMethods -> b
    androidx.lifecycle.ClassesInfoCache sInstance -> c
    1:1:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> a
    1:1:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0 -> a
    2:2:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0:0 -> a
    3:3:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class):0:0 -> a
    3:3:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]):0 -> a
    java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> a
    void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> a
    androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> b
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> g8$a:
    java.util.Map mEventToHandlers -> a
    java.util.Map mHandlerToEvent -> b
    void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
androidx.lifecycle.ClassesInfoCache$MethodReference -> g8$b:
    int mCallType -> a
    java.lang.reflect.Method mMethod -> b
    void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> a
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.FullLifecycleObserver -> h8:
    void onResume(androidx.lifecycle.LifecycleOwner) -> a
    void onPause(androidx.lifecycle.LifecycleOwner) -> b
    void onDestroy(androidx.lifecycle.LifecycleOwner) -> c
    void onStop(androidx.lifecycle.LifecycleOwner) -> d
    void onCreate(androidx.lifecycle.LifecycleOwner) -> e
    void onStart(androidx.lifecycle.LifecycleOwner) -> f
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver -> b
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.GeneratedAdapter -> i8:
    void callMethods(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,boolean,androidx.lifecycle.MethodCallsLogger) -> a
androidx.lifecycle.GenericLifecycleObserver -> j8:
androidx.lifecycle.Lifecycle -> k8:
    void addObserver(androidx.lifecycle.LifecycleObserver) -> a
androidx.lifecycle.Lifecycle$Event -> k8$a:
androidx.lifecycle.Lifecycle$State -> k8$b:
    androidx.lifecycle.Lifecycle$State DESTROYED -> b
    androidx.lifecycle.Lifecycle$State[] $VALUES -> g
    androidx.lifecycle.Lifecycle$State RESUMED -> f
    androidx.lifecycle.Lifecycle$State STARTED -> e
    androidx.lifecycle.Lifecycle$State CREATED -> d
    androidx.lifecycle.Lifecycle$State INITIALIZED -> c
    boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> a
androidx.lifecycle.LifecycleEventObserver -> l8:
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LifecycleObserver -> m8:
androidx.lifecycle.LifecycleOwner -> n8:
    androidx.lifecycle.Lifecycle getLifecycle() -> a
androidx.lifecycle.LifecycleRegistry -> o8:
    androidx.lifecycle.Lifecycle$State mState -> b
    androidx.arch.core.internal.FastSafeIterableMap mObserverMap -> a
    boolean mHandlingEvent -> e
    java.util.ArrayList mParentStates -> g
    java.lang.ref.WeakReference mLifecycleOwner -> c
    boolean mNewEventOccurred -> f
    int mAddingObserverCounter -> d
    1:1:boolean androidx.arch.core.internal.FastSafeIterableMap.contains(java.lang.Object):0:0 -> a
    1:1:void addObserver(androidx.lifecycle.LifecycleObserver):0 -> a
    2:2:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    3:3:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    3:3:void addObserver(androidx.lifecycle.LifecycleObserver):0 -> a
    4:4:void addObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> a
    androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> a
    void moveToState(androidx.lifecycle.Lifecycle$State) -> a
    void popParentState() -> a
    1:1:boolean androidx.arch.core.internal.FastSafeIterableMap.contains(java.lang.Object):0:0 -> b
    1:1:java.util.Map$Entry androidx.arch.core.internal.FastSafeIterableMap.ceil(java.lang.Object):0 -> b
    1:1:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0 -> b
    2:2:java.util.Map$Entry androidx.arch.core.internal.FastSafeIterableMap.ceil(java.lang.Object):0:0 -> b
    2:2:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0 -> b
    3:3:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver):0:0 -> b
    androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> b
    4:4:boolean isSynced():0:0 -> b
    4:4:void sync():0 -> b
    5:5:int androidx.arch.core.internal.SafeIterableMap.size():0:0 -> b
    5:5:boolean isSynced():0 -> b
    5:5:void sync():0 -> b
    6:6:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.eldest():0:0 -> b
    6:6:boolean isSynced():0 -> b
    6:6:void sync():0 -> b
    7:7:boolean isSynced():0:0 -> b
    7:7:void sync():0 -> b
    8:8:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.newest():0:0 -> b
    8:8:boolean isSynced():0 -> b
    8:8:void sync():0 -> b
    9:9:boolean isSynced():0:0 -> b
    9:9:void sync():0 -> b
    10:10:void sync():0:0 -> b
    11:11:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.eldest():0:0 -> b
    11:11:void sync():0 -> b
    12:12:void sync():0:0 -> b
    13:13:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> b
    13:13:void sync():0 -> b
    14:14:java.util.Iterator androidx.arch.core.internal.SafeIterableMap.descendingIterator():0:0 -> b
    14:14:void backwardPass(androidx.lifecycle.LifecycleOwner):0 -> b
    14:14:void sync():0 -> b
    15:15:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> b
    15:15:void sync():0 -> b
    16:16:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State):0:0 -> b
    16:16:void backwardPass(androidx.lifecycle.LifecycleOwner):0 -> b
    16:16:void sync():0 -> b
    17:17:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> b
    17:17:void sync():0 -> b
    18:18:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> b
    18:18:void backwardPass(androidx.lifecycle.LifecycleOwner):0 -> b
    18:18:void sync():0 -> b
    19:19:void backwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> b
    19:19:void sync():0 -> b
    20:20:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State):0:0 -> b
    20:20:void backwardPass(androidx.lifecycle.LifecycleOwner):0 -> b
    20:20:void sync():0 -> b
    21:21:void sync():0:0 -> b
    22:22:java.util.Map$Entry androidx.arch.core.internal.SafeIterableMap.newest():0:0 -> b
    22:22:void sync():0 -> b
    23:23:void sync():0:0 -> b
    24:24:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> b
    24:24:void sync():0 -> b
    25:25:void pushParentState(androidx.lifecycle.Lifecycle$State):0:0 -> b
    25:25:void forwardPass(androidx.lifecycle.LifecycleOwner):0 -> b
    25:25:void sync():0 -> b
    26:26:void forwardPass(androidx.lifecycle.LifecycleOwner):0:0 -> b
    26:26:void sync():0 -> b
    27:27:void sync():0:0 -> b
    androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> b
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> o8$a:
    androidx.lifecycle.Lifecycle$State mState -> a
    androidx.lifecycle.LifecycleEventObserver mLifecycleObserver -> b
    void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LifecycleRegistryOwner -> p8:
    androidx.lifecycle.LifecycleRegistry getLifecycle() -> a
androidx.lifecycle.Lifecycling -> q8:
    java.util.Map sCallbackCache -> a
    java.util.Map sClassToAdapters -> b
    androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> a
    java.lang.String getAdapterName(java.lang.String) -> a
    1:1:int resolveObserverCallbackType(java.lang.Class):0:0 -> a
    1:1:int getObserverConstructorType(java.lang.Class):0 -> a
    2:2:java.lang.reflect.Constructor generatedConstructor(java.lang.Class):0:0 -> a
    2:2:int resolveObserverCallbackType(java.lang.Class):0 -> a
    2:2:int getObserverConstructorType(java.lang.Class):0 -> a
    3:3:int resolveObserverCallbackType(java.lang.Class):0:0 -> a
    3:3:int getObserverConstructorType(java.lang.Class):0 -> a
    4:4:boolean androidx.lifecycle.ClassesInfoCache.hasLifecycleMethods(java.lang.Class):0:0 -> a
    4:4:int resolveObserverCallbackType(java.lang.Class):0 -> a
    4:4:int getObserverConstructorType(java.lang.Class):0 -> a
    5:5:int resolveObserverCallbackType(java.lang.Class):0:0 -> a
    5:5:int getObserverConstructorType(java.lang.Class):0 -> a
    6:6:int getObserverConstructorType(java.lang.Class):0:0 -> a
    androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> a
    boolean isLifecycleParent(java.lang.Class) -> b
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    androidx.lifecycle.LifecycleEventObserver val$observer -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    java.lang.Object NOT_SET -> i
    java.lang.Object mData -> d
    java.lang.Object mPendingData -> e
    androidx.arch.core.internal.SafeIterableMap mObservers -> b
    int mVersion -> f
    boolean mDispatchingValue -> g
    java.lang.Object mDataLock -> a
    boolean mDispatchInvalidated -> h
    int mActiveCount -> c
    void assertMainThread(java.lang.String) -> a
    void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> a
    void onActive() -> a
    void removeObserver(androidx.lifecycle.Observer) -> a
    void setValue(java.lang.Object) -> a
    void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> b
    void onInactive() -> b
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$a:
    androidx.lifecycle.LiveData this$0 -> b
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    androidx.lifecycle.LiveData this$0 -> f
    androidx.lifecycle.LifecycleOwner mOwner -> e
    1:1:void androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    1:1:void detachObserver():0 -> a
    2:2:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> a
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> a
    3:3:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> b
    1:1:boolean shouldBeActive():0 -> b
    2:2:boolean shouldBeActive():0:0 -> b
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$b:
    androidx.lifecycle.Observer mObserver -> a
    androidx.lifecycle.LiveData this$0 -> d
    boolean mActive -> b
    int mLastVersion -> c
    void activeStateChanged(boolean) -> a
    void detachObserver() -> a
    boolean shouldBeActive() -> b
androidx.lifecycle.MethodCallsLogger -> r8:
androidx.lifecycle.MutableLiveData -> s8:
    void setValue(java.lang.Object) -> a
androidx.lifecycle.Observer -> t8:
    void onChanged(java.lang.Object) -> a
androidx.lifecycle.OnLifecycleEvent -> u8:
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo -> b
    java.lang.Object mWrapped -> a
    1:1:void androidx.lifecycle.ClassesInfoCache$CallbackInfo.invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object):0:0 -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> a
androidx.lifecycle.ReportFragment -> v8:
    void dispatch(androidx.lifecycle.Lifecycle$Event) -> a
    void injectIfNeededIn(android.app.Activity) -> a
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    androidx.lifecycle.GeneratedAdapter mGeneratedAdapter -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.lifecycle.ViewModel -> w8:
    java.util.Map mBagOfTags -> a
    1:1:void closeWithRuntimeException(java.lang.Object):0:0 -> a
    1:1:void clear():0 -> a
    2:2:void clear():0:0 -> a
    void onCleared() -> b
androidx.lifecycle.ViewModelProvider$Factory -> x8:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.lifecycle.ViewModelProvider$KeyedFactory -> y8:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
    androidx.lifecycle.ViewModel create(java.lang.String,java.lang.Class) -> a
androidx.lifecycle.ViewModelStore -> z8:
    java.util.HashMap mMap -> a
    void clear() -> a
androidx.lifecycle.ViewModelStoreOwner -> a9:
    androidx.lifecycle.ViewModelStore getViewModelStore() -> d
androidx.loader.app.LoaderManager -> b9:
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> a
androidx.loader.app.LoaderManagerImpl -> c9:
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> a
    androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel -> b
    1:1:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> <init>
    1:1:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    2:2:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> <init>
    2:2:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    2:2:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    3:3:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelStore.get(java.lang.String):0:0 -> <init>
    3:3:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> <init>
    3:3:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    3:3:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    3:3:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    4:4:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0:0 -> <init>
    4:4:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    4:4:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    4:4:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    5:5:void androidx.lifecycle.ViewModelStore.put(java.lang.String,androidx.lifecycle.ViewModel):0:0 -> <init>
    5:5:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.String,java.lang.Class):0 -> <init>
    5:5:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0 -> <init>
    5:5:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    5:5:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    6:6:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0:0 -> <init>
    6:6:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    7:7:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0:0 -> <init>
    8:8:androidx.lifecycle.ViewModel androidx.lifecycle.ViewModelProvider.get(java.lang.Class):0:0 -> <init>
    8:8:androidx.loader.app.LoaderManagerImpl$LoaderViewModel androidx.loader.app.LoaderManagerImpl$LoaderViewModel.getInstance(androidx.lifecycle.ViewModelStore):0 -> <init>
    8:8:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore):0 -> <init>
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> c9$a:
    androidx.lifecycle.LifecycleOwner mLifecycleOwner -> l
    int mId -> j
    android.os.Bundle mArgs -> k
    androidx.loader.content.Loader destroy(boolean) -> a
    void onActive() -> a
    void removeObserver(androidx.lifecycle.Observer) -> a
    void setValue(java.lang.Object) -> a
    void onInactive() -> b
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> c9$b:
    androidx.lifecycle.ViewModelProvider$Factory FACTORY -> c
    androidx.collection.SparseArrayCompat mLoaders -> b
    1:1:void androidx.collection.SparseArrayCompat.<init>():0:0 -> <init>
    1:1:void <init>():0 -> <init>
    2:2:void <init>():0:0 -> <init>
    1:1:void androidx.loader.app.LoaderManagerImpl$LoaderInfo.dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0:0 -> a
    1:1:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]):0 -> a
    1:1:void androidx.collection.SparseArrayCompat.clear():0:0 -> b
    1:1:void onCleared():0 -> b
    2:2:void onCleared():0:0 -> b
    1:1:void androidx.loader.app.LoaderManagerImpl$LoaderInfo.markForRedelivery():0:0 -> c
    1:1:void markForRedelivery():0 -> c
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> c9$b$a:
    androidx.lifecycle.ViewModel create(java.lang.Class) -> a
androidx.loader.content.Loader$OnLoadCompleteListener -> d9:
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    1:1:void androidx.lifecycle.LifecycleRegistry.removeObserver(androidx.lifecycle.LifecycleObserver):0:0 -> a
    1:1:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> a
    2:2:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
    3:3:android.os.Bundle androidx.savedstate.SavedStateRegistry.consumeRestoredStateForKey(java.lang.String):0:0 -> a
    3:3:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> a
    4:4:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
    5:5:void reflectiveNew(java.lang.String):0:0 -> a
    5:5:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> a
    6:6:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
    7:7:android.os.Bundle androidx.savedstate.SavedStateRegistry.consumeRestoredStateForKey(java.lang.String):0:0 -> a
    7:7:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0 -> a
    8:8:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):0:0 -> a
androidx.savedstate.SavedStateRegistry -> e9:
    android.os.Bundle mRestoredState -> b
    androidx.arch.core.internal.SafeIterableMap mComponents -> a
    boolean mRestored -> c
    boolean mAllowingSavingState -> d
    void performSave(android.os.Bundle) -> a
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    androidx.savedstate.SavedStateRegistry this$0 -> a
    void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> a
androidx.savedstate.SavedStateRegistry$AutoRecreated -> e9$a:
    void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> a
androidx.savedstate.SavedStateRegistry$SavedStateProvider -> e9$b:
    android.os.Bundle saveState() -> a
androidx.savedstate.SavedStateRegistryController -> f9:
    androidx.savedstate.SavedStateRegistryOwner mOwner -> a
    androidx.savedstate.SavedStateRegistry mRegistry -> b
    1:1:androidx.lifecycle.Lifecycle$State androidx.lifecycle.LifecycleRegistry.getCurrentState():0:0 -> a
    1:1:void performRestore(android.os.Bundle):0 -> a
    2:2:void performRestore(android.os.Bundle):0:0 -> a
    3:3:void androidx.savedstate.SavedStateRegistry.performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle):0:0 -> a
    3:3:void performRestore(android.os.Bundle):0 -> a
    4:4:void performRestore(android.os.Bundle):0:0 -> a
    void performSave(android.os.Bundle) -> b
androidx.savedstate.SavedStateRegistryOwner -> g9:
    androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> c
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> h9:
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> i9:
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> b
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    androidx.versionedparcelable.VersionedParcelable mParcel -> b
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$a:
    1:1:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:1:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:1:androidx.versionedparcelable.ParcelImpl[] newArray(int):0:0 -> newArray
    1:1:java.lang.Object[] newArray(int):0 -> newArray
androidx.versionedparcelable.VersionedParcel -> j9:
    androidx.collection.ArrayMap mParcelizerCache -> c
    androidx.collection.ArrayMap mReadCache -> a
    androidx.collection.ArrayMap mWriteCache -> b
    void closeField() -> a
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> a
    1:1:java.lang.Class findParcelClass(java.lang.Class):0 -> a
    2:2:java.lang.Class findParcelClass(java.lang.Class):0:0 -> a
    3:3:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> a
    3:3:java.lang.reflect.Method getReadMethod(java.lang.String):0 -> a
    4:4:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> a
    5:5:boolean androidx.versionedparcelable.VersionedParcelParcel.readBoolean():0:0 -> a
    5:5:boolean readBoolean(boolean,int):0 -> a
    6:6:java.lang.CharSequence androidx.versionedparcelable.VersionedParcelParcel.readCharSequence():0:0 -> a
    6:6:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int):0 -> a
    boolean readField(int) -> a
    7:7:int androidx.versionedparcelable.VersionedParcelParcel.readInt():0:0 -> a
    7:7:int readInt(int,int):0 -> a
    8:8:android.os.Parcelable androidx.versionedparcelable.VersionedParcelParcel.readParcelable():0:0 -> a
    8:8:android.os.Parcelable readParcelable(android.os.Parcelable,int):0 -> a
    9:9:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> a
    9:9:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> a
    10:10:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> a
    10:10:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> a
    11:11:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> a
    11:11:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0 -> a
    11:11:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> a
    12:12:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> a
    13:13:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> a
    13:13:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> a
    14:14:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> a
    15:15:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> a
    15:15:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> a
    16:16:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> a
    16:16:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    1:1:java.lang.reflect.Method getWriteMethod(java.lang.Class):0 -> b
    2:2:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> b
    void setOutputField(int) -> b
    3:3:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> b
    3:3:void writeInt(int,int):0 -> b
    4:4:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> b
    4:4:void writeParcelable(android.os.Parcelable,int):0 -> b
    java.lang.String readString() -> c
    1:1:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> d
    1:1:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> d
    2:2:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0:0 -> d
    3:3:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> d
    3:3:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> d
    void setSerializationFlags(boolean,boolean) -> e
androidx.versionedparcelable.VersionedParcelParcel -> k9:
    android.util.SparseIntArray mPositionLookup -> d
    java.lang.String mPrefix -> h
    int mNextRead -> j
    android.os.Parcel mParcel -> e
    int mFieldId -> k
    int mCurrentField -> i
    int mOffset -> f
    int mEnd -> g
    void closeField() -> a
    boolean readField(int) -> a
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> b
    1:1:void writeInt(int):0:0 -> b
    1:1:void setOutputField(int):0 -> b
    java.lang.String readString() -> c
androidx.versionedparcelable.VersionedParcelable -> l9:
com.android.tools.r8.GeneratedOutlineSupport -> m9:
    java.lang.String outline0(java.lang.String,androidx.fragment.app.Fragment,java.lang.String) -> a
    java.lang.StringBuilder outline2(java.lang.String) -> a
com.innocomm.ilockscreen.BootReciver -> com.innocomm.ilockscreen.BootReciver:
    1:1:com.innocomm.ilockscreen.LockApplication com.innocomm.ilockscreen.LockApplication.getInstance():0:0 -> onReceive
    1:1:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    2:2:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    3:3:com.innocomm.ilockscreen.LockApplication com.innocomm.ilockscreen.LockApplication.getInstance():0:0 -> onReceive
    3:3:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    4:4:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
com.innocomm.ilockscreen.LockApplication -> com.innocomm.ilockscreen.LockApplication:
    com.innocomm.ilockscreen.LockApplication mInstance -> c
    android.content.SharedPreferences sharedPref -> b
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> a
    1:1:boolean getServiceState():0 -> a
    2:2:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> a
    2:2:void setServiceState(boolean):0 -> a
    3:3:void setServiceState(boolean):0:0 -> a
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> b
    1:1:boolean getServiceSwitch():0 -> b
    2:2:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> b
    2:2:void setServiceSwitch(boolean):0 -> b
    3:3:void setServiceSwitch(boolean):0:0 -> b
    1:1:com.innocomm.ilockscreen.LockApplication getInstance():0:0 -> onCreate
    1:1:void onCreate():0 -> onCreate
    2:2:void onCreate():0:0 -> onCreate
    3:3:void com.innocomm.ilockscreen.LockScreenMgr.init(android.content.Context):0:0 -> onCreate
    3:3:void onCreate():0 -> onCreate
com.innocomm.ilockscreen.LockApplication$1 -> com.innocomm.ilockscreen.LockApplication$a:
com.innocomm.ilockscreen.LockScreenMgr -> n9:
    android.content.Context context -> a
    com.innocomm.ilockscreen.LockScreenMgr singleton -> b
    1:1:com.innocomm.ilockscreen.LockApplication com.innocomm.ilockscreen.LockApplication.getInstance():0:0 -> a
    1:1:void active(boolean):0 -> a
    2:2:void active(boolean):0:0 -> a
    3:3:com.innocomm.ilockscreen.LockApplication com.innocomm.ilockscreen.LockApplication.getInstance():0:0 -> a
    3:3:void deactivate():0 -> a
    4:4:void deactivate():0:0 -> a
    1:1:com.innocomm.ilockscreen.LockApplication com.innocomm.ilockscreen.LockApplication.getInstance():0:0 -> b
    1:1:boolean isActive():0 -> b
    2:2:boolean isActive():0:0 -> b
    com.innocomm.ilockscreen.LockScreenMgr getInstance() -> c
com.innocomm.ilockscreen.MainActivity -> com.innocomm.ilockscreen.MainActivity:
    android.widget.ToggleButton toggleButton -> s
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> onActivityResult
    1:1:void onActivityResult(int,int,android.content.Intent):0 -> onActivityResult
    void addOverlay() -> q
com.innocomm.ilockscreen.MainActivity$1 -> com.innocomm.ilockscreen.MainActivity$a:
    com.innocomm.ilockscreen.MainActivity this$0 -> a
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> onCheckedChanged
    1:1:void onCheckedChanged(android.widget.CompoundButton,boolean):0 -> onCheckedChanged
    2:2:void onCheckedChanged(android.widget.CompoundButton,boolean):0:0 -> onCheckedChanged
com.innocomm.ilockscreen.OverlayService -> com.innocomm.ilockscreen.OverlayService:
    android.app.NotificationChannel channel -> f
    java.lang.String TAG -> h
    android.content.BroadcastReceiver overlayReceiver -> e
    android.view.WindowManager mWindowManager -> b
    android.view.View mView -> c
    android.app.NotificationManager notificationManager -> g
    boolean receiverRegistered -> d
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> a
    1:1:void hideDialog():0 -> a
    2:2:void hideDialog():0:0 -> a
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> b
    1:1:void showDialog():0 -> b
    2:2:void showDialog():0:0 -> b
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> onCreate
    1:1:void onCreate():0 -> onCreate
    2:2:com.innocomm.ilockscreen.LockApplication com.innocomm.ilockscreen.LockApplication.getInstance():0:0 -> onCreate
    2:2:void onCreate():0 -> onCreate
    3:3:void onCreate():0:0 -> onCreate
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> onDestroy
    1:1:void onDestroy():0 -> onDestroy
    2:2:com.innocomm.ilockscreen.LockApplication com.innocomm.ilockscreen.LockApplication.getInstance():0:0 -> onDestroy
    2:2:void onDestroy():0 -> onDestroy
    3:3:void onDestroy():0:0 -> onDestroy
    4:4:void unregisterOverlayReceiver():0:0 -> onDestroy
    4:4:void onDestroy():0 -> onDestroy
    5:5:void onDestroy():0:0 -> onDestroy
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> onStartCommand
    1:1:int onStartCommand(android.content.Intent,int,int):0 -> onStartCommand
    2:2:void registerOverlayReceiver():0:0 -> onStartCommand
    2:2:int onStartCommand(android.content.Intent,int,int):0 -> onStartCommand
    3:3:int onStartCommand(android.content.Intent,int,int):0:0 -> onStartCommand
    1:1:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> onTaskRemoved
    1:1:void onTaskRemoved(android.content.Intent):0 -> onTaskRemoved
    2:2:void onTaskRemoved(android.content.Intent):0:0 -> onTaskRemoved
com.innocomm.ilockscreen.OverlayService$1 -> com.innocomm.ilockscreen.OverlayService$a:
    com.innocomm.ilockscreen.OverlayService this$0 -> b
com.innocomm.ilockscreen.OverlayService$2 -> com.innocomm.ilockscreen.OverlayService$b:
    com.innocomm.ilockscreen.OverlayService this$0 -> a
    void onUnlock() -> a
com.innocomm.ilockscreen.OverlayService$3 -> com.innocomm.ilockscreen.OverlayService$c:
    com.innocomm.ilockscreen.OverlayService this$0 -> a
    void onUnlock() -> a
com.innocomm.ilockscreen.OverlayService$4 -> com.innocomm.ilockscreen.OverlayService$d:
    com.innocomm.ilockscreen.OverlayService this$0 -> a
    1:1:java.lang.String com.innocomm.ilockscreen.OverlayService.access$000():0:0 -> onReceive
    1:1:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    2:2:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    3:3:void com.innocomm.ilockscreen.LockScreenMgr.printlog(java.lang.String,java.lang.String):0:0 -> onReceive
    3:3:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    4:4:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    5:5:void com.innocomm.ilockscreen.OverlayService.access$100(com.innocomm.ilockscreen.OverlayService):0:0 -> onReceive
    5:5:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    6:6:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    7:7:void com.innocomm.ilockscreen.OverlayService.access$200(com.innocomm.ilockscreen.OverlayService):0:0 -> onReceive
    7:7:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
com.innocomm.ilockscreen.UnlockBar -> com.innocomm.ilockscreen.UnlockBar:
    com.innocomm.ilockscreen.UnlockBar$OnUnlockListener listenerRight -> c
    com.innocomm.ilockscreen.UnlockBar$OnUnlockListener listenerLeft -> b
    float initialSlidingX -> j
    int sliderPosition -> h
    android.widget.TextView text_label -> d
    int initialSliderPosition -> i
    int thumbWidth -> f
    boolean sliding -> g
    android.widget.ImageView img_thumb -> e
    void init(android.content.Context,android.util.AttributeSet) -> a
    void reset() -> a
com.innocomm.ilockscreen.UnlockBar$1 -> com.innocomm.ilockscreen.UnlockBar$a:
    android.widget.RelativeLayout$LayoutParams val$params -> a
    com.innocomm.ilockscreen.UnlockBar this$0 -> b
    1:1:android.widget.ImageView com.innocomm.ilockscreen.UnlockBar.access$000(com.innocomm.ilockscreen.UnlockBar):0:0 -> onAnimationUpdate
    1:1:void onAnimationUpdate(android.animation.ValueAnimator):0 -> onAnimationUpdate
    2:2:void onAnimationUpdate(android.animation.ValueAnimator):0:0 -> onAnimationUpdate
com.innocomm.ilockscreen.UnlockBar$2 -> o9:
    com.innocomm.ilockscreen.UnlockBar this$0 -> b
    1:1:android.widget.ImageView com.innocomm.ilockscreen.UnlockBar.access$000(com.innocomm.ilockscreen.UnlockBar):0:0 -> onGlobalLayout
    1:1:void onGlobalLayout():0 -> onGlobalLayout
    2:2:void onGlobalLayout():0:0 -> onGlobalLayout
    3:3:int com.innocomm.ilockscreen.UnlockBar.dpToPx(int):0:0 -> onGlobalLayout
    3:3:int com.innocomm.ilockscreen.UnlockBar.access$200(com.innocomm.ilockscreen.UnlockBar,int):0 -> onGlobalLayout
    3:3:void onGlobalLayout():0 -> onGlobalLayout
    4:4:int com.innocomm.ilockscreen.UnlockBar.access$102(com.innocomm.ilockscreen.UnlockBar,int):0:0 -> onGlobalLayout
    4:4:void onGlobalLayout():0 -> onGlobalLayout
    5:5:void onGlobalLayout():0:0 -> onGlobalLayout
    6:6:int com.innocomm.ilockscreen.UnlockBar.access$100(com.innocomm.ilockscreen.UnlockBar):0:0 -> onGlobalLayout
    6:6:void onGlobalLayout():0 -> onGlobalLayout
    7:7:void onGlobalLayout():0:0 -> onGlobalLayout
    8:8:int com.innocomm.ilockscreen.UnlockBar.access$302(com.innocomm.ilockscreen.UnlockBar,int):0:0 -> onGlobalLayout
    8:8:void onGlobalLayout():0 -> onGlobalLayout
    9:9:android.widget.ImageView com.innocomm.ilockscreen.UnlockBar.access$000(com.innocomm.ilockscreen.UnlockBar):0:0 -> onGlobalLayout
    9:9:void onGlobalLayout():0 -> onGlobalLayout
    10:10:void onGlobalLayout():0:0 -> onGlobalLayout
    11:11:int com.innocomm.ilockscreen.UnlockBar.access$100(com.innocomm.ilockscreen.UnlockBar):0:0 -> onGlobalLayout
    11:11:void onGlobalLayout():0 -> onGlobalLayout
    12:12:void onGlobalLayout():0:0 -> onGlobalLayout
    13:13:android.widget.ImageView com.innocomm.ilockscreen.UnlockBar.access$000(com.innocomm.ilockscreen.UnlockBar):0:0 -> onGlobalLayout
    13:13:void onGlobalLayout():0 -> onGlobalLayout
    14:14:void onGlobalLayout():0:0 -> onGlobalLayout
com.innocomm.ilockscreen.UnlockBar$OnUnlockListener -> com.innocomm.ilockscreen.UnlockBar$b:
    void onUnlock() -> a
com.nabinbhandari.android.permissions.Permissions$Options -> p9:
    boolean sendBlockedToSettings -> f
    boolean createNewTask -> g
    java.lang.String rationaleDialogTitle -> c
    java.lang.String settingsText -> b
    java.lang.String settingsDialogMessage -> e
    java.lang.String settingsDialogTitle -> d
com.nabinbhandari.android.permissions.PermissionsActivity -> com.nabinbhandari.android.permissions.PermissionsActivity:
    com.nabinbhandari.android.permissions.Permissions$Options options -> e
    java.util.ArrayList noRationaleList -> d
    java.util.ArrayList deniedPermissions -> c
    java.util.ArrayList allPermissions -> b
    1:1:void deny():0:0 -> a
    1:1:void access$200(com.nabinbhandari.android.permissions.PermissionsActivity):0 -> a
    java.lang.String[] toArray(java.util.ArrayList) -> a
    1:1:void grant():0:0 -> onCreate
    1:1:void onCreate(android.os.Bundle):0 -> onCreate
    2:2:void onCreate(android.os.Bundle):0:0 -> onCreate
    3:3:void com.nabinbhandari.android.permissions.Permissions.log(java.lang.String):0:0 -> onCreate
    3:3:void onCreate(android.os.Bundle):0 -> onCreate
    4:4:void showRationale(java.lang.String):0:0 -> onCreate
    4:4:void onCreate(android.os.Bundle):0 -> onCreate
    5:5:void com.nabinbhandari.android.permissions.Permissions.log(java.lang.String):0:0 -> onCreate
    5:5:void onCreate(android.os.Bundle):0 -> onCreate
    6:6:void onCreate(android.os.Bundle):0:0 -> onCreate
    1:1:void onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> onRequestPermissionsResult
    2:2:void com.nabinbhandari.android.permissions.Permissions.log(java.lang.String):0:0 -> onRequestPermissionsResult
    2:2:void onRequestPermissionsResult(int,java.lang.String[],int[]):0 -> onRequestPermissionsResult
    3:3:void grant():0:0 -> onRequestPermissionsResult
    3:3:void onRequestPermissionsResult(int,java.lang.String[],int[]):0 -> onRequestPermissionsResult
    4:4:void onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> onRequestPermissionsResult
    5:5:void deny():0:0 -> onRequestPermissionsResult
    5:5:void onRequestPermissionsResult(int,java.lang.String[],int[]):0 -> onRequestPermissionsResult
    6:6:void onRequestPermissionsResult(int,java.lang.String[],int[]):0:0 -> onRequestPermissionsResult
com.nabinbhandari.android.permissions.PermissionsActivity$1 -> q9:
    com.nabinbhandari.android.permissions.PermissionsActivity this$0 -> b
    1:1:java.util.ArrayList com.nabinbhandari.android.permissions.PermissionsActivity.access$000(com.nabinbhandari.android.permissions.PermissionsActivity):0:0 -> onClick
    1:1:void onClick(android.content.DialogInterface,int):0 -> onClick
    2:2:java.lang.String[] com.nabinbhandari.android.permissions.PermissionsActivity.access$100(com.nabinbhandari.android.permissions.PermissionsActivity,java.util.ArrayList):0:0 -> onClick
    2:2:void onClick(android.content.DialogInterface,int):0 -> onClick
    3:3:void onClick(android.content.DialogInterface,int):0:0 -> onClick
com.nabinbhandari.android.permissions.PermissionsActivity$2 -> r9:
    com.nabinbhandari.android.permissions.PermissionsActivity this$0 -> b
